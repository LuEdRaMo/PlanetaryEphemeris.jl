# Methods of TaylorIntegration.jetcoeffs! generated by @taylorize for the functions in 
# src/dynamical_model.jl

# Do not modify this file by hand, to update the functions do the following:
# 1.- Update the corresponding function in src/dynamical_model.jl
# 2.- using TaylorIntegration
# 2.- ex = :(paste here the modified function)
# 3.- x = TaylorIntegration._make_parsed_coeffs(ex)
# 4.- Paste x in this file 

# TaylorIntegration.jetcoeffs! method for src/dynamical_model.jl: NBP_pN_A_J23E_J23M_J2S!
function TaylorIntegration.jetcoeffs!(::Val{NBP_pN_A_J23E_J23M_J2S!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params) where {_T <: Real, _S <: Number, _N}
    order = t.order
    local (N, jd0) = params
    local S = eltype(q)
    local N_ext = 11
    local zero_q_1 = zero(q[1])
    local one_t = one(t)
    local dsj2k = t + (jd0 - J2000)
    local I_m_t = (ITM_und - I_c) .* one_t
    local dI_m_t = ordpres_differentiate.(I_m_t)
    local inv_I_m_t = inv(I_m_t)
    local I_c_t = I_c .* one_t
    local inv_I_c_t = inv(I_c_t)
    local I_M_t = I_m_t + I_c_t
    X = Array{S}(undef, N, N)
    Y = Array{S}(undef, N, N)
    Z = Array{S}(undef, N, N)
    r_p2 = Array{S}(undef, N, N)
    r_p1d2 = Array{S}(undef, N, N)
    r_p3d2 = Array{S}(undef, N, N)
    r_p7d2 = Array{S}(undef, N, N)
    newtonX = Array{S}(undef, N)
    newtonY = Array{S}(undef, N)
    newtonZ = Array{S}(undef, N)
    newtonianCoeff = Array{S}(undef, N, N)
    U = Array{S}(undef, N, N)
    V = Array{S}(undef, N, N)
    W = Array{S}(undef, N, N)
    _4U_m_3X = Array{S}(undef, N, N)
    _4V_m_3Y = Array{S}(undef, N, N)
    _4W_m_3Z = Array{S}(undef, N, N)
    UU = Array{S}(undef, N, N)
    VV = Array{S}(undef, N, N)
    WW = Array{S}(undef, N, N)
    newtonian1b_Potential = Array{S}(undef, N, N)
    newtonianNb_Potential = Array{S}(undef, N)
    newton_acc_X = Array{S}(undef, N, N)
    newton_acc_Y = Array{S}(undef, N, N)
    newton_acc_Z = Array{S}(undef, N, N)
    v2 = Array{S}(undef, N)
    _2v2 = Array{S}(undef, N, N)
    vi_dot_vj = Array{S}(undef, N, N)
    pn2 = Array{S}(undef, N, N)
    U_t_pn2 = Array{S}(undef, N, N)
    V_t_pn2 = Array{S}(undef, N, N)
    W_t_pn2 = Array{S}(undef, N, N)
    pn3 = Array{S}(undef, N, N)
    pNX_t_pn3 = Array{S}(undef, N, N)
    pNY_t_pn3 = Array{S}(undef, N, N)
    pNZ_t_pn3 = Array{S}(undef, N, N)
    _4ϕj = Array{S}(undef, N, N)
    ϕi_plus_4ϕj = Array{S}(undef, N, N)
    sj2_plus_2si2 = Array{S}(undef, N, N)
    sj2_plus_2si2_minus_4vivj = Array{S}(undef, N, N)
    ϕs_and_vs = Array{S}(undef, N, N)
    pn1t1_7 = Array{S}(undef, N, N)
    pNX_t_X = Array{S}(undef, N, N)
    pNY_t_Y = Array{S}(undef, N, N)
    pNZ_t_Z = Array{S}(undef, N, N)
    pn1 = Array{S}(undef, N, N)
    X_t_pn1 = Array{S}(undef, N, N)
    Y_t_pn1 = Array{S}(undef, N, N)
    Z_t_pn1 = Array{S}(undef, N, N)
    pntempX = Array{S}(undef, N)
    pntempY = Array{S}(undef, N)
    pntempZ = Array{S}(undef, N)
    postNewtonX = Array{S}(undef, N)
    postNewtonY = Array{S}(undef, N)
    postNewtonZ = Array{S}(undef, N)
    X_bf_1 = Array{S}(undef, N_ext, N_ext)
    Y_bf_1 = Array{S}(undef, N_ext, N_ext)
    Z_bf_1 = Array{S}(undef, N_ext, N_ext)
    X_bf_2 = Array{S}(undef, N_ext, N_ext)
    Y_bf_2 = Array{S}(undef, N_ext, N_ext)
    Z_bf_2 = Array{S}(undef, N_ext, N_ext)
    X_bf_3 = Array{S}(undef, N_ext, N_ext)
    Y_bf_3 = Array{S}(undef, N_ext, N_ext)
    Z_bf_3 = Array{S}(undef, N_ext, N_ext)
    X_bf = Array{S}(undef, N_ext, N_ext)
    Y_bf = Array{S}(undef, N_ext, N_ext)
    Z_bf = Array{S}(undef, N_ext, N_ext)
    F_JCS_x = Array{S}(undef, N_ext, N_ext)
    F_JCS_y = Array{S}(undef, N_ext, N_ext)
    F_JCS_z = Array{S}(undef, N_ext, N_ext)
    temp_accX_j = Array{S}(undef, N_ext, N_ext)
    temp_accY_j = Array{S}(undef, N_ext, N_ext)
    temp_accZ_j = Array{S}(undef, N_ext, N_ext)
    temp_accX_i = Array{S}(undef, N_ext, N_ext)
    temp_accY_i = Array{S}(undef, N_ext, N_ext)
    temp_accZ_i = Array{S}(undef, N_ext, N_ext)
    sin_ϕ = Array{S}(undef, N_ext, N_ext)
    cos_ϕ = Array{S}(undef, N_ext, N_ext)
    sin_λ = Array{S}(undef, N_ext, N_ext)
    cos_λ = Array{S}(undef, N_ext, N_ext)
    r_xy = Array{S}(undef, N_ext, N_ext)
    r_p4 = Array{S}(undef, N_ext, N_ext)
    P_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    dP_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjξ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjζ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_rn = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_CS_ξ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_η = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_ζ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    F_CS_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_η_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ζ_36 = Array{S}(undef, N_ext, N_ext)
    sin_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    cos_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    Cnm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Cnm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    secϕ_P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    cosϕ_dP_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    F_J_ξ = Array{S}(undef, N_ext, N_ext)
    F_J_η = Array{S}(undef, N_ext, N_ext)
    F_J_ζ = Array{S}(undef, N_ext, N_ext)
    F_CS_ξ = Array{S}(undef, N_ext, N_ext)
    F_CS_η = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ = Array{S}(undef, N_ext, N_ext)
    F_JCS_ξ = Array{S}(undef, N_ext, N_ext)
    F_JCS_η = Array{S}(undef, N_ext, N_ext)
    F_JCS_ζ = Array{S}(undef, N_ext, N_ext)
    Rb2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    Gc2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    accX = Array{S}(undef, N_ext)
    accY = Array{S}(undef, N_ext)
    accZ = Array{S}(undef, N_ext)
    N_MfigM_pmA_x = Array{S}(undef, N_ext)
    N_MfigM_pmA_y = Array{S}(undef, N_ext)
    N_MfigM_pmA_z = Array{S}(undef, N_ext)
    temp_N_M_x = Array{S}(undef, N_ext)
    temp_N_M_y = Array{S}(undef, N_ext)
    temp_N_M_z = Array{S}(undef, N_ext)
    N_MfigM = Array{S}(undef, 3)
    N_MfigM[1] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[2] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[3] = Taylor1(identity(constant_term(zero_q_1)), order)
    local αs = deg2rad(α_p_sun * one_t)
    local δs = deg2rad(δ_p_sun * one_t)
    RotM = Array{S}(undef, 3, 3, 5)
    local RotM[:, :, ea] = c2t_jpl_de430(dsj2k)
    local RotM[:, :, su] = pole_rotation(αs, δs)
    ϕ_m = Taylor1(identity(constant_term(q[6N + 1])), order)
    θ_m = Taylor1(identity(constant_term(q[6N + 2])), order)
    ψ_m = Taylor1(identity(constant_term(q[6N + 3])), order)
    tmp1165 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1899 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1166 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1900 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1167 = Taylor1(constant_term(tmp1165) * constant_term(tmp1166), order)
    tmp1168 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1901 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1169 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1902 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1170 = Taylor1(constant_term(tmp1168) * constant_term(tmp1169), order)
    tmp1171 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1903 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1172 = Taylor1(constant_term(tmp1170) * constant_term(tmp1171), order)
    RotM[1, 1, mo] = Taylor1(constant_term(tmp1167) - constant_term(tmp1172), order)
    tmp1174 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1904 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1175 = Taylor1(-(constant_term(tmp1174)), order)
    tmp1176 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1905 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1177 = Taylor1(constant_term(tmp1175) * constant_term(tmp1176), order)
    tmp1178 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1906 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1179 = Taylor1(constant_term(tmp1177) * constant_term(tmp1178), order)
    tmp1180 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1907 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1181 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1908 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1182 = Taylor1(constant_term(tmp1180) * constant_term(tmp1181), order)
    RotM[2, 1, mo] = Taylor1(constant_term(tmp1179) - constant_term(tmp1182), order)
    tmp1184 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1909 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1185 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1910 = Taylor1(cos(constant_term(ϕ_m)), order)
    RotM[3, 1, mo] = Taylor1(constant_term(tmp1184) * constant_term(tmp1185), order)
    tmp1187 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1911 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1188 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1912 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1189 = Taylor1(constant_term(tmp1187) * constant_term(tmp1188), order)
    tmp1190 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1913 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1191 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1914 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1192 = Taylor1(constant_term(tmp1190) * constant_term(tmp1191), order)
    tmp1193 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1915 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1194 = Taylor1(constant_term(tmp1192) * constant_term(tmp1193), order)
    RotM[1, 2, mo] = Taylor1(constant_term(tmp1189) + constant_term(tmp1194), order)
    tmp1196 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1916 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1197 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1917 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1198 = Taylor1(constant_term(tmp1196) * constant_term(tmp1197), order)
    tmp1199 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1918 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1200 = Taylor1(constant_term(tmp1198) * constant_term(tmp1199), order)
    tmp1201 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1919 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1202 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1920 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1203 = Taylor1(constant_term(tmp1201) * constant_term(tmp1202), order)
    RotM[2, 2, mo] = Taylor1(constant_term(tmp1200) - constant_term(tmp1203), order)
    tmp1205 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp1921 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp1206 = Taylor1(-(constant_term(tmp1205)), order)
    tmp1207 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1922 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[3, 2, mo] = Taylor1(constant_term(tmp1206) * constant_term(tmp1207), order)
    tmp1209 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1923 = Taylor1(cos(constant_term(θ_m)), order)
    tmp1210 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1924 = Taylor1(cos(constant_term(ψ_m)), order)
    RotM[1, 3, mo] = Taylor1(constant_term(tmp1209) * constant_term(tmp1210), order)
    tmp1212 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp1925 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp1213 = Taylor1(sin(constant_term(θ_m)), order)
    tmp1926 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[2, 3, mo] = Taylor1(constant_term(tmp1212) * constant_term(tmp1213), order)
    RotM[3, 3, mo] = Taylor1(cos(constant_term(θ_m)), order)
    tmp1927 = Taylor1(sin(constant_term(θ_m)), order)
    mantlef2coref = Array{S}(undef, 3, 3)
    ϕ_c = Taylor1(identity(constant_term(q[6N + 7])), order)
    tmp1216 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1928 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1217 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(tmp1216), order)
    tmp1218 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1929 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1219 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp1218), order)
    mantlef2coref[1, 1] = Taylor1(constant_term(tmp1217) + constant_term(tmp1219), order)
    tmp1221 = Taylor1(-(constant_term(RotM[1, 1, mo])), order)
    tmp1222 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1930 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1223 = Taylor1(constant_term(tmp1221) * constant_term(tmp1222), order)
    tmp1224 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1931 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1225 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp1224), order)
    mantlef2coref[2, 1] = Taylor1(constant_term(tmp1223) + constant_term(tmp1225), order)
    mantlef2coref[3, 1] = Taylor1(identity(constant_term(RotM[1, 3, mo])), order)
    tmp1227 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1932 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1228 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(tmp1227), order)
    tmp1229 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1933 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1230 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp1229), order)
    mantlef2coref[1, 2] = Taylor1(constant_term(tmp1228) + constant_term(tmp1230), order)
    tmp1232 = Taylor1(-(constant_term(RotM[2, 1, mo])), order)
    tmp1233 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1934 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1234 = Taylor1(constant_term(tmp1232) * constant_term(tmp1233), order)
    tmp1235 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1935 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1236 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp1235), order)
    mantlef2coref[2, 2] = Taylor1(constant_term(tmp1234) + constant_term(tmp1236), order)
    mantlef2coref[3, 2] = Taylor1(identity(constant_term(RotM[2, 3, mo])), order)
    tmp1238 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1936 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1239 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(tmp1238), order)
    tmp1240 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1937 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1241 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp1240), order)
    mantlef2coref[1, 3] = Taylor1(constant_term(tmp1239) + constant_term(tmp1241), order)
    tmp1243 = Taylor1(-(constant_term(RotM[3, 1, mo])), order)
    tmp1244 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1938 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1245 = Taylor1(constant_term(tmp1243) * constant_term(tmp1244), order)
    tmp1246 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp1939 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp1247 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp1246), order)
    mantlef2coref[2, 3] = Taylor1(constant_term(tmp1245) + constant_term(tmp1247), order)
    mantlef2coref[3, 3] = Taylor1(identity(constant_term(RotM[3, 3, mo])), order)
    tmp1249 = Taylor1(constant_term(mantlef2coref[1, 1]) * constant_term(q[6N + 10]), order)
    tmp1250 = Taylor1(constant_term(mantlef2coref[1, 2]) * constant_term(q[6N + 11]), order)
    tmp1251 = Taylor1(constant_term(mantlef2coref[1, 3]) * constant_term(q[6N + 12]), order)
    tmp1252 = Taylor1(constant_term(tmp1250) + constant_term(tmp1251), order)
    ω_c_CE_1 = Taylor1(constant_term(tmp1249) + constant_term(tmp1252), order)
    tmp1254 = Taylor1(constant_term(mantlef2coref[2, 1]) * constant_term(q[6N + 10]), order)
    tmp1255 = Taylor1(constant_term(mantlef2coref[2, 2]) * constant_term(q[6N + 11]), order)
    tmp1256 = Taylor1(constant_term(mantlef2coref[2, 3]) * constant_term(q[6N + 12]), order)
    tmp1257 = Taylor1(constant_term(tmp1255) + constant_term(tmp1256), order)
    ω_c_CE_2 = Taylor1(constant_term(tmp1254) + constant_term(tmp1257), order)
    tmp1259 = Taylor1(constant_term(mantlef2coref[3, 1]) * constant_term(q[6N + 10]), order)
    tmp1260 = Taylor1(constant_term(mantlef2coref[3, 2]) * constant_term(q[6N + 11]), order)
    tmp1261 = Taylor1(constant_term(mantlef2coref[3, 3]) * constant_term(q[6N + 12]), order)
    tmp1262 = Taylor1(constant_term(tmp1260) + constant_term(tmp1261), order)
    ω_c_CE_3 = Taylor1(constant_term(tmp1259) + constant_term(tmp1262), order)
    local J2E_t = (J2E + J2EDOT * (dsj2k / yr)) * RE_au ^ 2
    local J2S_t = JSEM[su, 2] * one_t
    J2_t = Array{S}(undef, 5)
    J2_t[su] = Taylor1(identity(constant_term(J2S_t)), order)
    J2_t[ea] = Taylor1(identity(constant_term(J2E_t)), order)
    local N_MfigM_figE_factor = 7.5 * μ[ea] * J2E_t
    for j = 1:N
        newtonX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        newtonY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        newtonZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        newtonianNb_Potential[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        dq[3j - 2] = Taylor1(identity(constant_term(q[3 * (N + j) - 2])), order)
        dq[3j - 1] = Taylor1(identity(constant_term(q[3 * (N + j) - 1])), order)
        dq[3j] = Taylor1(identity(constant_term(q[3 * (N + j)])), order)
    end
    for j = 1:N_ext
        accX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        accY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        accZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
    end
    tmp1271 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1271 .= Taylor1(zero(_S), order)
    tmp1273 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1273 .= Taylor1(zero(_S), order)
    tmp1276 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1276 .= Taylor1(zero(_S), order)
    tmp1278 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1278 .= Taylor1(zero(_S), order)
    tmp1281 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1281 .= Taylor1(zero(_S), order)
    tmp1283 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1283 .= Taylor1(zero(_S), order)
    pn2x = Array{Taylor1{_S}}(undef, size(X))
    pn2x .= Taylor1(zero(_S), order)
    pn2y = Array{Taylor1{_S}}(undef, size(Y))
    pn2y .= Taylor1(zero(_S), order)
    pn2z = Array{Taylor1{_S}}(undef, size(Z))
    pn2z .= Taylor1(zero(_S), order)
    tmp1291 = Array{Taylor1{_S}}(undef, size(UU))
    tmp1291 .= Taylor1(zero(_S), order)
    tmp1294 = Array{Taylor1{_S}}(undef, size(X))
    tmp1294 .= Taylor1(zero(_S), order)
    tmp1296 = Array{Taylor1{_S}}(undef, size(Y))
    tmp1296 .= Taylor1(zero(_S), order)
    tmp1297 = Array{Taylor1{_S}}(undef, size(tmp1294))
    tmp1297 .= Taylor1(zero(_S), order)
    tmp1299 = Array{Taylor1{_S}}(undef, size(Z))
    tmp1299 .= Taylor1(zero(_S), order)
    tmp1307 = Array{Taylor1{_S}}(undef, size(pn2x))
    tmp1307 .= Taylor1(zero(_S), order)
    tmp1308 = Array{Taylor1{_S}}(undef, size(tmp1307))
    tmp1308 .= Taylor1(zero(_S), order)
    tmp1319 = Array{Taylor1{_S}}(undef, size(X))
    tmp1319 .= Taylor1(zero(_S), order)
    temp_001 = Array{Taylor1{_S}}(undef, size(tmp1319))
    temp_001 .= Taylor1(zero(_S), order)
    tmp1321 = Array{Taylor1{_S}}(undef, size(Y))
    tmp1321 .= Taylor1(zero(_S), order)
    temp_002 = Array{Taylor1{_S}}(undef, size(tmp1321))
    temp_002 .= Taylor1(zero(_S), order)
    tmp1323 = Array{Taylor1{_S}}(undef, size(Z))
    tmp1323 .= Taylor1(zero(_S), order)
    temp_003 = Array{Taylor1{_S}}(undef, size(tmp1323))
    temp_003 .= Taylor1(zero(_S), order)
    temp_004 = Array{Taylor1{_S}}(undef, size(newtonian1b_Potential))
    temp_004 .= Taylor1(zero(_S), order)
    tmp1327 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1327 .= Taylor1(zero(_S), order)
    tmp1329 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1329 .= Taylor1(zero(_S), order)
    tmp1330 = Array{Taylor1{_S}}(undef, size(tmp1327))
    tmp1330 .= Taylor1(zero(_S), order)
    tmp1332 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1332 .= Taylor1(zero(_S), order)
    for j = 1:N
        for i = 1:N
            if i == j
                continue
            else
                X[i, j] = Taylor1(constant_term(q[3i - 2]) - constant_term(q[3j - 2]), order)
                Y[i, j] = Taylor1(constant_term(q[3i - 1]) - constant_term(q[3j - 1]), order)
                Z[i, j] = Taylor1(constant_term(q[3i]) - constant_term(q[3j]), order)
                U[i, j] = Taylor1(constant_term(dq[3i - 2]) - constant_term(dq[3j - 2]), order)
                V[i, j] = Taylor1(constant_term(dq[3i - 1]) - constant_term(dq[3j - 1]), order)
                W[i, j] = Taylor1(constant_term(dq[3i]) - constant_term(dq[3j]), order)
                tmp1271[3j - 2] = Taylor1(constant_term(4) * constant_term(dq[3j - 2]), order)
                tmp1273[3i - 2] = Taylor1(constant_term(3) * constant_term(dq[3i - 2]), order)
                _4U_m_3X[i, j] = Taylor1(constant_term(tmp1271[3j - 2]) - constant_term(tmp1273[3i - 2]), order)
                tmp1276[3j - 1] = Taylor1(constant_term(4) * constant_term(dq[3j - 1]), order)
                tmp1278[3i - 1] = Taylor1(constant_term(3) * constant_term(dq[3i - 1]), order)
                _4V_m_3Y[i, j] = Taylor1(constant_term(tmp1276[3j - 1]) - constant_term(tmp1278[3i - 1]), order)
                tmp1281[3j] = Taylor1(constant_term(4) * constant_term(dq[3j]), order)
                tmp1283[3i] = Taylor1(constant_term(3) * constant_term(dq[3i]), order)
                _4W_m_3Z[i, j] = Taylor1(constant_term(tmp1281[3j]) - constant_term(tmp1283[3i]), order)
                pn2x[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(_4U_m_3X[i, j]), order)
                pn2y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(_4V_m_3Y[i, j]), order)
                pn2z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(_4W_m_3Z[i, j]), order)
                UU[i, j] = Taylor1(constant_term(dq[3i - 2]) * constant_term(dq[3j - 2]), order)
                VV[i, j] = Taylor1(constant_term(dq[3i - 1]) * constant_term(dq[3j - 1]), order)
                WW[i, j] = Taylor1(constant_term(dq[3i]) * constant_term(dq[3j]), order)
                tmp1291[i, j] = Taylor1(constant_term(UU[i, j]) + constant_term(VV[i, j]), order)
                vi_dot_vj[i, j] = Taylor1(constant_term(tmp1291[i, j]) + constant_term(WW[i, j]), order)
                tmp1294[i, j] = Taylor1(constant_term(X[i, j]) ^ float(constant_term(2)), order)
                tmp1296[i, j] = Taylor1(constant_term(Y[i, j]) ^ float(constant_term(2)), order)
                tmp1297[i, j] = Taylor1(constant_term(tmp1294[i, j]) + constant_term(tmp1296[i, j]), order)
                tmp1299[i, j] = Taylor1(constant_term(Z[i, j]) ^ float(constant_term(2)), order)
                r_p2[i, j] = Taylor1(constant_term(tmp1297[i, j]) + constant_term(tmp1299[i, j]), order)
                r_p1d2[i, j] = Taylor1(sqrt(constant_term(r_p2[i, j])), order)
                r_p3d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(1.5)), order)
                r_p7d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(3.5)), order)
                newtonianCoeff[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p3d2[i, j]), order)
                tmp1307[i, j] = Taylor1(constant_term(pn2x[i, j]) + constant_term(pn2y[i, j]), order)
                tmp1308[i, j] = Taylor1(constant_term(tmp1307[i, j]) + constant_term(pn2z[i, j]), order)
                pn2[i, j] = Taylor1(constant_term(newtonianCoeff[i, j]) * constant_term(tmp1308[i, j]), order)
                newton_acc_X[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                newton_acc_Y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                newton_acc_Z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                newtonian1b_Potential[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p1d2[i, j]), order)
                pn3[i, j] = Taylor1(constant_term(3.5) * constant_term(newtonian1b_Potential[i, j]), order)
                U_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(U[i, j]), order)
                V_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(V[i, j]), order)
                W_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(W[i, j]), order)
                tmp1319[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                temp_001[i, j] = Taylor1(constant_term(newtonX[j]) + constant_term(tmp1319[i, j]), order)
                newtonX[j] = Taylor1(identity(constant_term(temp_001[i, j])), order)
                tmp1321[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                temp_002[i, j] = Taylor1(constant_term(newtonY[j]) + constant_term(tmp1321[i, j]), order)
                newtonY[j] = Taylor1(identity(constant_term(temp_002[i, j])), order)
                tmp1323[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                temp_003[i, j] = Taylor1(constant_term(newtonZ[j]) + constant_term(tmp1323[i, j]), order)
                newtonZ[j] = Taylor1(identity(constant_term(temp_003[i, j])), order)
                temp_004[i, j] = Taylor1(constant_term(newtonianNb_Potential[j]) + constant_term(newtonian1b_Potential[i, j]), order)
                newtonianNb_Potential[j] = Taylor1(identity(constant_term(temp_004[i, j])), order)
            end
        end
        tmp1327[3j - 2] = Taylor1(constant_term(dq[3j - 2]) ^ float(constant_term(2)), order)
        tmp1329[3j - 1] = Taylor1(constant_term(dq[3j - 1]) ^ float(constant_term(2)), order)
        tmp1330[3j - 2] = Taylor1(constant_term(tmp1327[3j - 2]) + constant_term(tmp1329[3j - 1]), order)
        tmp1332[3j] = Taylor1(constant_term(dq[3j]) ^ float(constant_term(2)), order)
        v2[j] = Taylor1(constant_term(tmp1330[3j - 2]) + constant_term(tmp1332[3j]), order)
    end
    tmp1334 = Taylor1(constant_term(I_M_t[1, 1]) + constant_term(I_M_t[2, 2]), order)
    tmp1336 = Taylor1(constant_term(tmp1334) / constant_term(2), order)
    tmp1337 = Taylor1(constant_term(I_M_t[3, 3]) - constant_term(tmp1336), order)
    J2M_t = Taylor1(constant_term(tmp1337) / constant_term(μ[mo]), order)
    tmp1339 = Taylor1(constant_term(I_M_t[2, 2]) - constant_term(I_M_t[1, 1]), order)
    tmp1340 = Taylor1(constant_term(tmp1339) / constant_term(μ[mo]), order)
    C22M_t = Taylor1(constant_term(tmp1340) / constant_term(4), order)
    tmp1343 = Taylor1(-(constant_term(I_M_t[1, 3])), order)
    C21M_t = Taylor1(constant_term(tmp1343) / constant_term(μ[mo]), order)
    tmp1345 = Taylor1(-(constant_term(I_M_t[3, 2])), order)
    S21M_t = Taylor1(constant_term(tmp1345) / constant_term(μ[mo]), order)
    tmp1347 = Taylor1(-(constant_term(I_M_t[2, 1])), order)
    tmp1348 = Taylor1(constant_term(tmp1347) / constant_term(μ[mo]), order)
    S22M_t = Taylor1(constant_term(tmp1348) / constant_term(2), order)
    J2_t[mo] = Taylor1(identity(constant_term(J2M_t)), order)
    tmp1360 = Array{Taylor1{_S}}(undef, size(X_bf_1))
    tmp1360 .= Taylor1(zero(_S), order)
    tmp1362 = Array{Taylor1{_S}}(undef, size(Y_bf_1))
    tmp1362 .= Taylor1(zero(_S), order)
    tmp1364 = Array{Taylor1{_S}}(undef, size(Z_bf_1))
    tmp1364 .= Taylor1(zero(_S), order)
    tmp1368 = Array{Taylor1{_S}}(undef, size(X_bf))
    tmp1368 .= Taylor1(zero(_S), order)
    tmp1370 = Array{Taylor1{_S}}(undef, size(Y_bf))
    tmp1370 .= Taylor1(zero(_S), order)
    tmp1371 = Array{Taylor1{_S}}(undef, size(tmp1368))
    tmp1371 .= Taylor1(zero(_S), order)
    tmp1376 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp1376 .= Taylor1(zero(_S), order)
    tmp1377 = Array{Taylor1{_S}}(undef, size(tmp1376))
    tmp1377 .= Taylor1(zero(_S), order)
    tmp1378 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp1378 .= Taylor1(zero(_S), order)
    tmp1380 = Array{Taylor1{_S}}(undef, size(dP_n))
    tmp1380 .= Taylor1(zero(_S), order)
    tmp1381 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp1381 .= Taylor1(zero(_S), order)
    tmp1386 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp1386 .= Taylor1(zero(_S), order)
    tmp1387 = Array{Taylor1{_S}}(undef, size(tmp1386))
    tmp1387 .= Taylor1(zero(_S), order)
    tmp1389 = Array{Taylor1{_S}}(undef, size(dP_n))
    tmp1389 .= Taylor1(zero(_S), order)
    tmp1390 = Array{Taylor1{_S}}(undef, size(tmp1389))
    tmp1390 .= Taylor1(zero(_S), order)
    tmp1391 = Array{Taylor1{_S}}(undef, size(tmp1390))
    tmp1391 .= Taylor1(zero(_S), order)
    tmp1393 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp1393 .= Taylor1(zero(_S), order)
    tmp1394 = Array{Taylor1{_S}}(undef, size(tmp1393))
    tmp1394 .= Taylor1(zero(_S), order)
    tmp1395 = Array{Taylor1{_S}}(undef, size(tmp1394))
    tmp1395 .= Taylor1(zero(_S), order)
    tmp1397 = Array{Taylor1{_S}}(undef, size(dP_n))
    tmp1397 .= Taylor1(zero(_S), order)
    tmp1398 = Array{Taylor1{_S}}(undef, size(tmp1397))
    tmp1398 .= Taylor1(zero(_S), order)
    tmp1399 = Array{Taylor1{_S}}(undef, size(tmp1398))
    tmp1399 .= Taylor1(zero(_S), order)
    tmp1400 = Array{Taylor1{_S}}(undef, size(tmp1399))
    tmp1400 .= Taylor1(zero(_S), order)
    tmp1403 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp1403 .= Taylor1(zero(_S), order)
    tmp1404 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp1404 .= Taylor1(zero(_S), order)
    tmp1406 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp1406 .= Taylor1(zero(_S), order)
    tmp1407 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp1407 .= Taylor1(zero(_S), order)
    tmp1409 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1409 .= Taylor1(zero(_S), order)
    tmp1412 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1412 .= Taylor1(zero(_S), order)
    tmp1414 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1414 .= Taylor1(zero(_S), order)
    tmp1416 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1416 .= Taylor1(zero(_S), order)
    tmp1417 = Array{Taylor1{_S}}(undef, size(tmp1416))
    tmp1417 .= Taylor1(zero(_S), order)
    tmp1418 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1418 .= Taylor1(zero(_S), order)
    tmp1421 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1421 .= Taylor1(zero(_S), order)
    tmp1422 = Array{Taylor1{_S}}(undef, size(tmp1421))
    tmp1422 .= Taylor1(zero(_S), order)
    tmp1423 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1423 .= Taylor1(zero(_S), order)
    tmp1425 = Array{Taylor1{_S}}(undef, size(P_nm))
    tmp1425 .= Taylor1(zero(_S), order)
    tmp1426 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp1426 .= Taylor1(zero(_S), order)
    tmp1427 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp1427 .= Taylor1(zero(_S), order)
    tmp1428 = Array{Taylor1{_S}}(undef, size(tmp1426))
    tmp1428 .= Taylor1(zero(_S), order)
    tmp1429 = Array{Taylor1{_S}}(undef, size(tmp1425))
    tmp1429 .= Taylor1(zero(_S), order)
    tmp1430 = Array{Taylor1{_S}}(undef, size(P_nm))
    tmp1430 .= Taylor1(zero(_S), order)
    tmp1431 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp1431 .= Taylor1(zero(_S), order)
    tmp1432 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp1432 .= Taylor1(zero(_S), order)
    tmp1433 = Array{Taylor1{_S}}(undef, size(tmp1431))
    tmp1433 .= Taylor1(zero(_S), order)
    tmp1434 = Array{Taylor1{_S}}(undef, size(tmp1430))
    tmp1434 .= Taylor1(zero(_S), order)
    tmp1435 = Array{Taylor1{_S}}(undef, size(tmp1429))
    tmp1435 .= Taylor1(zero(_S), order)
    tmp1437 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1437 .= Taylor1(zero(_S), order)
    tmp1438 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp1438 .= Taylor1(zero(_S), order)
    tmp1439 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp1439 .= Taylor1(zero(_S), order)
    tmp1440 = Array{Taylor1{_S}}(undef, size(tmp1438))
    tmp1440 .= Taylor1(zero(_S), order)
    tmp1441 = Array{Taylor1{_S}}(undef, size(tmp1437))
    tmp1441 .= Taylor1(zero(_S), order)
    tmp1442 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1442 .= Taylor1(zero(_S), order)
    tmp1443 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp1443 .= Taylor1(zero(_S), order)
    tmp1444 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp1444 .= Taylor1(zero(_S), order)
    tmp1445 = Array{Taylor1{_S}}(undef, size(tmp1443))
    tmp1445 .= Taylor1(zero(_S), order)
    tmp1446 = Array{Taylor1{_S}}(undef, size(tmp1442))
    tmp1446 .= Taylor1(zero(_S), order)
    tmp1447 = Array{Taylor1{_S}}(undef, size(tmp1441))
    tmp1447 .= Taylor1(zero(_S), order)
    tmp1449 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp1449 .= Taylor1(zero(_S), order)
    tmp1450 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp1450 .= Taylor1(zero(_S), order)
    tmp1451 = Array{Taylor1{_S}}(undef, size(tmp1449))
    tmp1451 .= Taylor1(zero(_S), order)
    tmp1452 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    tmp1452 .= Taylor1(zero(_S), order)
    tmp1453 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp1453 .= Taylor1(zero(_S), order)
    tmp1454 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp1454 .= Taylor1(zero(_S), order)
    tmp1455 = Array{Taylor1{_S}}(undef, size(tmp1453))
    tmp1455 .= Taylor1(zero(_S), order)
    tmp1456 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    tmp1456 .= Taylor1(zero(_S), order)
    tmp1457 = Array{Taylor1{_S}}(undef, size(tmp1452))
    tmp1457 .= Taylor1(zero(_S), order)
    tmp1463 = Array{Taylor1{_S}}(undef, size(P_nm))
    tmp1463 .= Taylor1(zero(_S), order)
    tmp1464 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    tmp1464 .= Taylor1(zero(_S), order)
    tmp1465 = Array{Taylor1{_S}}(undef, size(tmp1463))
    tmp1465 .= Taylor1(zero(_S), order)
    tmp1466 = Array{Taylor1{_S}}(undef, size(tmp1465))
    tmp1466 .= Taylor1(zero(_S), order)
    tmp1468 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp1468 .= Taylor1(zero(_S), order)
    tmp1469 = Array{Taylor1{_S}}(undef, size(Snm_cosmλ))
    tmp1469 .= Taylor1(zero(_S), order)
    tmp1470 = Array{Taylor1{_S}}(undef, size(tmp1468))
    tmp1470 .= Taylor1(zero(_S), order)
    tmp1471 = Array{Taylor1{_S}}(undef, size(tmp1470))
    tmp1471 .= Taylor1(zero(_S), order)
    tmp1473 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    tmp1473 .= Taylor1(zero(_S), order)
    tmp1474 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    tmp1474 .= Taylor1(zero(_S), order)
    tmp1475 = Array{Taylor1{_S}}(undef, size(tmp1474))
    tmp1475 .= Taylor1(zero(_S), order)
    tmp1477 = Array{Taylor1{_S}}(undef, size(F_J_ξ))
    tmp1477 .= Taylor1(zero(_S), order)
    tmp1478 = Array{Taylor1{_S}}(undef, size(F_CS_ξ))
    tmp1478 .= Taylor1(zero(_S), order)
    tmp1481 = Array{Taylor1{_S}}(undef, size(F_J_ζ))
    tmp1481 .= Taylor1(zero(_S), order)
    tmp1482 = Array{Taylor1{_S}}(undef, size(F_CS_ζ))
    tmp1482 .= Taylor1(zero(_S), order)
    tmp1488 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp1488 .= Taylor1(zero(_S), order)
    tmp1491 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp1491 .= Taylor1(zero(_S), order)
    tmp1493 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1493 .= Taylor1(zero(_S), order)
    tmp1494 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1494 .= Taylor1(zero(_S), order)
    tmp1495 = Array{Taylor1{_S}}(undef, size(tmp1493))
    tmp1495 .= Taylor1(zero(_S), order)
    tmp1496 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1496 .= Taylor1(zero(_S), order)
    tmp1498 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1498 .= Taylor1(zero(_S), order)
    tmp1499 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1499 .= Taylor1(zero(_S), order)
    tmp1500 = Array{Taylor1{_S}}(undef, size(tmp1498))
    tmp1500 .= Taylor1(zero(_S), order)
    tmp1501 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1501 .= Taylor1(zero(_S), order)
    tmp1503 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1503 .= Taylor1(zero(_S), order)
    tmp1504 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1504 .= Taylor1(zero(_S), order)
    tmp1505 = Array{Taylor1{_S}}(undef, size(tmp1503))
    tmp1505 .= Taylor1(zero(_S), order)
    tmp1506 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1506 .= Taylor1(zero(_S), order)
    tmp1508 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1508 .= Taylor1(zero(_S), order)
    tmp1509 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1509 .= Taylor1(zero(_S), order)
    tmp1510 = Array{Taylor1{_S}}(undef, size(tmp1508))
    tmp1510 .= Taylor1(zero(_S), order)
    tmp1511 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1511 .= Taylor1(zero(_S), order)
    tmp1513 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1513 .= Taylor1(zero(_S), order)
    tmp1514 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1514 .= Taylor1(zero(_S), order)
    tmp1515 = Array{Taylor1{_S}}(undef, size(tmp1513))
    tmp1515 .= Taylor1(zero(_S), order)
    tmp1516 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1516 .= Taylor1(zero(_S), order)
    tmp1518 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1518 .= Taylor1(zero(_S), order)
    tmp1519 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1519 .= Taylor1(zero(_S), order)
    tmp1520 = Array{Taylor1{_S}}(undef, size(tmp1518))
    tmp1520 .= Taylor1(zero(_S), order)
    tmp1521 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1521 .= Taylor1(zero(_S), order)
    tmp1523 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1523 .= Taylor1(zero(_S), order)
    tmp1524 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1524 .= Taylor1(zero(_S), order)
    tmp1525 = Array{Taylor1{_S}}(undef, size(tmp1523))
    tmp1525 .= Taylor1(zero(_S), order)
    tmp1526 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1526 .= Taylor1(zero(_S), order)
    tmp1528 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1528 .= Taylor1(zero(_S), order)
    tmp1529 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1529 .= Taylor1(zero(_S), order)
    tmp1530 = Array{Taylor1{_S}}(undef, size(tmp1528))
    tmp1530 .= Taylor1(zero(_S), order)
    tmp1531 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1531 .= Taylor1(zero(_S), order)
    tmp1533 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1533 .= Taylor1(zero(_S), order)
    tmp1534 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1534 .= Taylor1(zero(_S), order)
    tmp1535 = Array{Taylor1{_S}}(undef, size(tmp1533))
    tmp1535 .= Taylor1(zero(_S), order)
    tmp1536 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp1536 .= Taylor1(zero(_S), order)
    tmp1538 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp1538 .= Taylor1(zero(_S), order)
    tmp1539 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp1539 .= Taylor1(zero(_S), order)
    tmp1540 = Array{Taylor1{_S}}(undef, size(tmp1538))
    tmp1540 .= Taylor1(zero(_S), order)
    tmp1541 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp1541 .= Taylor1(zero(_S), order)
    tmp1543 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp1543 .= Taylor1(zero(_S), order)
    tmp1544 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp1544 .= Taylor1(zero(_S), order)
    tmp1545 = Array{Taylor1{_S}}(undef, size(tmp1543))
    tmp1545 .= Taylor1(zero(_S), order)
    tmp1546 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp1546 .= Taylor1(zero(_S), order)
    tmp1548 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp1548 .= Taylor1(zero(_S), order)
    tmp1549 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp1549 .= Taylor1(zero(_S), order)
    tmp1550 = Array{Taylor1{_S}}(undef, size(tmp1548))
    tmp1550 .= Taylor1(zero(_S), order)
    tmp1551 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp1551 .= Taylor1(zero(_S), order)
    for j = 1:N_ext
        for i = 1:N_ext
            if i == j
                continue
            else
                if UJ_interaction[i, j]
                    X_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[1, 1, j]), order)
                    X_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[1, 2, j]), order)
                    X_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[1, 3, j]), order)
                    Y_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[2, 1, j]), order)
                    Y_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[2, 2, j]), order)
                    Y_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[2, 3, j]), order)
                    Z_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[3, 1, j]), order)
                    Z_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[3, 2, j]), order)
                    Z_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[3, 3, j]), order)
                    tmp1360[i, j] = Taylor1(constant_term(X_bf_1[i, j]) + constant_term(X_bf_2[i, j]), order)
                    X_bf[i, j] = Taylor1(constant_term(tmp1360[i, j]) + constant_term(X_bf_3[i, j]), order)
                    tmp1362[i, j] = Taylor1(constant_term(Y_bf_1[i, j]) + constant_term(Y_bf_2[i, j]), order)
                    Y_bf[i, j] = Taylor1(constant_term(tmp1362[i, j]) + constant_term(Y_bf_3[i, j]), order)
                    tmp1364[i, j] = Taylor1(constant_term(Z_bf_1[i, j]) + constant_term(Z_bf_2[i, j]), order)
                    Z_bf[i, j] = Taylor1(constant_term(tmp1364[i, j]) + constant_term(Z_bf_3[i, j]), order)
                    sin_ϕ[i, j] = Taylor1(constant_term(Z_bf[i, j]) / constant_term(r_p1d2[i, j]), order)
                    tmp1368[i, j] = Taylor1(constant_term(X_bf[i, j]) ^ float(constant_term(2)), order)
                    tmp1370[i, j] = Taylor1(constant_term(Y_bf[i, j]) ^ float(constant_term(2)), order)
                    tmp1371[i, j] = Taylor1(constant_term(tmp1368[i, j]) + constant_term(tmp1370[i, j]), order)
                    r_xy[i, j] = Taylor1(sqrt(constant_term(tmp1371[i, j])), order)
                    cos_ϕ[i, j] = Taylor1(constant_term(r_xy[i, j]) / constant_term(r_p1d2[i, j]), order)
                    sin_λ[i, j] = Taylor1(constant_term(Y_bf[i, j]) / constant_term(r_xy[i, j]), order)
                    cos_λ[i, j] = Taylor1(constant_term(X_bf[i, j]) / constant_term(r_xy[i, j]), order)
                    P_n[i, j, 1] = Taylor1(identity(constant_term(one_t)), order)
                    P_n[i, j, 2] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                    dP_n[i, j, 1] = Taylor1(identity(constant_term(zero_q_1)), order)
                    dP_n[i, j, 2] = Taylor1(identity(constant_term(one_t)), order)
                    for n = 2:n1SEM[j]
                        tmp1376[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                        tmp1377[i, j, n] = Taylor1(constant_term(tmp1376[i, j, n]) * constant_term(fact1_jsem[n]), order)
                        tmp1378[i, j, n - 1] = Taylor1(constant_term(P_n[i, j, n - 1]) * constant_term(fact2_jsem[n]), order)
                        P_n[i, j, n + 1] = Taylor1(constant_term(tmp1377[i, j, n]) - constant_term(tmp1378[i, j, n - 1]), order)
                        tmp1380[i, j, n] = Taylor1(constant_term(dP_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                        tmp1381[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(fact3_jsem[n]), order)
                        dP_n[i, j, n + 1] = Taylor1(constant_term(tmp1380[i, j, n]) + constant_term(tmp1381[i, j, n]), order)
                        temp_rn[i, j, n] = Taylor1(constant_term(r_p1d2[i, j]) ^ float(constant_term(fact5_jsem[n])), order)
                    end
                    r_p4[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(2)), order)
                    tmp1386[i, j, 3] = Taylor1(constant_term(P_n[i, j, 3]) * constant_term(fact4_jsem[2]), order)
                    tmp1387[i, j, 3] = Taylor1(constant_term(tmp1386[i, j, 3]) * constant_term(J2_t[j]), order)
                    F_J_ξ[i, j] = Taylor1(constant_term(tmp1387[i, j, 3]) / constant_term(r_p4[i, j]), order)
                    tmp1389[i, j, 3] = Taylor1(-(constant_term(dP_n[i, j, 3])), order)
                    tmp1390[i, j, 3] = Taylor1(constant_term(tmp1389[i, j, 3]) * constant_term(cos_ϕ[i, j]), order)
                    tmp1391[i, j, 3] = Taylor1(constant_term(tmp1390[i, j, 3]) * constant_term(J2_t[j]), order)
                    F_J_ζ[i, j] = Taylor1(constant_term(tmp1391[i, j, 3]) / constant_term(r_p4[i, j]), order)
                    F_J_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                    F_J_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                    for n = 3:n1SEM[j]
                        tmp1393[i, j, n + 1] = Taylor1(constant_term(P_n[i, j, n + 1]) * constant_term(fact4_jsem[n]), order)
                        tmp1394[i, j, n + 1] = Taylor1(constant_term(tmp1393[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                        tmp1395[i, j, n + 1] = Taylor1(constant_term(tmp1394[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                        temp_fjξ[i, j, n] = Taylor1(constant_term(tmp1395[i, j, n + 1]) + constant_term(F_J_ξ_36[i, j]), order)
                        tmp1397[i, j, n + 1] = Taylor1(-(constant_term(dP_n[i, j, n + 1])), order)
                        tmp1398[i, j, n + 1] = Taylor1(constant_term(tmp1397[i, j, n + 1]) * constant_term(cos_ϕ[i, j]), order)
                        tmp1399[i, j, n + 1] = Taylor1(constant_term(tmp1398[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                        tmp1400[i, j, n + 1] = Taylor1(constant_term(tmp1399[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                        temp_fjζ[i, j, n] = Taylor1(constant_term(tmp1400[i, j, n + 1]) + constant_term(F_J_ζ_36[i, j]), order)
                        F_J_ξ_36[i, j] = Taylor1(identity(constant_term(temp_fjξ[i, j, n])), order)
                        F_J_ζ_36[i, j] = Taylor1(identity(constant_term(temp_fjζ[i, j, n])), order)
                    end
                    if j == mo
                        for m = 1:n1SEM[mo]
                            if m == 1
                                sin_mλ[i, j, 1] = Taylor1(identity(constant_term(sin_λ[i, j])), order)
                                cos_mλ[i, j, 1] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                                secϕ_P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(one_t)), order)
                                P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                                cosϕ_dP_nm[i, j, 1, 1] = Taylor1(constant_term(sin_ϕ[i, j]) * constant_term(lnm3[1]), order)
                            else
                                tmp1403[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                tmp1404[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                sin_mλ[i, j, m] = Taylor1(constant_term(tmp1403[i, j, m - 1]) + constant_term(tmp1404[i, j, m - 1]), order)
                                tmp1406[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                tmp1407[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                cos_mλ[i, j, m] = Taylor1(constant_term(tmp1406[i, j, m - 1]) - constant_term(tmp1407[i, j, m - 1]), order)
                                tmp1409[i, j, m - 1, m - 1] = Taylor1(constant_term(secϕ_P_nm[i, j, m - 1, m - 1]) * constant_term(cos_ϕ[i, j]), order)
                                secϕ_P_nm[i, j, m, m] = Taylor1(constant_term(tmp1409[i, j, m - 1, m - 1]) * constant_term(lnm5[m]), order)
                                P_nm[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(cos_ϕ[i, j]), order)
                                tmp1412[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(sin_ϕ[i, j]), order)
                                cosϕ_dP_nm[i, j, m, m] = Taylor1(constant_term(tmp1412[i, j, m, m]) * constant_term(lnm3[m]), order)
                            end
                            for n = m + 1:n1SEM[mo]
                                if n == m + 1
                                    tmp1414[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                    secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp1414[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                else
                                    tmp1416[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                    tmp1417[i, j, n - 1, m] = Taylor1(constant_term(tmp1416[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                    tmp1418[i, j, n - 2, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 2, m]) * constant_term(lnm2[n, m]), order)
                                    secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp1417[i, j, n - 1, m]) + constant_term(tmp1418[i, j, n - 2, m]), order)
                                end
                                P_nm[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(cos_ϕ[i, j]), order)
                                tmp1421[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(sin_ϕ[i, j]), order)
                                tmp1422[i, j, n, m] = Taylor1(constant_term(tmp1421[i, j, n, m]) * constant_term(lnm3[n]), order)
                                tmp1423[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(lnm4[n, m]), order)
                                cosϕ_dP_nm[i, j, n, m] = Taylor1(constant_term(tmp1422[i, j, n, m]) + constant_term(tmp1423[i, j, n - 1, m]), order)
                            end
                        end
                        tmp1425[i, j, 2, 1] = Taylor1(constant_term(P_nm[i, j, 2, 1]) * constant_term(lnm6[2]), order)
                        tmp1426[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                        tmp1427[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                        tmp1428[i, j, 1] = Taylor1(constant_term(tmp1426[i, j, 1]) + constant_term(tmp1427[i, j, 1]), order)
                        tmp1429[i, j, 2, 1] = Taylor1(constant_term(tmp1425[i, j, 2, 1]) * constant_term(tmp1428[i, j, 1]), order)
                        tmp1430[i, j, 2, 2] = Taylor1(constant_term(P_nm[i, j, 2, 2]) * constant_term(lnm6[2]), order)
                        tmp1431[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                        tmp1432[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                        tmp1433[i, j, 2] = Taylor1(constant_term(tmp1431[i, j, 2]) + constant_term(tmp1432[i, j, 2]), order)
                        tmp1434[i, j, 2, 2] = Taylor1(constant_term(tmp1430[i, j, 2, 2]) * constant_term(tmp1433[i, j, 2]), order)
                        tmp1435[i, j, 2, 1] = Taylor1(constant_term(tmp1429[i, j, 2, 1]) + constant_term(tmp1434[i, j, 2, 2]), order)
                        F_CS_ξ[i, j] = Taylor1(constant_term(tmp1435[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                        tmp1437[i, j, 2, 1] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 1]) * constant_term(lnm7[1]), order)
                        tmp1438[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                        tmp1439[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                        tmp1440[i, j, 1] = Taylor1(constant_term(tmp1438[i, j, 1]) - constant_term(tmp1439[i, j, 1]), order)
                        tmp1441[i, j, 2, 1] = Taylor1(constant_term(tmp1437[i, j, 2, 1]) * constant_term(tmp1440[i, j, 1]), order)
                        tmp1442[i, j, 2, 2] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 2]) * constant_term(lnm7[2]), order)
                        tmp1443[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                        tmp1444[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                        tmp1445[i, j, 2] = Taylor1(constant_term(tmp1443[i, j, 2]) - constant_term(tmp1444[i, j, 2]), order)
                        tmp1446[i, j, 2, 2] = Taylor1(constant_term(tmp1442[i, j, 2, 2]) * constant_term(tmp1445[i, j, 2]), order)
                        tmp1447[i, j, 2, 1] = Taylor1(constant_term(tmp1441[i, j, 2, 1]) + constant_term(tmp1446[i, j, 2, 2]), order)
                        F_CS_η[i, j] = Taylor1(constant_term(tmp1447[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                        tmp1449[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                        tmp1450[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                        tmp1451[i, j, 1] = Taylor1(constant_term(tmp1449[i, j, 1]) + constant_term(tmp1450[i, j, 1]), order)
                        tmp1452[i, j, 2, 1] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 1]) * constant_term(tmp1451[i, j, 1]), order)
                        tmp1453[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                        tmp1454[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                        tmp1455[i, j, 2] = Taylor1(constant_term(tmp1453[i, j, 2]) + constant_term(tmp1454[i, j, 2]), order)
                        tmp1456[i, j, 2, 2] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 2]) * constant_term(tmp1455[i, j, 2]), order)
                        tmp1457[i, j, 2, 1] = Taylor1(constant_term(tmp1452[i, j, 2, 1]) + constant_term(tmp1456[i, j, 2, 2]), order)
                        F_CS_ζ[i, j] = Taylor1(constant_term(tmp1457[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                        F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        F_CS_η_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        for n = 3:n2M
                            for m = 1:n
                                Cnm_cosmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                Cnm_sinmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                Snm_cosmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                Snm_sinmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                tmp1463[i, j, n, m] = Taylor1(constant_term(P_nm[i, j, n, m]) * constant_term(lnm6[n]), order)
                                tmp1464[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                tmp1465[i, j, n, m] = Taylor1(constant_term(tmp1463[i, j, n, m]) * constant_term(tmp1464[i, j, n, m]), order)
                                tmp1466[i, j, n, m] = Taylor1(constant_term(tmp1465[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                temp_CS_ξ[i, j, n, m] = Taylor1(constant_term(tmp1466[i, j, n, m]) + constant_term(F_CS_ξ_36[i, j]), order)
                                tmp1468[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(lnm7[m]), order)
                                tmp1469[i, j, n, m] = Taylor1(constant_term(Snm_cosmλ[i, j, n, m]) - constant_term(Cnm_sinmλ[i, j, n, m]), order)
                                tmp1470[i, j, n, m] = Taylor1(constant_term(tmp1468[i, j, n, m]) * constant_term(tmp1469[i, j, n, m]), order)
                                tmp1471[i, j, n, m] = Taylor1(constant_term(tmp1470[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                temp_CS_η[i, j, n, m] = Taylor1(constant_term(tmp1471[i, j, n, m]) + constant_term(F_CS_η_36[i, j]), order)
                                tmp1473[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                tmp1474[i, j, n, m] = Taylor1(constant_term(cosϕ_dP_nm[i, j, n, m]) * constant_term(tmp1473[i, j, n, m]), order)
                                tmp1475[i, j, n, m] = Taylor1(constant_term(tmp1474[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                temp_CS_ζ[i, j, n, m] = Taylor1(constant_term(tmp1475[i, j, n, m]) + constant_term(F_CS_ζ_36[i, j]), order)
                                F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ξ[i, j, n, m])), order)
                                F_CS_η_36[i, j] = Taylor1(identity(constant_term(temp_CS_η[i, j, n, m])), order)
                                F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ζ[i, j, n, m])), order)
                            end
                        end
                        tmp1477[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                        tmp1478[i, j] = Taylor1(constant_term(F_CS_ξ[i, j]) + constant_term(F_CS_ξ_36[i, j]), order)
                        F_JCS_ξ[i, j] = Taylor1(constant_term(tmp1477[i, j]) + constant_term(tmp1478[i, j]), order)
                        F_JCS_η[i, j] = Taylor1(constant_term(F_CS_η[i, j]) + constant_term(F_CS_η_36[i, j]), order)
                        tmp1481[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                        tmp1482[i, j] = Taylor1(constant_term(F_CS_ζ[i, j]) + constant_term(F_CS_ζ_36[i, j]), order)
                        F_JCS_ζ[i, j] = Taylor1(constant_term(tmp1481[i, j]) + constant_term(tmp1482[i, j]), order)
                    else
                        F_JCS_ξ[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                        F_JCS_η[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        F_JCS_ζ[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                    end
                    Rb2p[i, j, 1, 1] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(cos_λ[i, j]), order)
                    Rb2p[i, j, 2, 1] = Taylor1(-(constant_term(sin_λ[i, j])), order)
                    tmp1488[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                    Rb2p[i, j, 3, 1] = Taylor1(constant_term(tmp1488[i, j]) * constant_term(cos_λ[i, j]), order)
                    Rb2p[i, j, 1, 2] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(sin_λ[i, j]), order)
                    Rb2p[i, j, 2, 2] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                    tmp1491[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                    Rb2p[i, j, 3, 2] = Taylor1(constant_term(tmp1491[i, j]) * constant_term(sin_λ[i, j]), order)
                    Rb2p[i, j, 1, 3] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                    Rb2p[i, j, 2, 3] = Taylor1(identity(constant_term(zero_q_1)), order)
                    Rb2p[i, j, 3, 3] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                    tmp1493[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 1, j]), order)
                    tmp1494[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 1, j]), order)
                    tmp1495[i, j, 1, 1] = Taylor1(constant_term(tmp1493[i, j, 1, 1]) + constant_term(tmp1494[i, j, 1, 2]), order)
                    tmp1496[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 1, j]), order)
                    Gc2p[i, j, 1, 1] = Taylor1(constant_term(tmp1495[i, j, 1, 1]) + constant_term(tmp1496[i, j, 1, 3]), order)
                    tmp1498[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 1, j]), order)
                    tmp1499[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 1, j]), order)
                    tmp1500[i, j, 2, 1] = Taylor1(constant_term(tmp1498[i, j, 2, 1]) + constant_term(tmp1499[i, j, 2, 2]), order)
                    tmp1501[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 1, j]), order)
                    Gc2p[i, j, 2, 1] = Taylor1(constant_term(tmp1500[i, j, 2, 1]) + constant_term(tmp1501[i, j, 2, 3]), order)
                    tmp1503[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 1, j]), order)
                    tmp1504[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 1, j]), order)
                    tmp1505[i, j, 3, 1] = Taylor1(constant_term(tmp1503[i, j, 3, 1]) + constant_term(tmp1504[i, j, 3, 2]), order)
                    tmp1506[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 1, j]), order)
                    Gc2p[i, j, 3, 1] = Taylor1(constant_term(tmp1505[i, j, 3, 1]) + constant_term(tmp1506[i, j, 3, 3]), order)
                    tmp1508[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 2, j]), order)
                    tmp1509[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 2, j]), order)
                    tmp1510[i, j, 1, 1] = Taylor1(constant_term(tmp1508[i, j, 1, 1]) + constant_term(tmp1509[i, j, 1, 2]), order)
                    tmp1511[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 2, j]), order)
                    Gc2p[i, j, 1, 2] = Taylor1(constant_term(tmp1510[i, j, 1, 1]) + constant_term(tmp1511[i, j, 1, 3]), order)
                    tmp1513[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 2, j]), order)
                    tmp1514[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 2, j]), order)
                    tmp1515[i, j, 2, 1] = Taylor1(constant_term(tmp1513[i, j, 2, 1]) + constant_term(tmp1514[i, j, 2, 2]), order)
                    tmp1516[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 2, j]), order)
                    Gc2p[i, j, 2, 2] = Taylor1(constant_term(tmp1515[i, j, 2, 1]) + constant_term(tmp1516[i, j, 2, 3]), order)
                    tmp1518[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 2, j]), order)
                    tmp1519[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 2, j]), order)
                    tmp1520[i, j, 3, 1] = Taylor1(constant_term(tmp1518[i, j, 3, 1]) + constant_term(tmp1519[i, j, 3, 2]), order)
                    tmp1521[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 2, j]), order)
                    Gc2p[i, j, 3, 2] = Taylor1(constant_term(tmp1520[i, j, 3, 1]) + constant_term(tmp1521[i, j, 3, 3]), order)
                    tmp1523[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 3, j]), order)
                    tmp1524[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 3, j]), order)
                    tmp1525[i, j, 1, 1] = Taylor1(constant_term(tmp1523[i, j, 1, 1]) + constant_term(tmp1524[i, j, 1, 2]), order)
                    tmp1526[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 3, j]), order)
                    Gc2p[i, j, 1, 3] = Taylor1(constant_term(tmp1525[i, j, 1, 1]) + constant_term(tmp1526[i, j, 1, 3]), order)
                    tmp1528[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 3, j]), order)
                    tmp1529[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 3, j]), order)
                    tmp1530[i, j, 2, 1] = Taylor1(constant_term(tmp1528[i, j, 2, 1]) + constant_term(tmp1529[i, j, 2, 2]), order)
                    tmp1531[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 3, j]), order)
                    Gc2p[i, j, 2, 3] = Taylor1(constant_term(tmp1530[i, j, 2, 1]) + constant_term(tmp1531[i, j, 2, 3]), order)
                    tmp1533[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 3, j]), order)
                    tmp1534[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 3, j]), order)
                    tmp1535[i, j, 3, 1] = Taylor1(constant_term(tmp1533[i, j, 3, 1]) + constant_term(tmp1534[i, j, 3, 2]), order)
                    tmp1536[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 3, j]), order)
                    Gc2p[i, j, 3, 3] = Taylor1(constant_term(tmp1535[i, j, 3, 1]) + constant_term(tmp1536[i, j, 3, 3]), order)
                    tmp1538[i, j, 1, 1] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 1]), order)
                    tmp1539[i, j, 2, 1] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 1]), order)
                    tmp1540[i, j, 1, 1] = Taylor1(constant_term(tmp1538[i, j, 1, 1]) + constant_term(tmp1539[i, j, 2, 1]), order)
                    tmp1541[i, j, 3, 1] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 1]), order)
                    F_JCS_x[i, j] = Taylor1(constant_term(tmp1540[i, j, 1, 1]) + constant_term(tmp1541[i, j, 3, 1]), order)
                    tmp1543[i, j, 1, 2] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 2]), order)
                    tmp1544[i, j, 2, 2] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 2]), order)
                    tmp1545[i, j, 1, 2] = Taylor1(constant_term(tmp1543[i, j, 1, 2]) + constant_term(tmp1544[i, j, 2, 2]), order)
                    tmp1546[i, j, 3, 2] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 2]), order)
                    F_JCS_y[i, j] = Taylor1(constant_term(tmp1545[i, j, 1, 2]) + constant_term(tmp1546[i, j, 3, 2]), order)
                    tmp1548[i, j, 1, 3] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 3]), order)
                    tmp1549[i, j, 2, 3] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 3]), order)
                    tmp1550[i, j, 1, 3] = Taylor1(constant_term(tmp1548[i, j, 1, 3]) + constant_term(tmp1549[i, j, 2, 3]), order)
                    tmp1551[i, j, 3, 3] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 3]), order)
                    F_JCS_z[i, j] = Taylor1(constant_term(tmp1550[i, j, 1, 3]) + constant_term(tmp1551[i, j, 3, 3]), order)
                end
            end
        end
    end
    tmp1553 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    tmp1553 .= Taylor1(zero(_S), order)
    tmp1555 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    tmp1555 .= Taylor1(zero(_S), order)
    tmp1557 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    tmp1557 .= Taylor1(zero(_S), order)
    tmp1559 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    tmp1559 .= Taylor1(zero(_S), order)
    tmp1561 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    tmp1561 .= Taylor1(zero(_S), order)
    tmp1563 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    tmp1563 .= Taylor1(zero(_S), order)
    tmp1565 = Array{Taylor1{_S}}(undef, size(Y))
    tmp1565 .= Taylor1(zero(_S), order)
    tmp1566 = Array{Taylor1{_S}}(undef, size(Z))
    tmp1566 .= Taylor1(zero(_S), order)
    tmp1567 = Array{Taylor1{_S}}(undef, size(tmp1565))
    tmp1567 .= Taylor1(zero(_S), order)
    tmp1569 = Array{Taylor1{_S}}(undef, size(Z))
    tmp1569 .= Taylor1(zero(_S), order)
    tmp1570 = Array{Taylor1{_S}}(undef, size(X))
    tmp1570 .= Taylor1(zero(_S), order)
    tmp1571 = Array{Taylor1{_S}}(undef, size(tmp1569))
    tmp1571 .= Taylor1(zero(_S), order)
    tmp1573 = Array{Taylor1{_S}}(undef, size(X))
    tmp1573 .= Taylor1(zero(_S), order)
    tmp1574 = Array{Taylor1{_S}}(undef, size(Y))
    tmp1574 .= Taylor1(zero(_S), order)
    tmp1575 = Array{Taylor1{_S}}(undef, size(tmp1573))
    tmp1575 .= Taylor1(zero(_S), order)
    tmp1577 = Array{Taylor1{_S}}(undef, size(N_MfigM_pmA_x))
    tmp1577 .= Taylor1(zero(_S), order)
    tmp1579 = Array{Taylor1{_S}}(undef, size(N_MfigM_pmA_y))
    tmp1579 .= Taylor1(zero(_S), order)
    tmp1581 = Array{Taylor1{_S}}(undef, size(N_MfigM_pmA_z))
    tmp1581 .= Taylor1(zero(_S), order)
    for j = 1:N_ext
        for i = 1:N_ext
            if i == j
                continue
            else
                if UJ_interaction[i, j]
                    tmp1553[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_j[i, j] = Taylor1(constant_term(accX[j]) - constant_term(tmp1553[i, j]), order)
                    accX[j] = Taylor1(identity(constant_term(temp_accX_j[i, j])), order)
                    tmp1555[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_j[i, j] = Taylor1(constant_term(accY[j]) - constant_term(tmp1555[i, j]), order)
                    accY[j] = Taylor1(identity(constant_term(temp_accY_j[i, j])), order)
                    tmp1557[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_j[i, j] = Taylor1(constant_term(accZ[j]) - constant_term(tmp1557[i, j]), order)
                    accZ[j] = Taylor1(identity(constant_term(temp_accZ_j[i, j])), order)
                    tmp1559[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_i[i, j] = Taylor1(constant_term(accX[i]) + constant_term(tmp1559[i, j]), order)
                    accX[i] = Taylor1(identity(constant_term(temp_accX_i[i, j])), order)
                    tmp1561[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_i[i, j] = Taylor1(constant_term(accY[i]) + constant_term(tmp1561[i, j]), order)
                    accY[i] = Taylor1(identity(constant_term(temp_accY_i[i, j])), order)
                    tmp1563[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_i[i, j] = Taylor1(constant_term(accZ[i]) + constant_term(tmp1563[i, j]), order)
                    accZ[i] = Taylor1(identity(constant_term(temp_accZ_i[i, j])), order)
                    if j == mo
                        tmp1565[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp1566[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp1567[i, j] = Taylor1(constant_term(tmp1565[i, j]) - constant_term(tmp1566[i, j]), order)
                        N_MfigM_pmA_x[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp1567[i, j]), order)
                        tmp1569[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp1570[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp1571[i, j] = Taylor1(constant_term(tmp1569[i, j]) - constant_term(tmp1570[i, j]), order)
                        N_MfigM_pmA_y[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp1571[i, j]), order)
                        tmp1573[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp1574[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp1575[i, j] = Taylor1(constant_term(tmp1573[i, j]) - constant_term(tmp1574[i, j]), order)
                        N_MfigM_pmA_z[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp1575[i, j]), order)
                        tmp1577[i] = Taylor1(constant_term(N_MfigM_pmA_x[i]) * constant_term(μ[j]), order)
                        temp_N_M_x[i] = Taylor1(constant_term(N_MfigM[1]) - constant_term(tmp1577[i]), order)
                        N_MfigM[1] = Taylor1(identity(constant_term(temp_N_M_x[i])), order)
                        tmp1579[i] = Taylor1(constant_term(N_MfigM_pmA_y[i]) * constant_term(μ[j]), order)
                        temp_N_M_y[i] = Taylor1(constant_term(N_MfigM[2]) - constant_term(tmp1579[i]), order)
                        N_MfigM[2] = Taylor1(identity(constant_term(temp_N_M_y[i])), order)
                        tmp1581[i] = Taylor1(constant_term(N_MfigM_pmA_z[i]) * constant_term(μ[j]), order)
                        temp_N_M_z[i] = Taylor1(constant_term(N_MfigM[3]) - constant_term(tmp1581[i]), order)
                        N_MfigM[3] = Taylor1(identity(constant_term(temp_N_M_z[i])), order)
                    end
                end
            end
        end
    end
    tmp1590 = Array{Taylor1{_S}}(undef, size(vi_dot_vj))
    tmp1590 .= Taylor1(zero(_S), order)
    Xij_t_Ui = Array{Taylor1{_S}}(undef, size(X))
    Xij_t_Ui .= Taylor1(zero(_S), order)
    Yij_t_Vi = Array{Taylor1{_S}}(undef, size(Y))
    Yij_t_Vi .= Taylor1(zero(_S), order)
    Zij_t_Wi = Array{Taylor1{_S}}(undef, size(Z))
    Zij_t_Wi .= Taylor1(zero(_S), order)
    tmp1596 = Array{Taylor1{_S}}(undef, size(Xij_t_Ui))
    tmp1596 .= Taylor1(zero(_S), order)
    Rij_dot_Vi = Array{Taylor1{_S}}(undef, size(tmp1596))
    Rij_dot_Vi .= Taylor1(zero(_S), order)
    tmp1599 = Array{Taylor1{_S}}(undef, size(Rij_dot_Vi))
    tmp1599 .= Taylor1(zero(_S), order)
    pn1t7 = Array{Taylor1{_S}}(undef, size(tmp1599))
    pn1t7 .= Taylor1(zero(_S), order)
    tmp1602 = Array{Taylor1{_S}}(undef, size(pn1t7))
    tmp1602 .= Taylor1(zero(_S), order)
    pn1t2_7 = Array{Taylor1{_S}}(undef, size(ϕs_and_vs))
    pn1t2_7 .= Taylor1(zero(_S), order)
    for j = 1:N
        for i = 1:N
            if i == j
                continue
            else
                _4ϕj[i, j] = Taylor1(constant_term(4) * constant_term(newtonianNb_Potential[j]), order)
                ϕi_plus_4ϕj[i, j] = Taylor1(constant_term(newtonianNb_Potential[i]) + constant_term(_4ϕj[i, j]), order)
                _2v2[i, j] = Taylor1(constant_term(2) * constant_term(v2[i]), order)
                sj2_plus_2si2[i, j] = Taylor1(constant_term(v2[j]) + constant_term(_2v2[i, j]), order)
                tmp1590[i, j] = Taylor1(constant_term(4) * constant_term(vi_dot_vj[i, j]), order)
                sj2_plus_2si2_minus_4vivj[i, j] = Taylor1(constant_term(sj2_plus_2si2[i, j]) - constant_term(tmp1590[i, j]), order)
                ϕs_and_vs[i, j] = Taylor1(constant_term(sj2_plus_2si2_minus_4vivj[i, j]) - constant_term(ϕi_plus_4ϕj[i, j]), order)
                Xij_t_Ui[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(dq[3i - 2]), order)
                Yij_t_Vi[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(dq[3i - 1]), order)
                Zij_t_Wi[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(dq[3i]), order)
                tmp1596[i, j] = Taylor1(constant_term(Xij_t_Ui[i, j]) + constant_term(Yij_t_Vi[i, j]), order)
                Rij_dot_Vi[i, j] = Taylor1(constant_term(tmp1596[i, j]) + constant_term(Zij_t_Wi[i, j]), order)
                tmp1599[i, j] = Taylor1(constant_term(Rij_dot_Vi[i, j]) ^ float(constant_term(2)), order)
                pn1t7[i, j] = Taylor1(constant_term(tmp1599[i, j]) / constant_term(r_p2[i, j]), order)
                tmp1602[i, j] = Taylor1(constant_term(1.5) * constant_term(pn1t7[i, j]), order)
                pn1t2_7[i, j] = Taylor1(constant_term(ϕs_and_vs[i, j]) - constant_term(tmp1602[i, j]), order)
                pn1t1_7[i, j] = Taylor1(constant_term(c_p2) + constant_term(pn1t2_7[i, j]), order)
            end
        end
        pntempX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        pntempY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        pntempZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
    end
    tmp1609 = Array{Taylor1{_S}}(undef, size(pNX_t_X))
    tmp1609 .= Taylor1(zero(_S), order)
    tmp1610 = Array{Taylor1{_S}}(undef, size(tmp1609))
    tmp1610 .= Taylor1(zero(_S), order)
    tmp1611 = Array{Taylor1{_S}}(undef, size(tmp1610))
    tmp1611 .= Taylor1(zero(_S), order)
    tmp1619 = Array{Taylor1{_S}}(undef, size(U_t_pn2))
    tmp1619 .= Taylor1(zero(_S), order)
    termpnx = Array{Taylor1{_S}}(undef, size(X_t_pn1))
    termpnx .= Taylor1(zero(_S), order)
    sumpnx = Array{Taylor1{_S}}(undef, size(termpnx))
    sumpnx .= Taylor1(zero(_S), order)
    tmp1622 = Array{Taylor1{_S}}(undef, size(V_t_pn2))
    tmp1622 .= Taylor1(zero(_S), order)
    termpny = Array{Taylor1{_S}}(undef, size(Y_t_pn1))
    termpny .= Taylor1(zero(_S), order)
    sumpny = Array{Taylor1{_S}}(undef, size(termpny))
    sumpny .= Taylor1(zero(_S), order)
    tmp1625 = Array{Taylor1{_S}}(undef, size(W_t_pn2))
    tmp1625 .= Taylor1(zero(_S), order)
    termpnz = Array{Taylor1{_S}}(undef, size(Z_t_pn1))
    termpnz .= Taylor1(zero(_S), order)
    sumpnz = Array{Taylor1{_S}}(undef, size(termpnz))
    sumpnz .= Taylor1(zero(_S), order)
    for j = 1:N
        for i = 1:N
            if i == j
                continue
            else
                pNX_t_X[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(X[i, j]), order)
                pNY_t_Y[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(Y[i, j]), order)
                pNZ_t_Z[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(Z[i, j]), order)
                tmp1609[i, j] = Taylor1(constant_term(pNX_t_X[i, j]) + constant_term(pNY_t_Y[i, j]), order)
                tmp1610[i, j] = Taylor1(constant_term(tmp1609[i, j]) + constant_term(pNZ_t_Z[i, j]), order)
                tmp1611[i, j] = Taylor1(constant_term(0.5) * constant_term(tmp1610[i, j]), order)
                pn1[i, j] = Taylor1(constant_term(pn1t1_7[i, j]) + constant_term(tmp1611[i, j]), order)
                X_t_pn1[i, j] = Taylor1(constant_term(newton_acc_X[i, j]) * constant_term(pn1[i, j]), order)
                Y_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Y[i, j]) * constant_term(pn1[i, j]), order)
                Z_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Z[i, j]) * constant_term(pn1[i, j]), order)
                pNX_t_pn3[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(pn3[i, j]), order)
                pNY_t_pn3[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(pn3[i, j]), order)
                pNZ_t_pn3[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(pn3[i, j]), order)
                tmp1619[i, j] = Taylor1(constant_term(U_t_pn2[i, j]) + constant_term(pNX_t_pn3[i, j]), order)
                termpnx[i, j] = Taylor1(constant_term(X_t_pn1[i, j]) + constant_term(tmp1619[i, j]), order)
                sumpnx[i, j] = Taylor1(constant_term(pntempX[j]) + constant_term(termpnx[i, j]), order)
                pntempX[j] = Taylor1(identity(constant_term(sumpnx[i, j])), order)
                tmp1622[i, j] = Taylor1(constant_term(V_t_pn2[i, j]) + constant_term(pNY_t_pn3[i, j]), order)
                termpny[i, j] = Taylor1(constant_term(Y_t_pn1[i, j]) + constant_term(tmp1622[i, j]), order)
                sumpny[i, j] = Taylor1(constant_term(pntempY[j]) + constant_term(termpny[i, j]), order)
                pntempY[j] = Taylor1(identity(constant_term(sumpny[i, j])), order)
                tmp1625[i, j] = Taylor1(constant_term(W_t_pn2[i, j]) + constant_term(pNZ_t_pn3[i, j]), order)
                termpnz[i, j] = Taylor1(constant_term(Z_t_pn1[i, j]) + constant_term(tmp1625[i, j]), order)
                sumpnz[i, j] = Taylor1(constant_term(pntempZ[j]) + constant_term(termpnz[i, j]), order)
                pntempZ[j] = Taylor1(identity(constant_term(sumpnz[i, j])), order)
            end
        end
        postNewtonX[j] = Taylor1(constant_term(pntempX[j]) * constant_term(c_m2), order)
        postNewtonY[j] = Taylor1(constant_term(pntempY[j]) * constant_term(c_m2), order)
        postNewtonZ[j] = Taylor1(constant_term(pntempZ[j]) * constant_term(c_m2), order)
    end
    for i = 1:N_ext
        dq[3 * (N + i) - 2] = Taylor1(constant_term(postNewtonX[i]) + constant_term(accX[i]), order)
        dq[3 * (N + i) - 1] = Taylor1(constant_term(postNewtonY[i]) + constant_term(accY[i]), order)
        dq[3 * (N + i)] = Taylor1(constant_term(postNewtonZ[i]) + constant_term(accZ[i]), order)
    end
    for i = N_ext + 1:N
        dq[3 * (N + i) - 2] = Taylor1(identity(constant_term(postNewtonX[i])), order)
        dq[3 * (N + i) - 1] = Taylor1(identity(constant_term(postNewtonY[i])), order)
        dq[3 * (N + i)] = Taylor1(identity(constant_term(postNewtonZ[i])), order)
    end
    tmp1634 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp1635 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp1636 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp1637 = Taylor1(constant_term(tmp1635) + constant_term(tmp1636), order)
    Iω_x = Taylor1(constant_term(tmp1634) + constant_term(tmp1637), order)
    tmp1639 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp1640 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp1641 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp1642 = Taylor1(constant_term(tmp1640) + constant_term(tmp1641), order)
    Iω_y = Taylor1(constant_term(tmp1639) + constant_term(tmp1642), order)
    tmp1644 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp1645 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp1646 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp1647 = Taylor1(constant_term(tmp1645) + constant_term(tmp1646), order)
    Iω_z = Taylor1(constant_term(tmp1644) + constant_term(tmp1647), order)
    tmp1649 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_z), order)
    tmp1650 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_y), order)
    ωxIω_x = Taylor1(constant_term(tmp1649) - constant_term(tmp1650), order)
    tmp1652 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_x), order)
    tmp1653 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_z), order)
    ωxIω_y = Taylor1(constant_term(tmp1652) - constant_term(tmp1653), order)
    tmp1655 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_y), order)
    tmp1656 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_x), order)
    ωxIω_z = Taylor1(constant_term(tmp1655) - constant_term(tmp1656), order)
    tmp1658 = Taylor1(constant_term(dI_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp1659 = Taylor1(constant_term(dI_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp1660 = Taylor1(constant_term(dI_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp1661 = Taylor1(constant_term(tmp1659) + constant_term(tmp1660), order)
    dIω_x = Taylor1(constant_term(tmp1658) + constant_term(tmp1661), order)
    tmp1663 = Taylor1(constant_term(dI_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp1664 = Taylor1(constant_term(dI_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp1665 = Taylor1(constant_term(dI_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp1666 = Taylor1(constant_term(tmp1664) + constant_term(tmp1665), order)
    dIω_y = Taylor1(constant_term(tmp1663) + constant_term(tmp1666), order)
    tmp1668 = Taylor1(constant_term(dI_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp1669 = Taylor1(constant_term(dI_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp1670 = Taylor1(constant_term(dI_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp1671 = Taylor1(constant_term(tmp1669) + constant_term(tmp1670), order)
    dIω_z = Taylor1(constant_term(tmp1668) + constant_term(tmp1671), order)
    er_EM_I_1 = Taylor1(constant_term(X[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_2 = Taylor1(constant_term(Y[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_3 = Taylor1(constant_term(Z[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    p_E_I_1 = Taylor1(identity(constant_term(RotM[3, 1, ea])), order)
    p_E_I_2 = Taylor1(identity(constant_term(RotM[3, 2, ea])), order)
    p_E_I_3 = Taylor1(identity(constant_term(RotM[3, 3, ea])), order)
    tmp1676 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp1677 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp1678 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp1679 = Taylor1(constant_term(tmp1677) + constant_term(tmp1678), order)
    er_EM_1 = Taylor1(constant_term(tmp1676) + constant_term(tmp1679), order)
    tmp1681 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp1682 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp1683 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp1684 = Taylor1(constant_term(tmp1682) + constant_term(tmp1683), order)
    er_EM_2 = Taylor1(constant_term(tmp1681) + constant_term(tmp1684), order)
    tmp1686 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp1687 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp1688 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp1689 = Taylor1(constant_term(tmp1687) + constant_term(tmp1688), order)
    er_EM_3 = Taylor1(constant_term(tmp1686) + constant_term(tmp1689), order)
    tmp1691 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(p_E_I_1), order)
    tmp1692 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(p_E_I_2), order)
    tmp1693 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(p_E_I_3), order)
    tmp1694 = Taylor1(constant_term(tmp1692) + constant_term(tmp1693), order)
    p_E_1 = Taylor1(constant_term(tmp1691) + constant_term(tmp1694), order)
    tmp1696 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(p_E_I_1), order)
    tmp1697 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(p_E_I_2), order)
    tmp1698 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(p_E_I_3), order)
    tmp1699 = Taylor1(constant_term(tmp1697) + constant_term(tmp1698), order)
    p_E_2 = Taylor1(constant_term(tmp1696) + constant_term(tmp1699), order)
    tmp1701 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(p_E_I_1), order)
    tmp1702 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(p_E_I_2), order)
    tmp1703 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(p_E_I_3), order)
    tmp1704 = Taylor1(constant_term(tmp1702) + constant_term(tmp1703), order)
    p_E_3 = Taylor1(constant_term(tmp1701) + constant_term(tmp1704), order)
    tmp1706 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(er_EM_1), order)
    tmp1707 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(er_EM_2), order)
    tmp1708 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(er_EM_3), order)
    tmp1709 = Taylor1(constant_term(tmp1707) + constant_term(tmp1708), order)
    I_er_EM_1 = Taylor1(constant_term(tmp1706) + constant_term(tmp1709), order)
    tmp1711 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(er_EM_1), order)
    tmp1712 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(er_EM_2), order)
    tmp1713 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(er_EM_3), order)
    tmp1714 = Taylor1(constant_term(tmp1712) + constant_term(tmp1713), order)
    I_er_EM_2 = Taylor1(constant_term(tmp1711) + constant_term(tmp1714), order)
    tmp1716 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(er_EM_1), order)
    tmp1717 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(er_EM_2), order)
    tmp1718 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(er_EM_3), order)
    tmp1719 = Taylor1(constant_term(tmp1717) + constant_term(tmp1718), order)
    I_er_EM_3 = Taylor1(constant_term(tmp1716) + constant_term(tmp1719), order)
    tmp1721 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(p_E_1), order)
    tmp1722 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(p_E_2), order)
    tmp1723 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(p_E_3), order)
    tmp1724 = Taylor1(constant_term(tmp1722) + constant_term(tmp1723), order)
    I_p_E_1 = Taylor1(constant_term(tmp1721) + constant_term(tmp1724), order)
    tmp1726 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(p_E_1), order)
    tmp1727 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(p_E_2), order)
    tmp1728 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(p_E_3), order)
    tmp1729 = Taylor1(constant_term(tmp1727) + constant_term(tmp1728), order)
    I_p_E_2 = Taylor1(constant_term(tmp1726) + constant_term(tmp1729), order)
    tmp1731 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(p_E_1), order)
    tmp1732 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(p_E_2), order)
    tmp1733 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(p_E_3), order)
    tmp1734 = Taylor1(constant_term(tmp1732) + constant_term(tmp1733), order)
    I_p_E_3 = Taylor1(constant_term(tmp1731) + constant_term(tmp1734), order)
    tmp1736 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_3), order)
    tmp1737 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_2), order)
    er_EM_cross_I_er_EM_1 = Taylor1(constant_term(tmp1736) - constant_term(tmp1737), order)
    tmp1739 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_1), order)
    tmp1740 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_3), order)
    er_EM_cross_I_er_EM_2 = Taylor1(constant_term(tmp1739) - constant_term(tmp1740), order)
    tmp1742 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_2), order)
    tmp1743 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_1), order)
    er_EM_cross_I_er_EM_3 = Taylor1(constant_term(tmp1742) - constant_term(tmp1743), order)
    tmp1745 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_3), order)
    tmp1746 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_2), order)
    er_EM_cross_I_p_E_1 = Taylor1(constant_term(tmp1745) - constant_term(tmp1746), order)
    tmp1748 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_1), order)
    tmp1749 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_3), order)
    er_EM_cross_I_p_E_2 = Taylor1(constant_term(tmp1748) - constant_term(tmp1749), order)
    tmp1751 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_2), order)
    tmp1752 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_1), order)
    er_EM_cross_I_p_E_3 = Taylor1(constant_term(tmp1751) - constant_term(tmp1752), order)
    tmp1754 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_3), order)
    tmp1755 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_2), order)
    p_E_cross_I_er_EM_1 = Taylor1(constant_term(tmp1754) - constant_term(tmp1755), order)
    tmp1757 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_1), order)
    tmp1758 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_3), order)
    p_E_cross_I_er_EM_2 = Taylor1(constant_term(tmp1757) - constant_term(tmp1758), order)
    tmp1760 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_2), order)
    tmp1761 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_1), order)
    p_E_cross_I_er_EM_3 = Taylor1(constant_term(tmp1760) - constant_term(tmp1761), order)
    tmp1763 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_3), order)
    tmp1764 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_2), order)
    p_E_cross_I_p_E_1 = Taylor1(constant_term(tmp1763) - constant_term(tmp1764), order)
    tmp1766 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_1), order)
    tmp1767 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_3), order)
    p_E_cross_I_p_E_2 = Taylor1(constant_term(tmp1766) - constant_term(tmp1767), order)
    tmp1769 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_2), order)
    tmp1770 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_1), order)
    p_E_cross_I_p_E_3 = Taylor1(constant_term(tmp1769) - constant_term(tmp1770), order)
    tmp1774 = Taylor1(constant_term(sin_ϕ[ea, mo]) ^ float(constant_term(2)), order)
    tmp1775 = Taylor1(constant_term(7) * constant_term(tmp1774), order)
    one_minus_7sin2ϕEM = Taylor1(constant_term(one_t) - constant_term(tmp1775), order)
    two_sinϕEM = Taylor1(constant_term(2) * constant_term(sin_ϕ[ea, mo]), order)
    tmp1780 = Taylor1(constant_term(r_p1d2[mo, ea]) ^ float(constant_term(5)), order)
    N_MfigM_figE_factor_div_rEMp5 = Taylor1(constant_term(N_MfigM_figE_factor) / constant_term(tmp1780), order)
    tmp1782 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_1), order)
    tmp1783 = Taylor1(constant_term(er_EM_cross_I_p_E_1) + constant_term(p_E_cross_I_er_EM_1), order)
    tmp1784 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp1783), order)
    tmp1785 = Taylor1(constant_term(tmp1782) + constant_term(tmp1784), order)
    tmp1787 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_1), order)
    tmp1788 = Taylor1(constant_term(tmp1785) - constant_term(tmp1787), order)
    N_MfigM_figE_1 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp1788), order)
    tmp1790 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_2), order)
    tmp1791 = Taylor1(constant_term(er_EM_cross_I_p_E_2) + constant_term(p_E_cross_I_er_EM_2), order)
    tmp1792 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp1791), order)
    tmp1793 = Taylor1(constant_term(tmp1790) + constant_term(tmp1792), order)
    tmp1795 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_2), order)
    tmp1796 = Taylor1(constant_term(tmp1793) - constant_term(tmp1795), order)
    N_MfigM_figE_2 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp1796), order)
    tmp1798 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_3), order)
    tmp1799 = Taylor1(constant_term(er_EM_cross_I_p_E_3) + constant_term(p_E_cross_I_er_EM_3), order)
    tmp1800 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp1799), order)
    tmp1801 = Taylor1(constant_term(tmp1798) + constant_term(tmp1800), order)
    tmp1803 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_3), order)
    tmp1804 = Taylor1(constant_term(tmp1801) - constant_term(tmp1803), order)
    N_MfigM_figE_3 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp1804), order)
    tmp1806 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp1807 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp1808 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp1809 = Taylor1(constant_term(tmp1807) + constant_term(tmp1808), order)
    N_1_LMF = Taylor1(constant_term(tmp1806) + constant_term(tmp1809), order)
    tmp1811 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp1812 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp1813 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp1814 = Taylor1(constant_term(tmp1812) + constant_term(tmp1813), order)
    N_2_LMF = Taylor1(constant_term(tmp1811) + constant_term(tmp1814), order)
    tmp1816 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp1817 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp1818 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp1819 = Taylor1(constant_term(tmp1817) + constant_term(tmp1818), order)
    N_3_LMF = Taylor1(constant_term(tmp1816) + constant_term(tmp1819), order)
    tmp1821 = Taylor1(constant_term(q[6N + 10]) - constant_term(q[6N + 4]), order)
    tmp1822 = Taylor1(constant_term(k_ν) * constant_term(tmp1821), order)
    tmp1823 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp1824 = Taylor1(constant_term(tmp1823) * constant_term(q[6N + 11]), order)
    N_cmb_1 = Taylor1(constant_term(tmp1822) - constant_term(tmp1824), order)
    tmp1826 = Taylor1(constant_term(q[6N + 11]) - constant_term(q[6N + 5]), order)
    tmp1827 = Taylor1(constant_term(k_ν) * constant_term(tmp1826), order)
    tmp1828 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp1829 = Taylor1(constant_term(tmp1828) * constant_term(q[6N + 10]), order)
    N_cmb_2 = Taylor1(constant_term(tmp1827) + constant_term(tmp1829), order)
    tmp1831 = Taylor1(constant_term(q[6N + 12]) - constant_term(q[6N + 6]), order)
    N_cmb_3 = Taylor1(constant_term(k_ν) * constant_term(tmp1831), order)
    tmp1833 = Taylor1(constant_term(N_1_LMF) + constant_term(N_MfigM_figE_1), order)
    tmp1834 = Taylor1(constant_term(tmp1833) + constant_term(N_cmb_1), order)
    tmp1835 = Taylor1(constant_term(dIω_x) + constant_term(ωxIω_x), order)
    I_dω_1 = Taylor1(constant_term(tmp1834) - constant_term(tmp1835), order)
    tmp1837 = Taylor1(constant_term(N_2_LMF) + constant_term(N_MfigM_figE_2), order)
    tmp1838 = Taylor1(constant_term(tmp1837) + constant_term(N_cmb_2), order)
    tmp1839 = Taylor1(constant_term(dIω_y) + constant_term(ωxIω_y), order)
    I_dω_2 = Taylor1(constant_term(tmp1838) - constant_term(tmp1839), order)
    tmp1841 = Taylor1(constant_term(N_3_LMF) + constant_term(N_MfigM_figE_3), order)
    tmp1842 = Taylor1(constant_term(tmp1841) + constant_term(N_cmb_3), order)
    tmp1843 = Taylor1(constant_term(dIω_z) + constant_term(ωxIω_z), order)
    I_dω_3 = Taylor1(constant_term(tmp1842) - constant_term(tmp1843), order)
    Ic_ωc_1 = Taylor1(constant_term(I_c_t[1, 1]) * constant_term(q[6N + 10]), order)
    Ic_ωc_2 = Taylor1(constant_term(I_c_t[2, 2]) * constant_term(q[6N + 11]), order)
    Ic_ωc_3 = Taylor1(constant_term(I_c_t[3, 3]) * constant_term(q[6N + 12]), order)
    tmp1848 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_2), order)
    tmp1849 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_3), order)
    m_ωm_x_Icωc_1 = Taylor1(constant_term(tmp1848) - constant_term(tmp1849), order)
    tmp1851 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_3), order)
    tmp1852 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_1), order)
    m_ωm_x_Icωc_2 = Taylor1(constant_term(tmp1851) - constant_term(tmp1852), order)
    tmp1854 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_1), order)
    tmp1855 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_2), order)
    m_ωm_x_Icωc_3 = Taylor1(constant_term(tmp1854) - constant_term(tmp1855), order)
    Ic_dωc_1 = Taylor1(constant_term(m_ωm_x_Icωc_1) - constant_term(N_cmb_1), order)
    Ic_dωc_2 = Taylor1(constant_term(m_ωm_x_Icωc_2) - constant_term(N_cmb_2), order)
    Ic_dωc_3 = Taylor1(constant_term(m_ωm_x_Icωc_3) - constant_term(N_cmb_3), order)
    tmp1860 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp1940 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp1861 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp1860), order)
    tmp1862 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp1941 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp1863 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp1862), order)
    tmp1864 = Taylor1(constant_term(tmp1861) + constant_term(tmp1863), order)
    tmp1865 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp1942 = Taylor1(cos(constant_term(q[6N + 2])), order)
    dq[6N + 1] = Taylor1(constant_term(tmp1864) / constant_term(tmp1865), order)
    tmp1867 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp1943 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp1868 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp1867), order)
    tmp1869 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp1944 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp1870 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp1869), order)
    dq[6N + 2] = Taylor1(constant_term(tmp1868) - constant_term(tmp1870), order)
    tmp1872 = Taylor1(cos(constant_term(q[6N + 2])), order)
    tmp1945 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp1873 = Taylor1(constant_term(dq[6N + 1]) * constant_term(tmp1872), order)
    dq[6N + 3] = Taylor1(constant_term(q[6N + 6]) - constant_term(tmp1873), order)
    tmp1875 = Taylor1(constant_term(inv_I_m_t[1, 1]) * constant_term(I_dω_1), order)
    tmp1876 = Taylor1(constant_term(inv_I_m_t[1, 2]) * constant_term(I_dω_2), order)
    tmp1877 = Taylor1(constant_term(inv_I_m_t[1, 3]) * constant_term(I_dω_3), order)
    tmp1878 = Taylor1(constant_term(tmp1876) + constant_term(tmp1877), order)
    dq[6N + 4] = Taylor1(constant_term(tmp1875) + constant_term(tmp1878), order)
    tmp1880 = Taylor1(constant_term(inv_I_m_t[2, 1]) * constant_term(I_dω_1), order)
    tmp1881 = Taylor1(constant_term(inv_I_m_t[2, 2]) * constant_term(I_dω_2), order)
    tmp1882 = Taylor1(constant_term(inv_I_m_t[2, 3]) * constant_term(I_dω_3), order)
    tmp1883 = Taylor1(constant_term(tmp1881) + constant_term(tmp1882), order)
    dq[6N + 5] = Taylor1(constant_term(tmp1880) + constant_term(tmp1883), order)
    tmp1885 = Taylor1(constant_term(inv_I_m_t[3, 1]) * constant_term(I_dω_1), order)
    tmp1886 = Taylor1(constant_term(inv_I_m_t[3, 2]) * constant_term(I_dω_2), order)
    tmp1887 = Taylor1(constant_term(inv_I_m_t[3, 3]) * constant_term(I_dω_3), order)
    tmp1888 = Taylor1(constant_term(tmp1886) + constant_term(tmp1887), order)
    dq[6N + 6] = Taylor1(constant_term(tmp1885) + constant_term(tmp1888), order)
    tmp1890 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp1946 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp1891 = Taylor1(constant_term(ω_c_CE_2) / constant_term(tmp1890), order)
    dq[6N + 9] = Taylor1(-(constant_term(tmp1891)), order)
    tmp1893 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp1947 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp1894 = Taylor1(constant_term(dq[6N + 9]) * constant_term(tmp1893), order)
    dq[6N + 7] = Taylor1(constant_term(ω_c_CE_3) - constant_term(tmp1894), order)
    dq[6N + 8] = Taylor1(identity(constant_term(ω_c_CE_1)), order)
    dq[6N + 10] = Taylor1(constant_term(inv_I_c_t[1, 1]) * constant_term(Ic_dωc_1), order)
    dq[6N + 11] = Taylor1(constant_term(inv_I_c_t[2, 2]) * constant_term(Ic_dωc_2), order)
    dq[6N + 12] = Taylor1(constant_term(inv_I_c_t[3, 3]) * constant_term(Ic_dωc_3), order)
    dq[6N + 13] = Taylor1(identity(constant_term(zero_q_1)), order)
    for __idx = eachindex(q)
        (q[__idx]).coeffs[2] = (dq[__idx]).coeffs[1]
    end
    for ord = 1:order - 1
        ordnext = ord + 1
        TaylorSeries.identity!(N_MfigM[1], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[2], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[3], zero_q_1, ord)
        TaylorSeries.identity!(ϕ_m, q[6N + 1], ord)
        TaylorSeries.identity!(θ_m, q[6N + 2], ord)
        TaylorSeries.identity!(ψ_m, q[6N + 3], ord)
        TaylorSeries.sincos!(tmp1899, tmp1165, ϕ_m, ord)
        TaylorSeries.sincos!(tmp1900, tmp1166, ψ_m, ord)
        TaylorSeries.mul!(tmp1167, tmp1165, tmp1166, ord)
        TaylorSeries.sincos!(tmp1901, tmp1168, θ_m, ord)
        TaylorSeries.sincos!(tmp1169, tmp1902, ϕ_m, ord)
        TaylorSeries.mul!(tmp1170, tmp1168, tmp1169, ord)
        TaylorSeries.sincos!(tmp1171, tmp1903, ψ_m, ord)
        TaylorSeries.mul!(tmp1172, tmp1170, tmp1171, ord)
        TaylorSeries.subst!(RotM[1, 1, mo], tmp1167, tmp1172, ord)
        TaylorSeries.sincos!(tmp1904, tmp1174, θ_m, ord)
        TaylorSeries.subst!(tmp1175, tmp1174, ord)
        TaylorSeries.sincos!(tmp1905, tmp1176, ψ_m, ord)
        TaylorSeries.mul!(tmp1177, tmp1175, tmp1176, ord)
        TaylorSeries.sincos!(tmp1178, tmp1906, ϕ_m, ord)
        TaylorSeries.mul!(tmp1179, tmp1177, tmp1178, ord)
        TaylorSeries.sincos!(tmp1907, tmp1180, ϕ_m, ord)
        TaylorSeries.sincos!(tmp1181, tmp1908, ψ_m, ord)
        TaylorSeries.mul!(tmp1182, tmp1180, tmp1181, ord)
        TaylorSeries.subst!(RotM[2, 1, mo], tmp1179, tmp1182, ord)
        TaylorSeries.sincos!(tmp1184, tmp1909, θ_m, ord)
        TaylorSeries.sincos!(tmp1185, tmp1910, ϕ_m, ord)
        TaylorSeries.mul!(RotM[3, 1, mo], tmp1184, tmp1185, ord)
        TaylorSeries.sincos!(tmp1911, tmp1187, ψ_m, ord)
        TaylorSeries.sincos!(tmp1188, tmp1912, ϕ_m, ord)
        TaylorSeries.mul!(tmp1189, tmp1187, tmp1188, ord)
        TaylorSeries.sincos!(tmp1913, tmp1190, θ_m, ord)
        TaylorSeries.sincos!(tmp1914, tmp1191, ϕ_m, ord)
        TaylorSeries.mul!(tmp1192, tmp1190, tmp1191, ord)
        TaylorSeries.sincos!(tmp1193, tmp1915, ψ_m, ord)
        TaylorSeries.mul!(tmp1194, tmp1192, tmp1193, ord)
        TaylorSeries.add!(RotM[1, 2, mo], tmp1189, tmp1194, ord)
        TaylorSeries.sincos!(tmp1916, tmp1196, θ_m, ord)
        TaylorSeries.sincos!(tmp1917, tmp1197, ϕ_m, ord)
        TaylorSeries.mul!(tmp1198, tmp1196, tmp1197, ord)
        TaylorSeries.sincos!(tmp1918, tmp1199, ψ_m, ord)
        TaylorSeries.mul!(tmp1200, tmp1198, tmp1199, ord)
        TaylorSeries.sincos!(tmp1201, tmp1919, ϕ_m, ord)
        TaylorSeries.sincos!(tmp1202, tmp1920, ψ_m, ord)
        TaylorSeries.mul!(tmp1203, tmp1201, tmp1202, ord)
        TaylorSeries.subst!(RotM[2, 2, mo], tmp1200, tmp1203, ord)
        TaylorSeries.sincos!(tmp1921, tmp1205, ϕ_m, ord)
        TaylorSeries.subst!(tmp1206, tmp1205, ord)
        TaylorSeries.sincos!(tmp1207, tmp1922, θ_m, ord)
        TaylorSeries.mul!(RotM[3, 2, mo], tmp1206, tmp1207, ord)
        TaylorSeries.sincos!(tmp1209, tmp1923, θ_m, ord)
        TaylorSeries.sincos!(tmp1210, tmp1924, ψ_m, ord)
        TaylorSeries.mul!(RotM[1, 3, mo], tmp1209, tmp1210, ord)
        TaylorSeries.sincos!(tmp1925, tmp1212, ψ_m, ord)
        TaylorSeries.sincos!(tmp1213, tmp1926, θ_m, ord)
        TaylorSeries.mul!(RotM[2, 3, mo], tmp1212, tmp1213, ord)
        TaylorSeries.sincos!(tmp1927, RotM[3, 3, mo], θ_m, ord)
        TaylorSeries.identity!(ϕ_c, q[6N + 7], ord)
        TaylorSeries.sincos!(tmp1928, tmp1216, ϕ_c, ord)
        TaylorSeries.mul!(tmp1217, RotM[1, 1, mo], tmp1216, ord)
        TaylorSeries.sincos!(tmp1218, tmp1929, ϕ_c, ord)
        TaylorSeries.mul!(tmp1219, RotM[1, 2, mo], tmp1218, ord)
        TaylorSeries.add!(mantlef2coref[1, 1], tmp1217, tmp1219, ord)
        TaylorSeries.subst!(tmp1221, RotM[1, 1, mo], ord)
        TaylorSeries.sincos!(tmp1222, tmp1930, ϕ_c, ord)
        TaylorSeries.mul!(tmp1223, tmp1221, tmp1222, ord)
        TaylorSeries.sincos!(tmp1931, tmp1224, ϕ_c, ord)
        TaylorSeries.mul!(tmp1225, RotM[1, 2, mo], tmp1224, ord)
        TaylorSeries.add!(mantlef2coref[2, 1], tmp1223, tmp1225, ord)
        TaylorSeries.identity!(mantlef2coref[3, 1], RotM[1, 3, mo], ord)
        TaylorSeries.sincos!(tmp1932, tmp1227, ϕ_c, ord)
        TaylorSeries.mul!(tmp1228, RotM[2, 1, mo], tmp1227, ord)
        TaylorSeries.sincos!(tmp1229, tmp1933, ϕ_c, ord)
        TaylorSeries.mul!(tmp1230, RotM[2, 2, mo], tmp1229, ord)
        TaylorSeries.add!(mantlef2coref[1, 2], tmp1228, tmp1230, ord)
        TaylorSeries.subst!(tmp1232, RotM[2, 1, mo], ord)
        TaylorSeries.sincos!(tmp1233, tmp1934, ϕ_c, ord)
        TaylorSeries.mul!(tmp1234, tmp1232, tmp1233, ord)
        TaylorSeries.sincos!(tmp1935, tmp1235, ϕ_c, ord)
        TaylorSeries.mul!(tmp1236, RotM[2, 2, mo], tmp1235, ord)
        TaylorSeries.add!(mantlef2coref[2, 2], tmp1234, tmp1236, ord)
        TaylorSeries.identity!(mantlef2coref[3, 2], RotM[2, 3, mo], ord)
        TaylorSeries.sincos!(tmp1936, tmp1238, ϕ_c, ord)
        TaylorSeries.mul!(tmp1239, RotM[3, 1, mo], tmp1238, ord)
        TaylorSeries.sincos!(tmp1240, tmp1937, ϕ_c, ord)
        TaylorSeries.mul!(tmp1241, RotM[3, 2, mo], tmp1240, ord)
        TaylorSeries.add!(mantlef2coref[1, 3], tmp1239, tmp1241, ord)
        TaylorSeries.subst!(tmp1243, RotM[3, 1, mo], ord)
        TaylorSeries.sincos!(tmp1244, tmp1938, ϕ_c, ord)
        TaylorSeries.mul!(tmp1245, tmp1243, tmp1244, ord)
        TaylorSeries.sincos!(tmp1939, tmp1246, ϕ_c, ord)
        TaylorSeries.mul!(tmp1247, RotM[3, 2, mo], tmp1246, ord)
        TaylorSeries.add!(mantlef2coref[2, 3], tmp1245, tmp1247, ord)
        TaylorSeries.identity!(mantlef2coref[3, 3], RotM[3, 3, mo], ord)
        TaylorSeries.mul!(tmp1249, mantlef2coref[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp1250, mantlef2coref[1, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp1251, mantlef2coref[1, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp1252, tmp1250, tmp1251, ord)
        TaylorSeries.add!(ω_c_CE_1, tmp1249, tmp1252, ord)
        TaylorSeries.mul!(tmp1254, mantlef2coref[2, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp1255, mantlef2coref[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp1256, mantlef2coref[2, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp1257, tmp1255, tmp1256, ord)
        TaylorSeries.add!(ω_c_CE_2, tmp1254, tmp1257, ord)
        TaylorSeries.mul!(tmp1259, mantlef2coref[3, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp1260, mantlef2coref[3, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp1261, mantlef2coref[3, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp1262, tmp1260, tmp1261, ord)
        TaylorSeries.add!(ω_c_CE_3, tmp1259, tmp1262, ord)
        TaylorSeries.identity!(J2_t[su], J2S_t, ord)
        TaylorSeries.identity!(J2_t[ea], J2E_t, ord)
        for j = 1:N
            TaylorSeries.identity!(newtonX[j], zero_q_1, ord)
            TaylorSeries.identity!(newtonY[j], zero_q_1, ord)
            TaylorSeries.identity!(newtonZ[j], zero_q_1, ord)
            TaylorSeries.identity!(newtonianNb_Potential[j], zero_q_1, ord)
            TaylorSeries.identity!(dq[3j - 2], q[3 * (N + j) - 2], ord)
            TaylorSeries.identity!(dq[3j - 1], q[3 * (N + j) - 1], ord)
            TaylorSeries.identity!(dq[3j], q[3 * (N + j)], ord)
        end
        for j = 1:N_ext
            TaylorSeries.identity!(accX[j], zero_q_1, ord)
            TaylorSeries.identity!(accY[j], zero_q_1, ord)
            TaylorSeries.identity!(accZ[j], zero_q_1, ord)
        end
        for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    TaylorSeries.subst!(X[i, j], q[3i - 2], q[3j - 2], ord)
                    TaylorSeries.subst!(Y[i, j], q[3i - 1], q[3j - 1], ord)
                    TaylorSeries.subst!(Z[i, j], q[3i], q[3j], ord)
                    TaylorSeries.subst!(U[i, j], dq[3i - 2], dq[3j - 2], ord)
                    TaylorSeries.subst!(V[i, j], dq[3i - 1], dq[3j - 1], ord)
                    TaylorSeries.subst!(W[i, j], dq[3i], dq[3j], ord)
                    TaylorSeries.mul!(tmp1271[3j - 2], 4, dq[3j - 2], ord)
                    TaylorSeries.mul!(tmp1273[3i - 2], 3, dq[3i - 2], ord)
                    TaylorSeries.subst!(_4U_m_3X[i, j], tmp1271[3j - 2], tmp1273[3i - 2], ord)
                    TaylorSeries.mul!(tmp1276[3j - 1], 4, dq[3j - 1], ord)
                    TaylorSeries.mul!(tmp1278[3i - 1], 3, dq[3i - 1], ord)
                    TaylorSeries.subst!(_4V_m_3Y[i, j], tmp1276[3j - 1], tmp1278[3i - 1], ord)
                    TaylorSeries.mul!(tmp1281[3j], 4, dq[3j], ord)
                    TaylorSeries.mul!(tmp1283[3i], 3, dq[3i], ord)
                    TaylorSeries.subst!(_4W_m_3Z[i, j], tmp1281[3j], tmp1283[3i], ord)
                    TaylorSeries.mul!(pn2x[i, j], X[i, j], _4U_m_3X[i, j], ord)
                    TaylorSeries.mul!(pn2y[i, j], Y[i, j], _4V_m_3Y[i, j], ord)
                    TaylorSeries.mul!(pn2z[i, j], Z[i, j], _4W_m_3Z[i, j], ord)
                    TaylorSeries.mul!(UU[i, j], dq[3i - 2], dq[3j - 2], ord)
                    TaylorSeries.mul!(VV[i, j], dq[3i - 1], dq[3j - 1], ord)
                    TaylorSeries.mul!(WW[i, j], dq[3i], dq[3j], ord)
                    TaylorSeries.add!(tmp1291[i, j], UU[i, j], VV[i, j], ord)
                    TaylorSeries.add!(vi_dot_vj[i, j], tmp1291[i, j], WW[i, j], ord)
                    TaylorSeries.pow!(tmp1294[i, j], X[i, j], 2, ord)
                    TaylorSeries.pow!(tmp1296[i, j], Y[i, j], 2, ord)
                    TaylorSeries.add!(tmp1297[i, j], tmp1294[i, j], tmp1296[i, j], ord)
                    TaylorSeries.pow!(tmp1299[i, j], Z[i, j], 2, ord)
                    TaylorSeries.add!(r_p2[i, j], tmp1297[i, j], tmp1299[i, j], ord)
                    TaylorSeries.sqrt!(r_p1d2[i, j], r_p2[i, j], ord)
                    TaylorSeries.pow!(r_p3d2[i, j], r_p2[i, j], 1.5, ord)
                    TaylorSeries.pow!(r_p7d2[i, j], r_p2[i, j], 3.5, ord)
                    TaylorSeries.div!(newtonianCoeff[i, j], μ[i], r_p3d2[i, j], ord)
                    TaylorSeries.add!(tmp1307[i, j], pn2x[i, j], pn2y[i, j], ord)
                    TaylorSeries.add!(tmp1308[i, j], tmp1307[i, j], pn2z[i, j], ord)
                    TaylorSeries.mul!(pn2[i, j], newtonianCoeff[i, j], tmp1308[i, j], ord)
                    TaylorSeries.mul!(newton_acc_X[i, j], X[i, j], newtonianCoeff[i, j], ord)
                    TaylorSeries.mul!(newton_acc_Y[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                    TaylorSeries.mul!(newton_acc_Z[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                    TaylorSeries.div!(newtonian1b_Potential[i, j], μ[i], r_p1d2[i, j], ord)
                    TaylorSeries.mul!(pn3[i, j], 3.5, newtonian1b_Potential[i, j], ord)
                    TaylorSeries.mul!(U_t_pn2[i, j], pn2[i, j], U[i, j], ord)
                    TaylorSeries.mul!(V_t_pn2[i, j], pn2[i, j], V[i, j], ord)
                    TaylorSeries.mul!(W_t_pn2[i, j], pn2[i, j], W[i, j], ord)
                    TaylorSeries.mul!(tmp1319[i, j], X[i, j], newtonianCoeff[i, j], ord)
                    TaylorSeries.add!(temp_001[i, j], newtonX[j], tmp1319[i, j], ord)
                    TaylorSeries.identity!(newtonX[j], temp_001[i, j], ord)
                    TaylorSeries.mul!(tmp1321[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                    TaylorSeries.add!(temp_002[i, j], newtonY[j], tmp1321[i, j], ord)
                    TaylorSeries.identity!(newtonY[j], temp_002[i, j], ord)
                    TaylorSeries.mul!(tmp1323[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                    TaylorSeries.add!(temp_003[i, j], newtonZ[j], tmp1323[i, j], ord)
                    TaylorSeries.identity!(newtonZ[j], temp_003[i, j], ord)
                    TaylorSeries.add!(temp_004[i, j], newtonianNb_Potential[j], newtonian1b_Potential[i, j], ord)
                    TaylorSeries.identity!(newtonianNb_Potential[j], temp_004[i, j], ord)
                end
            end
            TaylorSeries.pow!(tmp1327[3j - 2], dq[3j - 2], 2, ord)
            TaylorSeries.pow!(tmp1329[3j - 1], dq[3j - 1], 2, ord)
            TaylorSeries.add!(tmp1330[3j - 2], tmp1327[3j - 2], tmp1329[3j - 1], ord)
            TaylorSeries.pow!(tmp1332[3j], dq[3j], 2, ord)
            TaylorSeries.add!(v2[j], tmp1330[3j - 2], tmp1332[3j], ord)
        end
        TaylorSeries.add!(tmp1334, I_M_t[1, 1], I_M_t[2, 2], ord)
        TaylorSeries.div!(tmp1336, tmp1334, 2, ord)
        TaylorSeries.subst!(tmp1337, I_M_t[3, 3], tmp1336, ord)
        TaylorSeries.div!(J2M_t, tmp1337, μ[mo], ord)
        TaylorSeries.subst!(tmp1339, I_M_t[2, 2], I_M_t[1, 1], ord)
        TaylorSeries.div!(tmp1340, tmp1339, μ[mo], ord)
        TaylorSeries.div!(C22M_t, tmp1340, 4, ord)
        TaylorSeries.subst!(tmp1343, I_M_t[1, 3], ord)
        TaylorSeries.div!(C21M_t, tmp1343, μ[mo], ord)
        TaylorSeries.subst!(tmp1345, I_M_t[3, 2], ord)
        TaylorSeries.div!(S21M_t, tmp1345, μ[mo], ord)
        TaylorSeries.subst!(tmp1347, I_M_t[2, 1], ord)
        TaylorSeries.div!(tmp1348, tmp1347, μ[mo], ord)
        TaylorSeries.div!(S22M_t, tmp1348, 2, ord)
        TaylorSeries.identity!(J2_t[mo], J2M_t, ord)
        for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        TaylorSeries.mul!(X_bf_1[i, j], X[i, j], RotM[1, 1, j], ord)
                        TaylorSeries.mul!(X_bf_2[i, j], Y[i, j], RotM[1, 2, j], ord)
                        TaylorSeries.mul!(X_bf_3[i, j], Z[i, j], RotM[1, 3, j], ord)
                        TaylorSeries.mul!(Y_bf_1[i, j], X[i, j], RotM[2, 1, j], ord)
                        TaylorSeries.mul!(Y_bf_2[i, j], Y[i, j], RotM[2, 2, j], ord)
                        TaylorSeries.mul!(Y_bf_3[i, j], Z[i, j], RotM[2, 3, j], ord)
                        TaylorSeries.mul!(Z_bf_1[i, j], X[i, j], RotM[3, 1, j], ord)
                        TaylorSeries.mul!(Z_bf_2[i, j], Y[i, j], RotM[3, 2, j], ord)
                        TaylorSeries.mul!(Z_bf_3[i, j], Z[i, j], RotM[3, 3, j], ord)
                        TaylorSeries.add!(tmp1360[i, j], X_bf_1[i, j], X_bf_2[i, j], ord)
                        TaylorSeries.add!(X_bf[i, j], tmp1360[i, j], X_bf_3[i, j], ord)
                        TaylorSeries.add!(tmp1362[i, j], Y_bf_1[i, j], Y_bf_2[i, j], ord)
                        TaylorSeries.add!(Y_bf[i, j], tmp1362[i, j], Y_bf_3[i, j], ord)
                        TaylorSeries.add!(tmp1364[i, j], Z_bf_1[i, j], Z_bf_2[i, j], ord)
                        TaylorSeries.add!(Z_bf[i, j], tmp1364[i, j], Z_bf_3[i, j], ord)
                        TaylorSeries.div!(sin_ϕ[i, j], Z_bf[i, j], r_p1d2[i, j], ord)
                        TaylorSeries.pow!(tmp1368[i, j], X_bf[i, j], 2, ord)
                        TaylorSeries.pow!(tmp1370[i, j], Y_bf[i, j], 2, ord)
                        TaylorSeries.add!(tmp1371[i, j], tmp1368[i, j], tmp1370[i, j], ord)
                        TaylorSeries.sqrt!(r_xy[i, j], tmp1371[i, j], ord)
                        TaylorSeries.div!(cos_ϕ[i, j], r_xy[i, j], r_p1d2[i, j], ord)
                        TaylorSeries.div!(sin_λ[i, j], Y_bf[i, j], r_xy[i, j], ord)
                        TaylorSeries.div!(cos_λ[i, j], X_bf[i, j], r_xy[i, j], ord)
                        TaylorSeries.identity!(P_n[i, j, 1], one_t, ord)
                        TaylorSeries.identity!(P_n[i, j, 2], sin_ϕ[i, j], ord)
                        TaylorSeries.identity!(dP_n[i, j, 1], zero_q_1, ord)
                        TaylorSeries.identity!(dP_n[i, j, 2], one_t, ord)
                        for n = 2:n1SEM[j]
                            TaylorSeries.mul!(tmp1376[i, j, n], P_n[i, j, n], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp1377[i, j, n], tmp1376[i, j, n], fact1_jsem[n], ord)
                            TaylorSeries.mul!(tmp1378[i, j, n - 1], P_n[i, j, n - 1], fact2_jsem[n], ord)
                            TaylorSeries.subst!(P_n[i, j, n + 1], tmp1377[i, j, n], tmp1378[i, j, n - 1], ord)
                            TaylorSeries.mul!(tmp1380[i, j, n], dP_n[i, j, n], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp1381[i, j, n], P_n[i, j, n], fact3_jsem[n], ord)
                            TaylorSeries.add!(dP_n[i, j, n + 1], tmp1380[i, j, n], tmp1381[i, j, n], ord)
                            TaylorSeries.pow!(temp_rn[i, j, n], r_p1d2[i, j], fact5_jsem[n], ord)
                        end
                        TaylorSeries.pow!(r_p4[i, j], r_p2[i, j], 2, ord)
                        TaylorSeries.mul!(tmp1386[i, j, 3], P_n[i, j, 3], fact4_jsem[2], ord)
                        TaylorSeries.mul!(tmp1387[i, j, 3], tmp1386[i, j, 3], J2_t[j], ord)
                        TaylorSeries.div!(F_J_ξ[i, j], tmp1387[i, j, 3], r_p4[i, j], ord)
                        TaylorSeries.subst!(tmp1389[i, j, 3], dP_n[i, j, 3], ord)
                        TaylorSeries.mul!(tmp1390[i, j, 3], tmp1389[i, j, 3], cos_ϕ[i, j], ord)
                        TaylorSeries.mul!(tmp1391[i, j, 3], tmp1390[i, j, 3], J2_t[j], ord)
                        TaylorSeries.div!(F_J_ζ[i, j], tmp1391[i, j, 3], r_p4[i, j], ord)
                        TaylorSeries.identity!(F_J_ξ_36[i, j], zero_q_1, ord)
                        TaylorSeries.identity!(F_J_ζ_36[i, j], zero_q_1, ord)
                        for n = 3:n1SEM[j]
                            TaylorSeries.mul!(tmp1393[i, j, n + 1], P_n[i, j, n + 1], fact4_jsem[n], ord)
                            TaylorSeries.mul!(tmp1394[i, j, n + 1], tmp1393[i, j, n + 1], JSEM[j, n], ord)
                            TaylorSeries.div!(tmp1395[i, j, n + 1], tmp1394[i, j, n + 1], temp_rn[i, j, n], ord)
                            TaylorSeries.add!(temp_fjξ[i, j, n], tmp1395[i, j, n + 1], F_J_ξ_36[i, j], ord)
                            TaylorSeries.subst!(tmp1397[i, j, n + 1], dP_n[i, j, n + 1], ord)
                            TaylorSeries.mul!(tmp1398[i, j, n + 1], tmp1397[i, j, n + 1], cos_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp1399[i, j, n + 1], tmp1398[i, j, n + 1], JSEM[j, n], ord)
                            TaylorSeries.div!(tmp1400[i, j, n + 1], tmp1399[i, j, n + 1], temp_rn[i, j, n], ord)
                            TaylorSeries.add!(temp_fjζ[i, j, n], tmp1400[i, j, n + 1], F_J_ζ_36[i, j], ord)
                            TaylorSeries.identity!(F_J_ξ_36[i, j], temp_fjξ[i, j, n], ord)
                            TaylorSeries.identity!(F_J_ζ_36[i, j], temp_fjζ[i, j, n], ord)
                        end
                        if j == mo
                            for m = 1:n1SEM[mo]
                                if m == 1
                                    TaylorSeries.identity!(sin_mλ[i, j, 1], sin_λ[i, j], ord)
                                    TaylorSeries.identity!(cos_mλ[i, j, 1], cos_λ[i, j], ord)
                                    TaylorSeries.identity!(secϕ_P_nm[i, j, 1, 1], one_t, ord)
                                    TaylorSeries.identity!(P_nm[i, j, 1, 1], cos_ϕ[i, j], ord)
                                    TaylorSeries.mul!(cosϕ_dP_nm[i, j, 1, 1], sin_ϕ[i, j], lnm3[1], ord)
                                else
                                    TaylorSeries.mul!(tmp1403[i, j, m - 1], cos_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                    TaylorSeries.mul!(tmp1404[i, j, m - 1], sin_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                    TaylorSeries.add!(sin_mλ[i, j, m], tmp1403[i, j, m - 1], tmp1404[i, j, m - 1], ord)
                                    TaylorSeries.mul!(tmp1406[i, j, m - 1], cos_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                    TaylorSeries.mul!(tmp1407[i, j, m - 1], sin_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                    TaylorSeries.subst!(cos_mλ[i, j, m], tmp1406[i, j, m - 1], tmp1407[i, j, m - 1], ord)
                                    TaylorSeries.mul!(tmp1409[i, j, m - 1, m - 1], secϕ_P_nm[i, j, m - 1, m - 1], cos_ϕ[i, j], ord)
                                    TaylorSeries.mul!(secϕ_P_nm[i, j, m, m], tmp1409[i, j, m - 1, m - 1], lnm5[m], ord)
                                    TaylorSeries.mul!(P_nm[i, j, m, m], secϕ_P_nm[i, j, m, m], cos_ϕ[i, j], ord)
                                    TaylorSeries.mul!(tmp1412[i, j, m, m], secϕ_P_nm[i, j, m, m], sin_ϕ[i, j], ord)
                                    TaylorSeries.mul!(cosϕ_dP_nm[i, j, m, m], tmp1412[i, j, m, m], lnm3[m], ord)
                                end
                                for n = m + 1:n1SEM[mo]
                                    if n == m + 1
                                        TaylorSeries.mul!(tmp1414[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(secϕ_P_nm[i, j, n, m], tmp1414[i, j, n - 1, m], lnm1[n, m], ord)
                                    else
                                        TaylorSeries.mul!(tmp1416[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp1417[i, j, n - 1, m], tmp1416[i, j, n - 1, m], lnm1[n, m], ord)
                                        TaylorSeries.mul!(tmp1418[i, j, n - 2, m], secϕ_P_nm[i, j, n - 2, m], lnm2[n, m], ord)
                                        TaylorSeries.add!(secϕ_P_nm[i, j, n, m], tmp1417[i, j, n - 1, m], tmp1418[i, j, n - 2, m], ord)
                                    end
                                    TaylorSeries.mul!(P_nm[i, j, n, m], secϕ_P_nm[i, j, n, m], cos_ϕ[i, j], ord)
                                    TaylorSeries.mul!(tmp1421[i, j, n, m], secϕ_P_nm[i, j, n, m], sin_ϕ[i, j], ord)
                                    TaylorSeries.mul!(tmp1422[i, j, n, m], tmp1421[i, j, n, m], lnm3[n], ord)
                                    TaylorSeries.mul!(tmp1423[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], lnm4[n, m], ord)
                                    TaylorSeries.add!(cosϕ_dP_nm[i, j, n, m], tmp1422[i, j, n, m], tmp1423[i, j, n - 1, m], ord)
                                end
                            end
                            TaylorSeries.mul!(tmp1425[i, j, 2, 1], P_nm[i, j, 2, 1], lnm6[2], ord)
                            TaylorSeries.mul!(tmp1426[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                            TaylorSeries.mul!(tmp1427[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                            TaylorSeries.add!(tmp1428[i, j, 1], tmp1426[i, j, 1], tmp1427[i, j, 1], ord)
                            TaylorSeries.mul!(tmp1429[i, j, 2, 1], tmp1425[i, j, 2, 1], tmp1428[i, j, 1], ord)
                            TaylorSeries.mul!(tmp1430[i, j, 2, 2], P_nm[i, j, 2, 2], lnm6[2], ord)
                            TaylorSeries.mul!(tmp1431[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                            TaylorSeries.mul!(tmp1432[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                            TaylorSeries.add!(tmp1433[i, j, 2], tmp1431[i, j, 2], tmp1432[i, j, 2], ord)
                            TaylorSeries.mul!(tmp1434[i, j, 2, 2], tmp1430[i, j, 2, 2], tmp1433[i, j, 2], ord)
                            TaylorSeries.add!(tmp1435[i, j, 2, 1], tmp1429[i, j, 2, 1], tmp1434[i, j, 2, 2], ord)
                            TaylorSeries.div!(F_CS_ξ[i, j], tmp1435[i, j, 2, 1], r_p4[i, j], ord)
                            TaylorSeries.mul!(tmp1437[i, j, 2, 1], secϕ_P_nm[i, j, 2, 1], lnm7[1], ord)
                            TaylorSeries.mul!(tmp1438[i, j, 1], S21M_t, cos_mλ[i, j, 1], ord)
                            TaylorSeries.mul!(tmp1439[i, j, 1], C21M_t, sin_mλ[i, j, 1], ord)
                            TaylorSeries.subst!(tmp1440[i, j, 1], tmp1438[i, j, 1], tmp1439[i, j, 1], ord)
                            TaylorSeries.mul!(tmp1441[i, j, 2, 1], tmp1437[i, j, 2, 1], tmp1440[i, j, 1], ord)
                            TaylorSeries.mul!(tmp1442[i, j, 2, 2], secϕ_P_nm[i, j, 2, 2], lnm7[2], ord)
                            TaylorSeries.mul!(tmp1443[i, j, 2], S22M_t, cos_mλ[i, j, 2], ord)
                            TaylorSeries.mul!(tmp1444[i, j, 2], C22M_t, sin_mλ[i, j, 2], ord)
                            TaylorSeries.subst!(tmp1445[i, j, 2], tmp1443[i, j, 2], tmp1444[i, j, 2], ord)
                            TaylorSeries.mul!(tmp1446[i, j, 2, 2], tmp1442[i, j, 2, 2], tmp1445[i, j, 2], ord)
                            TaylorSeries.add!(tmp1447[i, j, 2, 1], tmp1441[i, j, 2, 1], tmp1446[i, j, 2, 2], ord)
                            TaylorSeries.div!(F_CS_η[i, j], tmp1447[i, j, 2, 1], r_p4[i, j], ord)
                            TaylorSeries.mul!(tmp1449[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                            TaylorSeries.mul!(tmp1450[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                            TaylorSeries.add!(tmp1451[i, j, 1], tmp1449[i, j, 1], tmp1450[i, j, 1], ord)
                            TaylorSeries.mul!(tmp1452[i, j, 2, 1], cosϕ_dP_nm[i, j, 2, 1], tmp1451[i, j, 1], ord)
                            TaylorSeries.mul!(tmp1453[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                            TaylorSeries.mul!(tmp1454[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                            TaylorSeries.add!(tmp1455[i, j, 2], tmp1453[i, j, 2], tmp1454[i, j, 2], ord)
                            TaylorSeries.mul!(tmp1456[i, j, 2, 2], cosϕ_dP_nm[i, j, 2, 2], tmp1455[i, j, 2], ord)
                            TaylorSeries.add!(tmp1457[i, j, 2, 1], tmp1452[i, j, 2, 1], tmp1456[i, j, 2, 2], ord)
                            TaylorSeries.div!(F_CS_ζ[i, j], tmp1457[i, j, 2, 1], r_p4[i, j], ord)
                            TaylorSeries.identity!(F_CS_ξ_36[i, j], zero_q_1, ord)
                            TaylorSeries.identity!(F_CS_η_36[i, j], zero_q_1, ord)
                            TaylorSeries.identity!(F_CS_ζ_36[i, j], zero_q_1, ord)
                            for n = 3:n2M
                                for m = 1:n
                                    TaylorSeries.mul!(Cnm_cosmλ[i, j, n, m], CM[n, m], cos_mλ[i, j, m], ord)
                                    TaylorSeries.mul!(Cnm_sinmλ[i, j, n, m], CM[n, m], sin_mλ[i, j, m], ord)
                                    TaylorSeries.mul!(Snm_cosmλ[i, j, n, m], SM[n, m], cos_mλ[i, j, m], ord)
                                    TaylorSeries.mul!(Snm_sinmλ[i, j, n, m], SM[n, m], sin_mλ[i, j, m], ord)
                                    TaylorSeries.mul!(tmp1463[i, j, n, m], P_nm[i, j, n, m], lnm6[n], ord)
                                    TaylorSeries.add!(tmp1464[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                    TaylorSeries.mul!(tmp1465[i, j, n, m], tmp1463[i, j, n, m], tmp1464[i, j, n, m], ord)
                                    TaylorSeries.div!(tmp1466[i, j, n, m], tmp1465[i, j, n, m], temp_rn[i, j, n], ord)
                                    TaylorSeries.add!(temp_CS_ξ[i, j, n, m], tmp1466[i, j, n, m], F_CS_ξ_36[i, j], ord)
                                    TaylorSeries.mul!(tmp1468[i, j, n, m], secϕ_P_nm[i, j, n, m], lnm7[m], ord)
                                    TaylorSeries.subst!(tmp1469[i, j, n, m], Snm_cosmλ[i, j, n, m], Cnm_sinmλ[i, j, n, m], ord)
                                    TaylorSeries.mul!(tmp1470[i, j, n, m], tmp1468[i, j, n, m], tmp1469[i, j, n, m], ord)
                                    TaylorSeries.div!(tmp1471[i, j, n, m], tmp1470[i, j, n, m], temp_rn[i, j, n], ord)
                                    TaylorSeries.add!(temp_CS_η[i, j, n, m], tmp1471[i, j, n, m], F_CS_η_36[i, j], ord)
                                    TaylorSeries.add!(tmp1473[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                    TaylorSeries.mul!(tmp1474[i, j, n, m], cosϕ_dP_nm[i, j, n, m], tmp1473[i, j, n, m], ord)
                                    TaylorSeries.div!(tmp1475[i, j, n, m], tmp1474[i, j, n, m], temp_rn[i, j, n], ord)
                                    TaylorSeries.add!(temp_CS_ζ[i, j, n, m], tmp1475[i, j, n, m], F_CS_ζ_36[i, j], ord)
                                    TaylorSeries.identity!(F_CS_ξ_36[i, j], temp_CS_ξ[i, j, n, m], ord)
                                    TaylorSeries.identity!(F_CS_η_36[i, j], temp_CS_η[i, j, n, m], ord)
                                    TaylorSeries.identity!(F_CS_ζ_36[i, j], temp_CS_ζ[i, j, n, m], ord)
                                end
                            end
                            TaylorSeries.add!(tmp1477[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                            TaylorSeries.add!(tmp1478[i, j], F_CS_ξ[i, j], F_CS_ξ_36[i, j], ord)
                            TaylorSeries.add!(F_JCS_ξ[i, j], tmp1477[i, j], tmp1478[i, j], ord)
                            TaylorSeries.add!(F_JCS_η[i, j], F_CS_η[i, j], F_CS_η_36[i, j], ord)
                            TaylorSeries.add!(tmp1481[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                            TaylorSeries.add!(tmp1482[i, j], F_CS_ζ[i, j], F_CS_ζ_36[i, j], ord)
                            TaylorSeries.add!(F_JCS_ζ[i, j], tmp1481[i, j], tmp1482[i, j], ord)
                        else
                            TaylorSeries.add!(F_JCS_ξ[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                            TaylorSeries.identity!(F_JCS_η[i, j], zero_q_1, ord)
                            TaylorSeries.add!(F_JCS_ζ[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                        end
                        TaylorSeries.mul!(Rb2p[i, j, 1, 1], cos_ϕ[i, j], cos_λ[i, j], ord)
                        TaylorSeries.subst!(Rb2p[i, j, 2, 1], sin_λ[i, j], ord)
                        TaylorSeries.subst!(tmp1488[i, j], sin_ϕ[i, j], ord)
                        TaylorSeries.mul!(Rb2p[i, j, 3, 1], tmp1488[i, j], cos_λ[i, j], ord)
                        TaylorSeries.mul!(Rb2p[i, j, 1, 2], cos_ϕ[i, j], sin_λ[i, j], ord)
                        TaylorSeries.identity!(Rb2p[i, j, 2, 2], cos_λ[i, j], ord)
                        TaylorSeries.subst!(tmp1491[i, j], sin_ϕ[i, j], ord)
                        TaylorSeries.mul!(Rb2p[i, j, 3, 2], tmp1491[i, j], sin_λ[i, j], ord)
                        TaylorSeries.identity!(Rb2p[i, j, 1, 3], sin_ϕ[i, j], ord)
                        TaylorSeries.identity!(Rb2p[i, j, 2, 3], zero_q_1, ord)
                        TaylorSeries.identity!(Rb2p[i, j, 3, 3], cos_ϕ[i, j], ord)
                        TaylorSeries.mul!(tmp1493[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 1, j], ord)
                        TaylorSeries.mul!(tmp1494[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 1, j], ord)
                        TaylorSeries.add!(tmp1495[i, j, 1, 1], tmp1493[i, j, 1, 1], tmp1494[i, j, 1, 2], ord)
                        TaylorSeries.mul!(tmp1496[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 1, j], ord)
                        TaylorSeries.add!(Gc2p[i, j, 1, 1], tmp1495[i, j, 1, 1], tmp1496[i, j, 1, 3], ord)
                        TaylorSeries.mul!(tmp1498[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 1, j], ord)
                        TaylorSeries.mul!(tmp1499[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 1, j], ord)
                        TaylorSeries.add!(tmp1500[i, j, 2, 1], tmp1498[i, j, 2, 1], tmp1499[i, j, 2, 2], ord)
                        TaylorSeries.mul!(tmp1501[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 1, j], ord)
                        TaylorSeries.add!(Gc2p[i, j, 2, 1], tmp1500[i, j, 2, 1], tmp1501[i, j, 2, 3], ord)
                        TaylorSeries.mul!(tmp1503[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 1, j], ord)
                        TaylorSeries.mul!(tmp1504[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 1, j], ord)
                        TaylorSeries.add!(tmp1505[i, j, 3, 1], tmp1503[i, j, 3, 1], tmp1504[i, j, 3, 2], ord)
                        TaylorSeries.mul!(tmp1506[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 1, j], ord)
                        TaylorSeries.add!(Gc2p[i, j, 3, 1], tmp1505[i, j, 3, 1], tmp1506[i, j, 3, 3], ord)
                        TaylorSeries.mul!(tmp1508[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 2, j], ord)
                        TaylorSeries.mul!(tmp1509[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 2, j], ord)
                        TaylorSeries.add!(tmp1510[i, j, 1, 1], tmp1508[i, j, 1, 1], tmp1509[i, j, 1, 2], ord)
                        TaylorSeries.mul!(tmp1511[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 2, j], ord)
                        TaylorSeries.add!(Gc2p[i, j, 1, 2], tmp1510[i, j, 1, 1], tmp1511[i, j, 1, 3], ord)
                        TaylorSeries.mul!(tmp1513[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 2, j], ord)
                        TaylorSeries.mul!(tmp1514[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 2, j], ord)
                        TaylorSeries.add!(tmp1515[i, j, 2, 1], tmp1513[i, j, 2, 1], tmp1514[i, j, 2, 2], ord)
                        TaylorSeries.mul!(tmp1516[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 2, j], ord)
                        TaylorSeries.add!(Gc2p[i, j, 2, 2], tmp1515[i, j, 2, 1], tmp1516[i, j, 2, 3], ord)
                        TaylorSeries.mul!(tmp1518[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 2, j], ord)
                        TaylorSeries.mul!(tmp1519[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 2, j], ord)
                        TaylorSeries.add!(tmp1520[i, j, 3, 1], tmp1518[i, j, 3, 1], tmp1519[i, j, 3, 2], ord)
                        TaylorSeries.mul!(tmp1521[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 2, j], ord)
                        TaylorSeries.add!(Gc2p[i, j, 3, 2], tmp1520[i, j, 3, 1], tmp1521[i, j, 3, 3], ord)
                        TaylorSeries.mul!(tmp1523[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 3, j], ord)
                        TaylorSeries.mul!(tmp1524[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 3, j], ord)
                        TaylorSeries.add!(tmp1525[i, j, 1, 1], tmp1523[i, j, 1, 1], tmp1524[i, j, 1, 2], ord)
                        TaylorSeries.mul!(tmp1526[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 3, j], ord)
                        TaylorSeries.add!(Gc2p[i, j, 1, 3], tmp1525[i, j, 1, 1], tmp1526[i, j, 1, 3], ord)
                        TaylorSeries.mul!(tmp1528[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 3, j], ord)
                        TaylorSeries.mul!(tmp1529[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 3, j], ord)
                        TaylorSeries.add!(tmp1530[i, j, 2, 1], tmp1528[i, j, 2, 1], tmp1529[i, j, 2, 2], ord)
                        TaylorSeries.mul!(tmp1531[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 3, j], ord)
                        TaylorSeries.add!(Gc2p[i, j, 2, 3], tmp1530[i, j, 2, 1], tmp1531[i, j, 2, 3], ord)
                        TaylorSeries.mul!(tmp1533[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 3, j], ord)
                        TaylorSeries.mul!(tmp1534[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 3, j], ord)
                        TaylorSeries.add!(tmp1535[i, j, 3, 1], tmp1533[i, j, 3, 1], tmp1534[i, j, 3, 2], ord)
                        TaylorSeries.mul!(tmp1536[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 3, j], ord)
                        TaylorSeries.add!(Gc2p[i, j, 3, 3], tmp1535[i, j, 3, 1], tmp1536[i, j, 3, 3], ord)
                        TaylorSeries.mul!(tmp1538[i, j, 1, 1], F_JCS_ξ[i, j], Gc2p[i, j, 1, 1], ord)
                        TaylorSeries.mul!(tmp1539[i, j, 2, 1], F_JCS_η[i, j], Gc2p[i, j, 2, 1], ord)
                        TaylorSeries.add!(tmp1540[i, j, 1, 1], tmp1538[i, j, 1, 1], tmp1539[i, j, 2, 1], ord)
                        TaylorSeries.mul!(tmp1541[i, j, 3, 1], F_JCS_ζ[i, j], Gc2p[i, j, 3, 1], ord)
                        TaylorSeries.add!(F_JCS_x[i, j], tmp1540[i, j, 1, 1], tmp1541[i, j, 3, 1], ord)
                        TaylorSeries.mul!(tmp1543[i, j, 1, 2], F_JCS_ξ[i, j], Gc2p[i, j, 1, 2], ord)
                        TaylorSeries.mul!(tmp1544[i, j, 2, 2], F_JCS_η[i, j], Gc2p[i, j, 2, 2], ord)
                        TaylorSeries.add!(tmp1545[i, j, 1, 2], tmp1543[i, j, 1, 2], tmp1544[i, j, 2, 2], ord)
                        TaylorSeries.mul!(tmp1546[i, j, 3, 2], F_JCS_ζ[i, j], Gc2p[i, j, 3, 2], ord)
                        TaylorSeries.add!(F_JCS_y[i, j], tmp1545[i, j, 1, 2], tmp1546[i, j, 3, 2], ord)
                        TaylorSeries.mul!(tmp1548[i, j, 1, 3], F_JCS_ξ[i, j], Gc2p[i, j, 1, 3], ord)
                        TaylorSeries.mul!(tmp1549[i, j, 2, 3], F_JCS_η[i, j], Gc2p[i, j, 2, 3], ord)
                        TaylorSeries.add!(tmp1550[i, j, 1, 3], tmp1548[i, j, 1, 3], tmp1549[i, j, 2, 3], ord)
                        TaylorSeries.mul!(tmp1551[i, j, 3, 3], F_JCS_ζ[i, j], Gc2p[i, j, 3, 3], ord)
                        TaylorSeries.add!(F_JCS_z[i, j], tmp1550[i, j, 1, 3], tmp1551[i, j, 3, 3], ord)
                    end
                end
            end
        end
        for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        TaylorSeries.mul!(tmp1553[i, j], μ[i], F_JCS_x[i, j], ord)
                        TaylorSeries.subst!(temp_accX_j[i, j], accX[j], tmp1553[i, j], ord)
                        TaylorSeries.identity!(accX[j], temp_accX_j[i, j], ord)
                        TaylorSeries.mul!(tmp1555[i, j], μ[i], F_JCS_y[i, j], ord)
                        TaylorSeries.subst!(temp_accY_j[i, j], accY[j], tmp1555[i, j], ord)
                        TaylorSeries.identity!(accY[j], temp_accY_j[i, j], ord)
                        TaylorSeries.mul!(tmp1557[i, j], μ[i], F_JCS_z[i, j], ord)
                        TaylorSeries.subst!(temp_accZ_j[i, j], accZ[j], tmp1557[i, j], ord)
                        TaylorSeries.identity!(accZ[j], temp_accZ_j[i, j], ord)
                        TaylorSeries.mul!(tmp1559[i, j], μ[j], F_JCS_x[i, j], ord)
                        TaylorSeries.add!(temp_accX_i[i, j], accX[i], tmp1559[i, j], ord)
                        TaylorSeries.identity!(accX[i], temp_accX_i[i, j], ord)
                        TaylorSeries.mul!(tmp1561[i, j], μ[j], F_JCS_y[i, j], ord)
                        TaylorSeries.add!(temp_accY_i[i, j], accY[i], tmp1561[i, j], ord)
                        TaylorSeries.identity!(accY[i], temp_accY_i[i, j], ord)
                        TaylorSeries.mul!(tmp1563[i, j], μ[j], F_JCS_z[i, j], ord)
                        TaylorSeries.add!(temp_accZ_i[i, j], accZ[i], tmp1563[i, j], ord)
                        TaylorSeries.identity!(accZ[i], temp_accZ_i[i, j], ord)
                        if j == mo
                            TaylorSeries.mul!(tmp1565[i, j], Y[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.mul!(tmp1566[i, j], Z[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.subst!(tmp1567[i, j], tmp1565[i, j], tmp1566[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_x[i], μ[i], tmp1567[i, j], ord)
                            TaylorSeries.mul!(tmp1569[i, j], Z[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.mul!(tmp1570[i, j], X[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.subst!(tmp1571[i, j], tmp1569[i, j], tmp1570[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_y[i], μ[i], tmp1571[i, j], ord)
                            TaylorSeries.mul!(tmp1573[i, j], X[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.mul!(tmp1574[i, j], Y[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.subst!(tmp1575[i, j], tmp1573[i, j], tmp1574[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_z[i], μ[i], tmp1575[i, j], ord)
                            TaylorSeries.mul!(tmp1577[i], N_MfigM_pmA_x[i], μ[j], ord)
                            TaylorSeries.subst!(temp_N_M_x[i], N_MfigM[1], tmp1577[i], ord)
                            TaylorSeries.identity!(N_MfigM[1], temp_N_M_x[i], ord)
                            TaylorSeries.mul!(tmp1579[i], N_MfigM_pmA_y[i], μ[j], ord)
                            TaylorSeries.subst!(temp_N_M_y[i], N_MfigM[2], tmp1579[i], ord)
                            TaylorSeries.identity!(N_MfigM[2], temp_N_M_y[i], ord)
                            TaylorSeries.mul!(tmp1581[i], N_MfigM_pmA_z[i], μ[j], ord)
                            TaylorSeries.subst!(temp_N_M_z[i], N_MfigM[3], tmp1581[i], ord)
                            TaylorSeries.identity!(N_MfigM[3], temp_N_M_z[i], ord)
                        end
                    end
                end
            end
        end
        for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    TaylorSeries.mul!(_4ϕj[i, j], 4, newtonianNb_Potential[j], ord)
                    TaylorSeries.add!(ϕi_plus_4ϕj[i, j], newtonianNb_Potential[i], _4ϕj[i, j], ord)
                    TaylorSeries.mul!(_2v2[i, j], 2, v2[i], ord)
                    TaylorSeries.add!(sj2_plus_2si2[i, j], v2[j], _2v2[i, j], ord)
                    TaylorSeries.mul!(tmp1590[i, j], 4, vi_dot_vj[i, j], ord)
                    TaylorSeries.subst!(sj2_plus_2si2_minus_4vivj[i, j], sj2_plus_2si2[i, j], tmp1590[i, j], ord)
                    TaylorSeries.subst!(ϕs_and_vs[i, j], sj2_plus_2si2_minus_4vivj[i, j], ϕi_plus_4ϕj[i, j], ord)
                    TaylorSeries.mul!(Xij_t_Ui[i, j], X[i, j], dq[3i - 2], ord)
                    TaylorSeries.mul!(Yij_t_Vi[i, j], Y[i, j], dq[3i - 1], ord)
                    TaylorSeries.mul!(Zij_t_Wi[i, j], Z[i, j], dq[3i], ord)
                    TaylorSeries.add!(tmp1596[i, j], Xij_t_Ui[i, j], Yij_t_Vi[i, j], ord)
                    TaylorSeries.add!(Rij_dot_Vi[i, j], tmp1596[i, j], Zij_t_Wi[i, j], ord)
                    TaylorSeries.pow!(tmp1599[i, j], Rij_dot_Vi[i, j], 2, ord)
                    TaylorSeries.div!(pn1t7[i, j], tmp1599[i, j], r_p2[i, j], ord)
                    TaylorSeries.mul!(tmp1602[i, j], 1.5, pn1t7[i, j], ord)
                    TaylorSeries.subst!(pn1t2_7[i, j], ϕs_and_vs[i, j], tmp1602[i, j], ord)
                    TaylorSeries.add!(pn1t1_7[i, j], c_p2, pn1t2_7[i, j], ord)
                end
            end
            TaylorSeries.identity!(pntempX[j], zero_q_1, ord)
            TaylorSeries.identity!(pntempY[j], zero_q_1, ord)
            TaylorSeries.identity!(pntempZ[j], zero_q_1, ord)
        end
        for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    TaylorSeries.mul!(pNX_t_X[i, j], newtonX[i], X[i, j], ord)
                    TaylorSeries.mul!(pNY_t_Y[i, j], newtonY[i], Y[i, j], ord)
                    TaylorSeries.mul!(pNZ_t_Z[i, j], newtonZ[i], Z[i, j], ord)
                    TaylorSeries.add!(tmp1609[i, j], pNX_t_X[i, j], pNY_t_Y[i, j], ord)
                    TaylorSeries.add!(tmp1610[i, j], tmp1609[i, j], pNZ_t_Z[i, j], ord)
                    TaylorSeries.mul!(tmp1611[i, j], 0.5, tmp1610[i, j], ord)
                    TaylorSeries.add!(pn1[i, j], pn1t1_7[i, j], tmp1611[i, j], ord)
                    TaylorSeries.mul!(X_t_pn1[i, j], newton_acc_X[i, j], pn1[i, j], ord)
                    TaylorSeries.mul!(Y_t_pn1[i, j], newton_acc_Y[i, j], pn1[i, j], ord)
                    TaylorSeries.mul!(Z_t_pn1[i, j], newton_acc_Z[i, j], pn1[i, j], ord)
                    TaylorSeries.mul!(pNX_t_pn3[i, j], newtonX[i], pn3[i, j], ord)
                    TaylorSeries.mul!(pNY_t_pn3[i, j], newtonY[i], pn3[i, j], ord)
                    TaylorSeries.mul!(pNZ_t_pn3[i, j], newtonZ[i], pn3[i, j], ord)
                    TaylorSeries.add!(tmp1619[i, j], U_t_pn2[i, j], pNX_t_pn3[i, j], ord)
                    TaylorSeries.add!(termpnx[i, j], X_t_pn1[i, j], tmp1619[i, j], ord)
                    TaylorSeries.add!(sumpnx[i, j], pntempX[j], termpnx[i, j], ord)
                    TaylorSeries.identity!(pntempX[j], sumpnx[i, j], ord)
                    TaylorSeries.add!(tmp1622[i, j], V_t_pn2[i, j], pNY_t_pn3[i, j], ord)
                    TaylorSeries.add!(termpny[i, j], Y_t_pn1[i, j], tmp1622[i, j], ord)
                    TaylorSeries.add!(sumpny[i, j], pntempY[j], termpny[i, j], ord)
                    TaylorSeries.identity!(pntempY[j], sumpny[i, j], ord)
                    TaylorSeries.add!(tmp1625[i, j], W_t_pn2[i, j], pNZ_t_pn3[i, j], ord)
                    TaylorSeries.add!(termpnz[i, j], Z_t_pn1[i, j], tmp1625[i, j], ord)
                    TaylorSeries.add!(sumpnz[i, j], pntempZ[j], termpnz[i, j], ord)
                    TaylorSeries.identity!(pntempZ[j], sumpnz[i, j], ord)
                end
            end
            TaylorSeries.mul!(postNewtonX[j], pntempX[j], c_m2, ord)
            TaylorSeries.mul!(postNewtonY[j], pntempY[j], c_m2, ord)
            TaylorSeries.mul!(postNewtonZ[j], pntempZ[j], c_m2, ord)
        end
        for i = 1:N_ext
            TaylorSeries.add!(dq[3 * (N + i) - 2], postNewtonX[i], accX[i], ord)
            TaylorSeries.add!(dq[3 * (N + i) - 1], postNewtonY[i], accY[i], ord)
            TaylorSeries.add!(dq[3 * (N + i)], postNewtonZ[i], accZ[i], ord)
        end
        for i = N_ext + 1:N
            TaylorSeries.identity!(dq[3 * (N + i) - 2], postNewtonX[i], ord)
            TaylorSeries.identity!(dq[3 * (N + i) - 1], postNewtonY[i], ord)
            TaylorSeries.identity!(dq[3 * (N + i)], postNewtonZ[i], ord)
        end
        TaylorSeries.mul!(tmp1634, I_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1635, I_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1636, I_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1637, tmp1635, tmp1636, ord)
        TaylorSeries.add!(Iω_x, tmp1634, tmp1637, ord)
        TaylorSeries.mul!(tmp1639, I_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1640, I_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1641, I_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1642, tmp1640, tmp1641, ord)
        TaylorSeries.add!(Iω_y, tmp1639, tmp1642, ord)
        TaylorSeries.mul!(tmp1644, I_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1645, I_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1646, I_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1647, tmp1645, tmp1646, ord)
        TaylorSeries.add!(Iω_z, tmp1644, tmp1647, ord)
        TaylorSeries.mul!(tmp1649, q[6N + 5], Iω_z, ord)
        TaylorSeries.mul!(tmp1650, q[6N + 6], Iω_y, ord)
        TaylorSeries.subst!(ωxIω_x, tmp1649, tmp1650, ord)
        TaylorSeries.mul!(tmp1652, q[6N + 6], Iω_x, ord)
        TaylorSeries.mul!(tmp1653, q[6N + 4], Iω_z, ord)
        TaylorSeries.subst!(ωxIω_y, tmp1652, tmp1653, ord)
        TaylorSeries.mul!(tmp1655, q[6N + 4], Iω_y, ord)
        TaylorSeries.mul!(tmp1656, q[6N + 5], Iω_x, ord)
        TaylorSeries.subst!(ωxIω_z, tmp1655, tmp1656, ord)
        TaylorSeries.mul!(tmp1658, dI_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1659, dI_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1660, dI_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1661, tmp1659, tmp1660, ord)
        TaylorSeries.add!(dIω_x, tmp1658, tmp1661, ord)
        TaylorSeries.mul!(tmp1663, dI_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1664, dI_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1665, dI_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1666, tmp1664, tmp1665, ord)
        TaylorSeries.add!(dIω_y, tmp1663, tmp1666, ord)
        TaylorSeries.mul!(tmp1668, dI_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1669, dI_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1670, dI_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp1671, tmp1669, tmp1670, ord)
        TaylorSeries.add!(dIω_z, tmp1668, tmp1671, ord)
        TaylorSeries.div!(er_EM_I_1, X[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_2, Y[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_3, Z[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.identity!(p_E_I_1, RotM[3, 1, ea], ord)
        TaylorSeries.identity!(p_E_I_2, RotM[3, 2, ea], ord)
        TaylorSeries.identity!(p_E_I_3, RotM[3, 3, ea], ord)
        TaylorSeries.mul!(tmp1676, RotM[1, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp1677, RotM[1, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp1678, RotM[1, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp1679, tmp1677, tmp1678, ord)
        TaylorSeries.add!(er_EM_1, tmp1676, tmp1679, ord)
        TaylorSeries.mul!(tmp1681, RotM[2, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp1682, RotM[2, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp1683, RotM[2, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp1684, tmp1682, tmp1683, ord)
        TaylorSeries.add!(er_EM_2, tmp1681, tmp1684, ord)
        TaylorSeries.mul!(tmp1686, RotM[3, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp1687, RotM[3, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp1688, RotM[3, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp1689, tmp1687, tmp1688, ord)
        TaylorSeries.add!(er_EM_3, tmp1686, tmp1689, ord)
        TaylorSeries.mul!(tmp1691, RotM[1, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp1692, RotM[1, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp1693, RotM[1, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp1694, tmp1692, tmp1693, ord)
        TaylorSeries.add!(p_E_1, tmp1691, tmp1694, ord)
        TaylorSeries.mul!(tmp1696, RotM[2, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp1697, RotM[2, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp1698, RotM[2, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp1699, tmp1697, tmp1698, ord)
        TaylorSeries.add!(p_E_2, tmp1696, tmp1699, ord)
        TaylorSeries.mul!(tmp1701, RotM[3, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp1702, RotM[3, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp1703, RotM[3, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp1704, tmp1702, tmp1703, ord)
        TaylorSeries.add!(p_E_3, tmp1701, tmp1704, ord)
        TaylorSeries.mul!(tmp1706, I_m_t[1, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp1707, I_m_t[1, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp1708, I_m_t[1, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp1709, tmp1707, tmp1708, ord)
        TaylorSeries.add!(I_er_EM_1, tmp1706, tmp1709, ord)
        TaylorSeries.mul!(tmp1711, I_m_t[2, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp1712, I_m_t[2, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp1713, I_m_t[2, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp1714, tmp1712, tmp1713, ord)
        TaylorSeries.add!(I_er_EM_2, tmp1711, tmp1714, ord)
        TaylorSeries.mul!(tmp1716, I_m_t[3, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp1717, I_m_t[3, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp1718, I_m_t[3, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp1719, tmp1717, tmp1718, ord)
        TaylorSeries.add!(I_er_EM_3, tmp1716, tmp1719, ord)
        TaylorSeries.mul!(tmp1721, I_m_t[1, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp1722, I_m_t[1, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp1723, I_m_t[1, 3], p_E_3, ord)
        TaylorSeries.add!(tmp1724, tmp1722, tmp1723, ord)
        TaylorSeries.add!(I_p_E_1, tmp1721, tmp1724, ord)
        TaylorSeries.mul!(tmp1726, I_m_t[2, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp1727, I_m_t[2, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp1728, I_m_t[2, 3], p_E_3, ord)
        TaylorSeries.add!(tmp1729, tmp1727, tmp1728, ord)
        TaylorSeries.add!(I_p_E_2, tmp1726, tmp1729, ord)
        TaylorSeries.mul!(tmp1731, I_m_t[3, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp1732, I_m_t[3, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp1733, I_m_t[3, 3], p_E_3, ord)
        TaylorSeries.add!(tmp1734, tmp1732, tmp1733, ord)
        TaylorSeries.add!(I_p_E_3, tmp1731, tmp1734, ord)
        TaylorSeries.mul!(tmp1736, er_EM_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp1737, er_EM_3, I_er_EM_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_1, tmp1736, tmp1737, ord)
        TaylorSeries.mul!(tmp1739, er_EM_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp1740, er_EM_1, I_er_EM_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_2, tmp1739, tmp1740, ord)
        TaylorSeries.mul!(tmp1742, er_EM_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp1743, er_EM_2, I_er_EM_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_3, tmp1742, tmp1743, ord)
        TaylorSeries.mul!(tmp1745, er_EM_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp1746, er_EM_3, I_p_E_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_1, tmp1745, tmp1746, ord)
        TaylorSeries.mul!(tmp1748, er_EM_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp1749, er_EM_1, I_p_E_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_2, tmp1748, tmp1749, ord)
        TaylorSeries.mul!(tmp1751, er_EM_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp1752, er_EM_2, I_p_E_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_3, tmp1751, tmp1752, ord)
        TaylorSeries.mul!(tmp1754, p_E_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp1755, p_E_3, I_er_EM_2, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_1, tmp1754, tmp1755, ord)
        TaylorSeries.mul!(tmp1757, p_E_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp1758, p_E_1, I_er_EM_3, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_2, tmp1757, tmp1758, ord)
        TaylorSeries.mul!(tmp1760, p_E_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp1761, p_E_2, I_er_EM_1, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_3, tmp1760, tmp1761, ord)
        TaylorSeries.mul!(tmp1763, p_E_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp1764, p_E_3, I_p_E_2, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_1, tmp1763, tmp1764, ord)
        TaylorSeries.mul!(tmp1766, p_E_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp1767, p_E_1, I_p_E_3, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_2, tmp1766, tmp1767, ord)
        TaylorSeries.mul!(tmp1769, p_E_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp1770, p_E_2, I_p_E_1, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_3, tmp1769, tmp1770, ord)
        TaylorSeries.pow!(tmp1774, sin_ϕ[ea, mo], 2, ord)
        TaylorSeries.mul!(tmp1775, 7, tmp1774, ord)
        TaylorSeries.subst!(one_minus_7sin2ϕEM, one_t, tmp1775, ord)
        TaylorSeries.mul!(two_sinϕEM, 2, sin_ϕ[ea, mo], ord)
        TaylorSeries.pow!(tmp1780, r_p1d2[mo, ea], 5, ord)
        TaylorSeries.div!(N_MfigM_figE_factor_div_rEMp5, N_MfigM_figE_factor, tmp1780, ord)
        TaylorSeries.mul!(tmp1782, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_1, ord)
        TaylorSeries.add!(tmp1783, er_EM_cross_I_p_E_1, p_E_cross_I_er_EM_1, ord)
        TaylorSeries.mul!(tmp1784, two_sinϕEM, tmp1783, ord)
        TaylorSeries.add!(tmp1785, tmp1782, tmp1784, ord)
        TaylorSeries.mul!(tmp1787, 0.4, p_E_cross_I_p_E_1, ord)
        TaylorSeries.subst!(tmp1788, tmp1785, tmp1787, ord)
        TaylorSeries.mul!(N_MfigM_figE_1, N_MfigM_figE_factor_div_rEMp5, tmp1788, ord)
        TaylorSeries.mul!(tmp1790, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_2, ord)
        TaylorSeries.add!(tmp1791, er_EM_cross_I_p_E_2, p_E_cross_I_er_EM_2, ord)
        TaylorSeries.mul!(tmp1792, two_sinϕEM, tmp1791, ord)
        TaylorSeries.add!(tmp1793, tmp1790, tmp1792, ord)
        TaylorSeries.mul!(tmp1795, 0.4, p_E_cross_I_p_E_2, ord)
        TaylorSeries.subst!(tmp1796, tmp1793, tmp1795, ord)
        TaylorSeries.mul!(N_MfigM_figE_2, N_MfigM_figE_factor_div_rEMp5, tmp1796, ord)
        TaylorSeries.mul!(tmp1798, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_3, ord)
        TaylorSeries.add!(tmp1799, er_EM_cross_I_p_E_3, p_E_cross_I_er_EM_3, ord)
        TaylorSeries.mul!(tmp1800, two_sinϕEM, tmp1799, ord)
        TaylorSeries.add!(tmp1801, tmp1798, tmp1800, ord)
        TaylorSeries.mul!(tmp1803, 0.4, p_E_cross_I_p_E_3, ord)
        TaylorSeries.subst!(tmp1804, tmp1801, tmp1803, ord)
        TaylorSeries.mul!(N_MfigM_figE_3, N_MfigM_figE_factor_div_rEMp5, tmp1804, ord)
        TaylorSeries.mul!(tmp1806, RotM[1, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp1807, RotM[1, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp1808, RotM[1, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp1809, tmp1807, tmp1808, ord)
        TaylorSeries.add!(N_1_LMF, tmp1806, tmp1809, ord)
        TaylorSeries.mul!(tmp1811, RotM[2, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp1812, RotM[2, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp1813, RotM[2, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp1814, tmp1812, tmp1813, ord)
        TaylorSeries.add!(N_2_LMF, tmp1811, tmp1814, ord)
        TaylorSeries.mul!(tmp1816, RotM[3, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp1817, RotM[3, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp1818, RotM[3, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp1819, tmp1817, tmp1818, ord)
        TaylorSeries.add!(N_3_LMF, tmp1816, tmp1819, ord)
        TaylorSeries.subst!(tmp1821, q[6N + 10], q[6N + 4], ord)
        TaylorSeries.mul!(tmp1822, k_ν, tmp1821, ord)
        TaylorSeries.mul!(tmp1823, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp1824, tmp1823, q[6N + 11], ord)
        TaylorSeries.subst!(N_cmb_1, tmp1822, tmp1824, ord)
        TaylorSeries.subst!(tmp1826, q[6N + 11], q[6N + 5], ord)
        TaylorSeries.mul!(tmp1827, k_ν, tmp1826, ord)
        TaylorSeries.mul!(tmp1828, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp1829, tmp1828, q[6N + 10], ord)
        TaylorSeries.add!(N_cmb_2, tmp1827, tmp1829, ord)
        TaylorSeries.subst!(tmp1831, q[6N + 12], q[6N + 6], ord)
        TaylorSeries.mul!(N_cmb_3, k_ν, tmp1831, ord)
        TaylorSeries.add!(tmp1833, N_1_LMF, N_MfigM_figE_1, ord)
        TaylorSeries.add!(tmp1834, tmp1833, N_cmb_1, ord)
        TaylorSeries.add!(tmp1835, dIω_x, ωxIω_x, ord)
        TaylorSeries.subst!(I_dω_1, tmp1834, tmp1835, ord)
        TaylorSeries.add!(tmp1837, N_2_LMF, N_MfigM_figE_2, ord)
        TaylorSeries.add!(tmp1838, tmp1837, N_cmb_2, ord)
        TaylorSeries.add!(tmp1839, dIω_y, ωxIω_y, ord)
        TaylorSeries.subst!(I_dω_2, tmp1838, tmp1839, ord)
        TaylorSeries.add!(tmp1841, N_3_LMF, N_MfigM_figE_3, ord)
        TaylorSeries.add!(tmp1842, tmp1841, N_cmb_3, ord)
        TaylorSeries.add!(tmp1843, dIω_z, ωxIω_z, ord)
        TaylorSeries.subst!(I_dω_3, tmp1842, tmp1843, ord)
        TaylorSeries.mul!(Ic_ωc_1, I_c_t[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(Ic_ωc_2, I_c_t[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(Ic_ωc_3, I_c_t[3, 3], q[6N + 12], ord)
        TaylorSeries.mul!(tmp1848, q[6N + 6], Ic_ωc_2, ord)
        TaylorSeries.mul!(tmp1849, q[6N + 5], Ic_ωc_3, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_1, tmp1848, tmp1849, ord)
        TaylorSeries.mul!(tmp1851, q[6N + 4], Ic_ωc_3, ord)
        TaylorSeries.mul!(tmp1852, q[6N + 6], Ic_ωc_1, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_2, tmp1851, tmp1852, ord)
        TaylorSeries.mul!(tmp1854, q[6N + 5], Ic_ωc_1, ord)
        TaylorSeries.mul!(tmp1855, q[6N + 4], Ic_ωc_2, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_3, tmp1854, tmp1855, ord)
        TaylorSeries.subst!(Ic_dωc_1, m_ωm_x_Icωc_1, N_cmb_1, ord)
        TaylorSeries.subst!(Ic_dωc_2, m_ωm_x_Icωc_2, N_cmb_2, ord)
        TaylorSeries.subst!(Ic_dωc_3, m_ωm_x_Icωc_3, N_cmb_3, ord)
        TaylorSeries.sincos!(tmp1860, tmp1940, q[6N + 3], ord)
        TaylorSeries.mul!(tmp1861, q[6N + 4], tmp1860, ord)
        TaylorSeries.sincos!(tmp1941, tmp1862, q[6N + 3], ord)
        TaylorSeries.mul!(tmp1863, q[6N + 5], tmp1862, ord)
        TaylorSeries.add!(tmp1864, tmp1861, tmp1863, ord)
        TaylorSeries.sincos!(tmp1865, tmp1942, q[6N + 2], ord)
        TaylorSeries.div!(dq[6N + 1], tmp1864, tmp1865, ord)
        TaylorSeries.sincos!(tmp1943, tmp1867, q[6N + 3], ord)
        TaylorSeries.mul!(tmp1868, q[6N + 4], tmp1867, ord)
        TaylorSeries.sincos!(tmp1869, tmp1944, q[6N + 3], ord)
        TaylorSeries.mul!(tmp1870, q[6N + 5], tmp1869, ord)
        TaylorSeries.subst!(dq[6N + 2], tmp1868, tmp1870, ord)
        TaylorSeries.sincos!(tmp1945, tmp1872, q[6N + 2], ord)
        TaylorSeries.mul!(tmp1873, dq[6N + 1], tmp1872, ord)
        TaylorSeries.subst!(dq[6N + 3], q[6N + 6], tmp1873, ord)
        TaylorSeries.mul!(tmp1875, inv_I_m_t[1, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp1876, inv_I_m_t[1, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp1877, inv_I_m_t[1, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp1878, tmp1876, tmp1877, ord)
        TaylorSeries.add!(dq[6N + 4], tmp1875, tmp1878, ord)
        TaylorSeries.mul!(tmp1880, inv_I_m_t[2, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp1881, inv_I_m_t[2, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp1882, inv_I_m_t[2, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp1883, tmp1881, tmp1882, ord)
        TaylorSeries.add!(dq[6N + 5], tmp1880, tmp1883, ord)
        TaylorSeries.mul!(tmp1885, inv_I_m_t[3, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp1886, inv_I_m_t[3, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp1887, inv_I_m_t[3, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp1888, tmp1886, tmp1887, ord)
        TaylorSeries.add!(dq[6N + 6], tmp1885, tmp1888, ord)
        TaylorSeries.sincos!(tmp1890, tmp1946, q[6N + 8], ord)
        TaylorSeries.div!(tmp1891, ω_c_CE_2, tmp1890, ord)
        TaylorSeries.subst!(dq[6N + 9], tmp1891, ord)
        TaylorSeries.sincos!(tmp1947, tmp1893, q[6N + 8], ord)
        TaylorSeries.mul!(tmp1894, dq[6N + 9], tmp1893, ord)
        TaylorSeries.subst!(dq[6N + 7], ω_c_CE_3, tmp1894, ord)
        TaylorSeries.identity!(dq[6N + 8], ω_c_CE_1, ord)
        TaylorSeries.mul!(dq[6N + 10], inv_I_c_t[1, 1], Ic_dωc_1, ord)
        TaylorSeries.mul!(dq[6N + 11], inv_I_c_t[2, 2], Ic_dωc_2, ord)
        TaylorSeries.mul!(dq[6N + 12], inv_I_c_t[3, 3], Ic_dωc_3, ord)
        TaylorSeries.identity!(dq[6N + 13], zero_q_1, ord)
        for __idx = eachindex(q)
            (q[__idx]).coeffs[ordnext + 1] = (dq[__idx]).coeffs[ordnext] / ordnext
        end
    end
    return nothing
end

# TaylorIntegration.jetcoeffs! method for src/dynamical_model.jl: NBP_pN_A_J23E_J23M_J2S_threads!
function TaylorIntegration.jetcoeffs!(::Val{NBP_pN_A_J23E_J23M_J2S_threads!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params) where {_T <: Real, _S <: Number, _N}
    order = t.order
    local (N, jd0) = params
    local S = eltype(q)
    local N_ext = 11
    local zero_q_1 = zero(q[1])
    local one_t = one(t)
    local dsj2k = t + (jd0 - J2000)
    local I_m_t = (ITM_und - I_c) .* one_t
    local dI_m_t = ordpres_differentiate.(I_m_t)
    local inv_I_m_t = inv(I_m_t)
    local I_c_t = I_c .* one_t
    local inv_I_c_t = inv(I_c_t)
    local I_M_t = I_m_t + I_c_t
    X = Array{S}(undef, N, N)
    Y = Array{S}(undef, N, N)
    Z = Array{S}(undef, N, N)
    r_p2 = Array{S}(undef, N, N)
    r_p1d2 = Array{S}(undef, N, N)
    r_p3d2 = Array{S}(undef, N, N)
    r_p7d2 = Array{S}(undef, N, N)
    newtonX = Array{S}(undef, N)
    newtonY = Array{S}(undef, N)
    newtonZ = Array{S}(undef, N)
    newtonianCoeff = Array{S}(undef, N, N)
    U = Array{S}(undef, N, N)
    V = Array{S}(undef, N, N)
    W = Array{S}(undef, N, N)
    _4U_m_3X = Array{S}(undef, N, N)
    _4V_m_3Y = Array{S}(undef, N, N)
    _4W_m_3Z = Array{S}(undef, N, N)
    UU = Array{S}(undef, N, N)
    VV = Array{S}(undef, N, N)
    WW = Array{S}(undef, N, N)
    newtonian1b_Potential = Array{S}(undef, N, N)
    newtonianNb_Potential = Array{S}(undef, N)
    newton_acc_X = Array{S}(undef, N, N)
    newton_acc_Y = Array{S}(undef, N, N)
    newton_acc_Z = Array{S}(undef, N, N)
    v2 = Array{S}(undef, N)
    _2v2 = Array{S}(undef, N, N)
    vi_dot_vj = Array{S}(undef, N, N)
    pn2 = Array{S}(undef, N, N)
    U_t_pn2 = Array{S}(undef, N, N)
    V_t_pn2 = Array{S}(undef, N, N)
    W_t_pn2 = Array{S}(undef, N, N)
    pn3 = Array{S}(undef, N, N)
    pNX_t_pn3 = Array{S}(undef, N, N)
    pNY_t_pn3 = Array{S}(undef, N, N)
    pNZ_t_pn3 = Array{S}(undef, N, N)
    _4ϕj = Array{S}(undef, N, N)
    ϕi_plus_4ϕj = Array{S}(undef, N, N)
    sj2_plus_2si2 = Array{S}(undef, N, N)
    sj2_plus_2si2_minus_4vivj = Array{S}(undef, N, N)
    ϕs_and_vs = Array{S}(undef, N, N)
    pn1t1_7 = Array{S}(undef, N, N)
    pNX_t_X = Array{S}(undef, N, N)
    pNY_t_Y = Array{S}(undef, N, N)
    pNZ_t_Z = Array{S}(undef, N, N)
    pn1 = Array{S}(undef, N, N)
    X_t_pn1 = Array{S}(undef, N, N)
    Y_t_pn1 = Array{S}(undef, N, N)
    Z_t_pn1 = Array{S}(undef, N, N)
    pntempX = Array{S}(undef, N)
    pntempY = Array{S}(undef, N)
    pntempZ = Array{S}(undef, N)
    postNewtonX = Array{S}(undef, N)
    postNewtonY = Array{S}(undef, N)
    postNewtonZ = Array{S}(undef, N)
    X_bf_1 = Array{S}(undef, N_ext, N_ext)
    Y_bf_1 = Array{S}(undef, N_ext, N_ext)
    Z_bf_1 = Array{S}(undef, N_ext, N_ext)
    X_bf_2 = Array{S}(undef, N_ext, N_ext)
    Y_bf_2 = Array{S}(undef, N_ext, N_ext)
    Z_bf_2 = Array{S}(undef, N_ext, N_ext)
    X_bf_3 = Array{S}(undef, N_ext, N_ext)
    Y_bf_3 = Array{S}(undef, N_ext, N_ext)
    Z_bf_3 = Array{S}(undef, N_ext, N_ext)
    X_bf = Array{S}(undef, N_ext, N_ext)
    Y_bf = Array{S}(undef, N_ext, N_ext)
    Z_bf = Array{S}(undef, N_ext, N_ext)
    F_JCS_x = Array{S}(undef, N_ext, N_ext)
    F_JCS_y = Array{S}(undef, N_ext, N_ext)
    F_JCS_z = Array{S}(undef, N_ext, N_ext)
    temp_accX_j = Array{S}(undef, N_ext, N_ext)
    temp_accY_j = Array{S}(undef, N_ext, N_ext)
    temp_accZ_j = Array{S}(undef, N_ext, N_ext)
    temp_accX_i = Array{S}(undef, N_ext, N_ext)
    temp_accY_i = Array{S}(undef, N_ext, N_ext)
    temp_accZ_i = Array{S}(undef, N_ext, N_ext)
    sin_ϕ = Array{S}(undef, N_ext, N_ext)
    cos_ϕ = Array{S}(undef, N_ext, N_ext)
    sin_λ = Array{S}(undef, N_ext, N_ext)
    cos_λ = Array{S}(undef, N_ext, N_ext)
    r_xy = Array{S}(undef, N_ext, N_ext)
    r_p4 = Array{S}(undef, N_ext, N_ext)
    P_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    dP_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjξ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjζ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_rn = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_CS_ξ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_η = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_ζ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    F_CS_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_η_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ζ_36 = Array{S}(undef, N_ext, N_ext)
    sin_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    cos_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    Cnm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Cnm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    secϕ_P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    cosϕ_dP_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    F_J_ξ = Array{S}(undef, N_ext, N_ext)
    F_J_η = Array{S}(undef, N_ext, N_ext)
    F_J_ζ = Array{S}(undef, N_ext, N_ext)
    F_CS_ξ = Array{S}(undef, N_ext, N_ext)
    F_CS_η = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ = Array{S}(undef, N_ext, N_ext)
    F_JCS_ξ = Array{S}(undef, N_ext, N_ext)
    F_JCS_η = Array{S}(undef, N_ext, N_ext)
    F_JCS_ζ = Array{S}(undef, N_ext, N_ext)
    Rb2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    Gc2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    accX = Array{S}(undef, N_ext)
    accY = Array{S}(undef, N_ext)
    accZ = Array{S}(undef, N_ext)
    N_MfigM_pmA_x = Array{S}(undef, N_ext)
    N_MfigM_pmA_y = Array{S}(undef, N_ext)
    N_MfigM_pmA_z = Array{S}(undef, N_ext)
    temp_N_M_x = Array{S}(undef, N_ext)
    temp_N_M_y = Array{S}(undef, N_ext)
    temp_N_M_z = Array{S}(undef, N_ext)
    N_MfigM = Array{S}(undef, 3)
    N_MfigM[1] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[2] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[3] = Taylor1(identity(constant_term(zero_q_1)), order)
    local αs = deg2rad(α_p_sun * one_t)
    local δs = deg2rad(δ_p_sun * one_t)
    RotM = Array{S}(undef, 3, 3, 5)
    local RotM[:, :, ea] = c2t_jpl_de430(dsj2k)
    local RotM[:, :, su] = pole_rotation(αs, δs)
    ϕ_m = Taylor1(identity(constant_term(q[6N + 1])), order)
    θ_m = Taylor1(identity(constant_term(q[6N + 2])), order)
    ψ_m = Taylor1(identity(constant_term(q[6N + 3])), order)
    tmp2856 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp3590 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp2857 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp3591 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp2858 = Taylor1(constant_term(tmp2856) * constant_term(tmp2857), order)
    tmp2859 = Taylor1(cos(constant_term(θ_m)), order)
    tmp3592 = Taylor1(sin(constant_term(θ_m)), order)
    tmp2860 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp3593 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp2861 = Taylor1(constant_term(tmp2859) * constant_term(tmp2860), order)
    tmp2862 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp3594 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp2863 = Taylor1(constant_term(tmp2861) * constant_term(tmp2862), order)
    RotM[1, 1, mo] = Taylor1(constant_term(tmp2858) - constant_term(tmp2863), order)
    tmp2865 = Taylor1(cos(constant_term(θ_m)), order)
    tmp3595 = Taylor1(sin(constant_term(θ_m)), order)
    tmp2866 = Taylor1(-(constant_term(tmp2865)), order)
    tmp2867 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp3596 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp2868 = Taylor1(constant_term(tmp2866) * constant_term(tmp2867), order)
    tmp2869 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp3597 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp2870 = Taylor1(constant_term(tmp2868) * constant_term(tmp2869), order)
    tmp2871 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp3598 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp2872 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp3599 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp2873 = Taylor1(constant_term(tmp2871) * constant_term(tmp2872), order)
    RotM[2, 1, mo] = Taylor1(constant_term(tmp2870) - constant_term(tmp2873), order)
    tmp2875 = Taylor1(sin(constant_term(θ_m)), order)
    tmp3600 = Taylor1(cos(constant_term(θ_m)), order)
    tmp2876 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp3601 = Taylor1(cos(constant_term(ϕ_m)), order)
    RotM[3, 1, mo] = Taylor1(constant_term(tmp2875) * constant_term(tmp2876), order)
    tmp2878 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp3602 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp2879 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp3603 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp2880 = Taylor1(constant_term(tmp2878) * constant_term(tmp2879), order)
    tmp2881 = Taylor1(cos(constant_term(θ_m)), order)
    tmp3604 = Taylor1(sin(constant_term(θ_m)), order)
    tmp2882 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp3605 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp2883 = Taylor1(constant_term(tmp2881) * constant_term(tmp2882), order)
    tmp2884 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp3606 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp2885 = Taylor1(constant_term(tmp2883) * constant_term(tmp2884), order)
    RotM[1, 2, mo] = Taylor1(constant_term(tmp2880) + constant_term(tmp2885), order)
    tmp2887 = Taylor1(cos(constant_term(θ_m)), order)
    tmp3607 = Taylor1(sin(constant_term(θ_m)), order)
    tmp2888 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp3608 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp2889 = Taylor1(constant_term(tmp2887) * constant_term(tmp2888), order)
    tmp2890 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp3609 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp2891 = Taylor1(constant_term(tmp2889) * constant_term(tmp2890), order)
    tmp2892 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp3610 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp2893 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp3611 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp2894 = Taylor1(constant_term(tmp2892) * constant_term(tmp2893), order)
    RotM[2, 2, mo] = Taylor1(constant_term(tmp2891) - constant_term(tmp2894), order)
    tmp2896 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp3612 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp2897 = Taylor1(-(constant_term(tmp2896)), order)
    tmp2898 = Taylor1(sin(constant_term(θ_m)), order)
    tmp3613 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[3, 2, mo] = Taylor1(constant_term(tmp2897) * constant_term(tmp2898), order)
    tmp2900 = Taylor1(sin(constant_term(θ_m)), order)
    tmp3614 = Taylor1(cos(constant_term(θ_m)), order)
    tmp2901 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp3615 = Taylor1(cos(constant_term(ψ_m)), order)
    RotM[1, 3, mo] = Taylor1(constant_term(tmp2900) * constant_term(tmp2901), order)
    tmp2903 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp3616 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp2904 = Taylor1(sin(constant_term(θ_m)), order)
    tmp3617 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[2, 3, mo] = Taylor1(constant_term(tmp2903) * constant_term(tmp2904), order)
    RotM[3, 3, mo] = Taylor1(cos(constant_term(θ_m)), order)
    tmp3618 = Taylor1(sin(constant_term(θ_m)), order)
    mantlef2coref = Array{S}(undef, 3, 3)
    ϕ_c = Taylor1(identity(constant_term(q[6N + 7])), order)
    tmp2907 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3619 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp2908 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(tmp2907), order)
    tmp2909 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3620 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp2910 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp2909), order)
    mantlef2coref[1, 1] = Taylor1(constant_term(tmp2908) + constant_term(tmp2910), order)
    tmp2912 = Taylor1(-(constant_term(RotM[1, 1, mo])), order)
    tmp2913 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3621 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp2914 = Taylor1(constant_term(tmp2912) * constant_term(tmp2913), order)
    tmp2915 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3622 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp2916 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp2915), order)
    mantlef2coref[2, 1] = Taylor1(constant_term(tmp2914) + constant_term(tmp2916), order)
    mantlef2coref[3, 1] = Taylor1(identity(constant_term(RotM[1, 3, mo])), order)
    tmp2918 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3623 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp2919 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(tmp2918), order)
    tmp2920 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3624 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp2921 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp2920), order)
    mantlef2coref[1, 2] = Taylor1(constant_term(tmp2919) + constant_term(tmp2921), order)
    tmp2923 = Taylor1(-(constant_term(RotM[2, 1, mo])), order)
    tmp2924 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3625 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp2925 = Taylor1(constant_term(tmp2923) * constant_term(tmp2924), order)
    tmp2926 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3626 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp2927 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp2926), order)
    mantlef2coref[2, 2] = Taylor1(constant_term(tmp2925) + constant_term(tmp2927), order)
    mantlef2coref[3, 2] = Taylor1(identity(constant_term(RotM[2, 3, mo])), order)
    tmp2929 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3627 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp2930 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(tmp2929), order)
    tmp2931 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3628 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp2932 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp2931), order)
    mantlef2coref[1, 3] = Taylor1(constant_term(tmp2930) + constant_term(tmp2932), order)
    tmp2934 = Taylor1(-(constant_term(RotM[3, 1, mo])), order)
    tmp2935 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp3629 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp2936 = Taylor1(constant_term(tmp2934) * constant_term(tmp2935), order)
    tmp2937 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp3630 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp2938 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp2937), order)
    mantlef2coref[2, 3] = Taylor1(constant_term(tmp2936) + constant_term(tmp2938), order)
    mantlef2coref[3, 3] = Taylor1(identity(constant_term(RotM[3, 3, mo])), order)
    tmp2940 = Taylor1(constant_term(mantlef2coref[1, 1]) * constant_term(q[6N + 10]), order)
    tmp2941 = Taylor1(constant_term(mantlef2coref[1, 2]) * constant_term(q[6N + 11]), order)
    tmp2942 = Taylor1(constant_term(mantlef2coref[1, 3]) * constant_term(q[6N + 12]), order)
    tmp2943 = Taylor1(constant_term(tmp2941) + constant_term(tmp2942), order)
    ω_c_CE_1 = Taylor1(constant_term(tmp2940) + constant_term(tmp2943), order)
    tmp2945 = Taylor1(constant_term(mantlef2coref[2, 1]) * constant_term(q[6N + 10]), order)
    tmp2946 = Taylor1(constant_term(mantlef2coref[2, 2]) * constant_term(q[6N + 11]), order)
    tmp2947 = Taylor1(constant_term(mantlef2coref[2, 3]) * constant_term(q[6N + 12]), order)
    tmp2948 = Taylor1(constant_term(tmp2946) + constant_term(tmp2947), order)
    ω_c_CE_2 = Taylor1(constant_term(tmp2945) + constant_term(tmp2948), order)
    tmp2950 = Taylor1(constant_term(mantlef2coref[3, 1]) * constant_term(q[6N + 10]), order)
    tmp2951 = Taylor1(constant_term(mantlef2coref[3, 2]) * constant_term(q[6N + 11]), order)
    tmp2952 = Taylor1(constant_term(mantlef2coref[3, 3]) * constant_term(q[6N + 12]), order)
    tmp2953 = Taylor1(constant_term(tmp2951) + constant_term(tmp2952), order)
    ω_c_CE_3 = Taylor1(constant_term(tmp2950) + constant_term(tmp2953), order)
    local J2E_t = (J2E + J2EDOT * (dsj2k / yr)) * RE_au ^ 2
    local J2S_t = JSEM[su, 2] * one_t
    J2_t = Array{S}(undef, 5)
    J2_t[su] = Taylor1(identity(constant_term(J2S_t)), order)
    J2_t[ea] = Taylor1(identity(constant_term(J2E_t)), order)
    local N_MfigM_figE_factor = 7.5 * μ[ea] * J2E_t
    #= REPL[11]:307 =# Threads.@threads for j = 1:N
            newtonX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            newtonY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            newtonZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            newtonianNb_Potential[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            dq[3j - 2] = Taylor1(identity(constant_term(q[3 * (N + j) - 2])), order)
            dq[3j - 1] = Taylor1(identity(constant_term(q[3 * (N + j) - 1])), order)
            dq[3j] = Taylor1(identity(constant_term(q[3 * (N + j)])), order)
        end
    #= REPL[11]:319 =# Threads.@threads for j = 1:N_ext
            accX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            accY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            accZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        end
    tmp2962 = Array{Taylor1{_S}}(undef, size(dq))
    tmp2962 .= Taylor1(zero(_S), order)
    tmp2964 = Array{Taylor1{_S}}(undef, size(dq))
    tmp2964 .= Taylor1(zero(_S), order)
    tmp2967 = Array{Taylor1{_S}}(undef, size(dq))
    tmp2967 .= Taylor1(zero(_S), order)
    tmp2969 = Array{Taylor1{_S}}(undef, size(dq))
    tmp2969 .= Taylor1(zero(_S), order)
    tmp2972 = Array{Taylor1{_S}}(undef, size(dq))
    tmp2972 .= Taylor1(zero(_S), order)
    tmp2974 = Array{Taylor1{_S}}(undef, size(dq))
    tmp2974 .= Taylor1(zero(_S), order)
    pn2x = Array{Taylor1{_S}}(undef, size(X))
    pn2x .= Taylor1(zero(_S), order)
    pn2y = Array{Taylor1{_S}}(undef, size(Y))
    pn2y .= Taylor1(zero(_S), order)
    pn2z = Array{Taylor1{_S}}(undef, size(Z))
    pn2z .= Taylor1(zero(_S), order)
    tmp2982 = Array{Taylor1{_S}}(undef, size(UU))
    tmp2982 .= Taylor1(zero(_S), order)
    tmp2985 = Array{Taylor1{_S}}(undef, size(X))
    tmp2985 .= Taylor1(zero(_S), order)
    tmp2987 = Array{Taylor1{_S}}(undef, size(Y))
    tmp2987 .= Taylor1(zero(_S), order)
    tmp2988 = Array{Taylor1{_S}}(undef, size(tmp2985))
    tmp2988 .= Taylor1(zero(_S), order)
    tmp2990 = Array{Taylor1{_S}}(undef, size(Z))
    tmp2990 .= Taylor1(zero(_S), order)
    tmp2998 = Array{Taylor1{_S}}(undef, size(pn2x))
    tmp2998 .= Taylor1(zero(_S), order)
    tmp2999 = Array{Taylor1{_S}}(undef, size(tmp2998))
    tmp2999 .= Taylor1(zero(_S), order)
    tmp3010 = Array{Taylor1{_S}}(undef, size(X))
    tmp3010 .= Taylor1(zero(_S), order)
    temp_001 = Array{Taylor1{_S}}(undef, size(tmp3010))
    temp_001 .= Taylor1(zero(_S), order)
    tmp3012 = Array{Taylor1{_S}}(undef, size(Y))
    tmp3012 .= Taylor1(zero(_S), order)
    temp_002 = Array{Taylor1{_S}}(undef, size(tmp3012))
    temp_002 .= Taylor1(zero(_S), order)
    tmp3014 = Array{Taylor1{_S}}(undef, size(Z))
    tmp3014 .= Taylor1(zero(_S), order)
    temp_003 = Array{Taylor1{_S}}(undef, size(tmp3014))
    temp_003 .= Taylor1(zero(_S), order)
    temp_004 = Array{Taylor1{_S}}(undef, size(newtonian1b_Potential))
    temp_004 .= Taylor1(zero(_S), order)
    tmp3018 = Array{Taylor1{_S}}(undef, size(dq))
    tmp3018 .= Taylor1(zero(_S), order)
    tmp3020 = Array{Taylor1{_S}}(undef, size(dq))
    tmp3020 .= Taylor1(zero(_S), order)
    tmp3021 = Array{Taylor1{_S}}(undef, size(tmp3018))
    tmp3021 .= Taylor1(zero(_S), order)
    tmp3023 = Array{Taylor1{_S}}(undef, size(dq))
    tmp3023 .= Taylor1(zero(_S), order)
    #= REPL[11]:325 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    X[i, j] = Taylor1(constant_term(q[3i - 2]) - constant_term(q[3j - 2]), order)
                    Y[i, j] = Taylor1(constant_term(q[3i - 1]) - constant_term(q[3j - 1]), order)
                    Z[i, j] = Taylor1(constant_term(q[3i]) - constant_term(q[3j]), order)
                    U[i, j] = Taylor1(constant_term(dq[3i - 2]) - constant_term(dq[3j - 2]), order)
                    V[i, j] = Taylor1(constant_term(dq[3i - 1]) - constant_term(dq[3j - 1]), order)
                    W[i, j] = Taylor1(constant_term(dq[3i]) - constant_term(dq[3j]), order)
                    tmp2962[3j - 2] = Taylor1(constant_term(4) * constant_term(dq[3j - 2]), order)
                    tmp2964[3i - 2] = Taylor1(constant_term(3) * constant_term(dq[3i - 2]), order)
                    _4U_m_3X[i, j] = Taylor1(constant_term(tmp2962[3j - 2]) - constant_term(tmp2964[3i - 2]), order)
                    tmp2967[3j - 1] = Taylor1(constant_term(4) * constant_term(dq[3j - 1]), order)
                    tmp2969[3i - 1] = Taylor1(constant_term(3) * constant_term(dq[3i - 1]), order)
                    _4V_m_3Y[i, j] = Taylor1(constant_term(tmp2967[3j - 1]) - constant_term(tmp2969[3i - 1]), order)
                    tmp2972[3j] = Taylor1(constant_term(4) * constant_term(dq[3j]), order)
                    tmp2974[3i] = Taylor1(constant_term(3) * constant_term(dq[3i]), order)
                    _4W_m_3Z[i, j] = Taylor1(constant_term(tmp2972[3j]) - constant_term(tmp2974[3i]), order)
                    pn2x[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(_4U_m_3X[i, j]), order)
                    pn2y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(_4V_m_3Y[i, j]), order)
                    pn2z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(_4W_m_3Z[i, j]), order)
                    UU[i, j] = Taylor1(constant_term(dq[3i - 2]) * constant_term(dq[3j - 2]), order)
                    VV[i, j] = Taylor1(constant_term(dq[3i - 1]) * constant_term(dq[3j - 1]), order)
                    WW[i, j] = Taylor1(constant_term(dq[3i]) * constant_term(dq[3j]), order)
                    tmp2982[i, j] = Taylor1(constant_term(UU[i, j]) + constant_term(VV[i, j]), order)
                    vi_dot_vj[i, j] = Taylor1(constant_term(tmp2982[i, j]) + constant_term(WW[i, j]), order)
                    tmp2985[i, j] = Taylor1(constant_term(X[i, j]) ^ float(constant_term(2)), order)
                    tmp2987[i, j] = Taylor1(constant_term(Y[i, j]) ^ float(constant_term(2)), order)
                    tmp2988[i, j] = Taylor1(constant_term(tmp2985[i, j]) + constant_term(tmp2987[i, j]), order)
                    tmp2990[i, j] = Taylor1(constant_term(Z[i, j]) ^ float(constant_term(2)), order)
                    r_p2[i, j] = Taylor1(constant_term(tmp2988[i, j]) + constant_term(tmp2990[i, j]), order)
                    r_p1d2[i, j] = Taylor1(sqrt(constant_term(r_p2[i, j])), order)
                    r_p3d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(1.5)), order)
                    r_p7d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(3.5)), order)
                    newtonianCoeff[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p3d2[i, j]), order)
                    tmp2998[i, j] = Taylor1(constant_term(pn2x[i, j]) + constant_term(pn2y[i, j]), order)
                    tmp2999[i, j] = Taylor1(constant_term(tmp2998[i, j]) + constant_term(pn2z[i, j]), order)
                    pn2[i, j] = Taylor1(constant_term(newtonianCoeff[i, j]) * constant_term(tmp2999[i, j]), order)
                    newton_acc_X[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newton_acc_Y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newton_acc_Z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newtonian1b_Potential[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p1d2[i, j]), order)
                    pn3[i, j] = Taylor1(constant_term(3.5) * constant_term(newtonian1b_Potential[i, j]), order)
                    U_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(U[i, j]), order)
                    V_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(V[i, j]), order)
                    W_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(W[i, j]), order)
                    tmp3010[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_001[i, j] = Taylor1(constant_term(newtonX[j]) + constant_term(tmp3010[i, j]), order)
                    newtonX[j] = Taylor1(identity(constant_term(temp_001[i, j])), order)
                    tmp3012[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_002[i, j] = Taylor1(constant_term(newtonY[j]) + constant_term(tmp3012[i, j]), order)
                    newtonY[j] = Taylor1(identity(constant_term(temp_002[i, j])), order)
                    tmp3014[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_003[i, j] = Taylor1(constant_term(newtonZ[j]) + constant_term(tmp3014[i, j]), order)
                    newtonZ[j] = Taylor1(identity(constant_term(temp_003[i, j])), order)
                    temp_004[i, j] = Taylor1(constant_term(newtonianNb_Potential[j]) + constant_term(newtonian1b_Potential[i, j]), order)
                    newtonianNb_Potential[j] = Taylor1(identity(constant_term(temp_004[i, j])), order)
                end
            end
            tmp3018[3j - 2] = Taylor1(constant_term(dq[3j - 2]) ^ float(constant_term(2)), order)
            tmp3020[3j - 1] = Taylor1(constant_term(dq[3j - 1]) ^ float(constant_term(2)), order)
            tmp3021[3j - 2] = Taylor1(constant_term(tmp3018[3j - 2]) + constant_term(tmp3020[3j - 1]), order)
            tmp3023[3j] = Taylor1(constant_term(dq[3j]) ^ float(constant_term(2)), order)
            v2[j] = Taylor1(constant_term(tmp3021[3j - 2]) + constant_term(tmp3023[3j]), order)
        end
    tmp3025 = Taylor1(constant_term(I_M_t[1, 1]) + constant_term(I_M_t[2, 2]), order)
    tmp3027 = Taylor1(constant_term(tmp3025) / constant_term(2), order)
    tmp3028 = Taylor1(constant_term(I_M_t[3, 3]) - constant_term(tmp3027), order)
    J2M_t = Taylor1(constant_term(tmp3028) / constant_term(μ[mo]), order)
    tmp3030 = Taylor1(constant_term(I_M_t[2, 2]) - constant_term(I_M_t[1, 1]), order)
    tmp3031 = Taylor1(constant_term(tmp3030) / constant_term(μ[mo]), order)
    C22M_t = Taylor1(constant_term(tmp3031) / constant_term(4), order)
    tmp3034 = Taylor1(-(constant_term(I_M_t[1, 3])), order)
    C21M_t = Taylor1(constant_term(tmp3034) / constant_term(μ[mo]), order)
    tmp3036 = Taylor1(-(constant_term(I_M_t[3, 2])), order)
    S21M_t = Taylor1(constant_term(tmp3036) / constant_term(μ[mo]), order)
    tmp3038 = Taylor1(-(constant_term(I_M_t[2, 1])), order)
    tmp3039 = Taylor1(constant_term(tmp3038) / constant_term(μ[mo]), order)
    S22M_t = Taylor1(constant_term(tmp3039) / constant_term(2), order)
    J2_t[mo] = Taylor1(identity(constant_term(J2M_t)), order)
    tmp3051 = Array{Taylor1{_S}}(undef, size(X_bf_1))
    tmp3051 .= Taylor1(zero(_S), order)
    tmp3053 = Array{Taylor1{_S}}(undef, size(Y_bf_1))
    tmp3053 .= Taylor1(zero(_S), order)
    tmp3055 = Array{Taylor1{_S}}(undef, size(Z_bf_1))
    tmp3055 .= Taylor1(zero(_S), order)
    tmp3059 = Array{Taylor1{_S}}(undef, size(X_bf))
    tmp3059 .= Taylor1(zero(_S), order)
    tmp3061 = Array{Taylor1{_S}}(undef, size(Y_bf))
    tmp3061 .= Taylor1(zero(_S), order)
    tmp3062 = Array{Taylor1{_S}}(undef, size(tmp3059))
    tmp3062 .= Taylor1(zero(_S), order)
    tmp3067 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp3067 .= Taylor1(zero(_S), order)
    tmp3068 = Array{Taylor1{_S}}(undef, size(tmp3067))
    tmp3068 .= Taylor1(zero(_S), order)
    tmp3069 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp3069 .= Taylor1(zero(_S), order)
    tmp3071 = Array{Taylor1{_S}}(undef, size(dP_n))
    tmp3071 .= Taylor1(zero(_S), order)
    tmp3072 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp3072 .= Taylor1(zero(_S), order)
    tmp3077 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp3077 .= Taylor1(zero(_S), order)
    tmp3078 = Array{Taylor1{_S}}(undef, size(tmp3077))
    tmp3078 .= Taylor1(zero(_S), order)
    tmp3080 = Array{Taylor1{_S}}(undef, size(dP_n))
    tmp3080 .= Taylor1(zero(_S), order)
    tmp3081 = Array{Taylor1{_S}}(undef, size(tmp3080))
    tmp3081 .= Taylor1(zero(_S), order)
    tmp3082 = Array{Taylor1{_S}}(undef, size(tmp3081))
    tmp3082 .= Taylor1(zero(_S), order)
    tmp3084 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp3084 .= Taylor1(zero(_S), order)
    tmp3085 = Array{Taylor1{_S}}(undef, size(tmp3084))
    tmp3085 .= Taylor1(zero(_S), order)
    tmp3086 = Array{Taylor1{_S}}(undef, size(tmp3085))
    tmp3086 .= Taylor1(zero(_S), order)
    tmp3088 = Array{Taylor1{_S}}(undef, size(dP_n))
    tmp3088 .= Taylor1(zero(_S), order)
    tmp3089 = Array{Taylor1{_S}}(undef, size(tmp3088))
    tmp3089 .= Taylor1(zero(_S), order)
    tmp3090 = Array{Taylor1{_S}}(undef, size(tmp3089))
    tmp3090 .= Taylor1(zero(_S), order)
    tmp3091 = Array{Taylor1{_S}}(undef, size(tmp3090))
    tmp3091 .= Taylor1(zero(_S), order)
    tmp3094 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp3094 .= Taylor1(zero(_S), order)
    tmp3095 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp3095 .= Taylor1(zero(_S), order)
    tmp3097 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp3097 .= Taylor1(zero(_S), order)
    tmp3098 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp3098 .= Taylor1(zero(_S), order)
    tmp3100 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3100 .= Taylor1(zero(_S), order)
    tmp3103 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3103 .= Taylor1(zero(_S), order)
    tmp3105 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3105 .= Taylor1(zero(_S), order)
    tmp3107 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3107 .= Taylor1(zero(_S), order)
    tmp3108 = Array{Taylor1{_S}}(undef, size(tmp3107))
    tmp3108 .= Taylor1(zero(_S), order)
    tmp3109 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3109 .= Taylor1(zero(_S), order)
    tmp3112 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3112 .= Taylor1(zero(_S), order)
    tmp3113 = Array{Taylor1{_S}}(undef, size(tmp3112))
    tmp3113 .= Taylor1(zero(_S), order)
    tmp3114 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3114 .= Taylor1(zero(_S), order)
    tmp3116 = Array{Taylor1{_S}}(undef, size(P_nm))
    tmp3116 .= Taylor1(zero(_S), order)
    tmp3117 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp3117 .= Taylor1(zero(_S), order)
    tmp3118 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp3118 .= Taylor1(zero(_S), order)
    tmp3119 = Array{Taylor1{_S}}(undef, size(tmp3117))
    tmp3119 .= Taylor1(zero(_S), order)
    tmp3120 = Array{Taylor1{_S}}(undef, size(tmp3116))
    tmp3120 .= Taylor1(zero(_S), order)
    tmp3121 = Array{Taylor1{_S}}(undef, size(P_nm))
    tmp3121 .= Taylor1(zero(_S), order)
    tmp3122 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp3122 .= Taylor1(zero(_S), order)
    tmp3123 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp3123 .= Taylor1(zero(_S), order)
    tmp3124 = Array{Taylor1{_S}}(undef, size(tmp3122))
    tmp3124 .= Taylor1(zero(_S), order)
    tmp3125 = Array{Taylor1{_S}}(undef, size(tmp3121))
    tmp3125 .= Taylor1(zero(_S), order)
    tmp3126 = Array{Taylor1{_S}}(undef, size(tmp3120))
    tmp3126 .= Taylor1(zero(_S), order)
    tmp3128 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3128 .= Taylor1(zero(_S), order)
    tmp3129 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp3129 .= Taylor1(zero(_S), order)
    tmp3130 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp3130 .= Taylor1(zero(_S), order)
    tmp3131 = Array{Taylor1{_S}}(undef, size(tmp3129))
    tmp3131 .= Taylor1(zero(_S), order)
    tmp3132 = Array{Taylor1{_S}}(undef, size(tmp3128))
    tmp3132 .= Taylor1(zero(_S), order)
    tmp3133 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3133 .= Taylor1(zero(_S), order)
    tmp3134 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp3134 .= Taylor1(zero(_S), order)
    tmp3135 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp3135 .= Taylor1(zero(_S), order)
    tmp3136 = Array{Taylor1{_S}}(undef, size(tmp3134))
    tmp3136 .= Taylor1(zero(_S), order)
    tmp3137 = Array{Taylor1{_S}}(undef, size(tmp3133))
    tmp3137 .= Taylor1(zero(_S), order)
    tmp3138 = Array{Taylor1{_S}}(undef, size(tmp3132))
    tmp3138 .= Taylor1(zero(_S), order)
    tmp3140 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp3140 .= Taylor1(zero(_S), order)
    tmp3141 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp3141 .= Taylor1(zero(_S), order)
    tmp3142 = Array{Taylor1{_S}}(undef, size(tmp3140))
    tmp3142 .= Taylor1(zero(_S), order)
    tmp3143 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    tmp3143 .= Taylor1(zero(_S), order)
    tmp3144 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp3144 .= Taylor1(zero(_S), order)
    tmp3145 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp3145 .= Taylor1(zero(_S), order)
    tmp3146 = Array{Taylor1{_S}}(undef, size(tmp3144))
    tmp3146 .= Taylor1(zero(_S), order)
    tmp3147 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    tmp3147 .= Taylor1(zero(_S), order)
    tmp3148 = Array{Taylor1{_S}}(undef, size(tmp3143))
    tmp3148 .= Taylor1(zero(_S), order)
    tmp3154 = Array{Taylor1{_S}}(undef, size(P_nm))
    tmp3154 .= Taylor1(zero(_S), order)
    tmp3155 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    tmp3155 .= Taylor1(zero(_S), order)
    tmp3156 = Array{Taylor1{_S}}(undef, size(tmp3154))
    tmp3156 .= Taylor1(zero(_S), order)
    tmp3157 = Array{Taylor1{_S}}(undef, size(tmp3156))
    tmp3157 .= Taylor1(zero(_S), order)
    tmp3159 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp3159 .= Taylor1(zero(_S), order)
    tmp3160 = Array{Taylor1{_S}}(undef, size(Snm_cosmλ))
    tmp3160 .= Taylor1(zero(_S), order)
    tmp3161 = Array{Taylor1{_S}}(undef, size(tmp3159))
    tmp3161 .= Taylor1(zero(_S), order)
    tmp3162 = Array{Taylor1{_S}}(undef, size(tmp3161))
    tmp3162 .= Taylor1(zero(_S), order)
    tmp3164 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    tmp3164 .= Taylor1(zero(_S), order)
    tmp3165 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    tmp3165 .= Taylor1(zero(_S), order)
    tmp3166 = Array{Taylor1{_S}}(undef, size(tmp3165))
    tmp3166 .= Taylor1(zero(_S), order)
    tmp3168 = Array{Taylor1{_S}}(undef, size(F_J_ξ))
    tmp3168 .= Taylor1(zero(_S), order)
    tmp3169 = Array{Taylor1{_S}}(undef, size(F_CS_ξ))
    tmp3169 .= Taylor1(zero(_S), order)
    tmp3172 = Array{Taylor1{_S}}(undef, size(F_J_ζ))
    tmp3172 .= Taylor1(zero(_S), order)
    tmp3173 = Array{Taylor1{_S}}(undef, size(F_CS_ζ))
    tmp3173 .= Taylor1(zero(_S), order)
    tmp3179 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp3179 .= Taylor1(zero(_S), order)
    tmp3182 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp3182 .= Taylor1(zero(_S), order)
    tmp3184 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3184 .= Taylor1(zero(_S), order)
    tmp3185 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3185 .= Taylor1(zero(_S), order)
    tmp3186 = Array{Taylor1{_S}}(undef, size(tmp3184))
    tmp3186 .= Taylor1(zero(_S), order)
    tmp3187 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3187 .= Taylor1(zero(_S), order)
    tmp3189 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3189 .= Taylor1(zero(_S), order)
    tmp3190 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3190 .= Taylor1(zero(_S), order)
    tmp3191 = Array{Taylor1{_S}}(undef, size(tmp3189))
    tmp3191 .= Taylor1(zero(_S), order)
    tmp3192 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3192 .= Taylor1(zero(_S), order)
    tmp3194 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3194 .= Taylor1(zero(_S), order)
    tmp3195 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3195 .= Taylor1(zero(_S), order)
    tmp3196 = Array{Taylor1{_S}}(undef, size(tmp3194))
    tmp3196 .= Taylor1(zero(_S), order)
    tmp3197 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3197 .= Taylor1(zero(_S), order)
    tmp3199 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3199 .= Taylor1(zero(_S), order)
    tmp3200 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3200 .= Taylor1(zero(_S), order)
    tmp3201 = Array{Taylor1{_S}}(undef, size(tmp3199))
    tmp3201 .= Taylor1(zero(_S), order)
    tmp3202 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3202 .= Taylor1(zero(_S), order)
    tmp3204 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3204 .= Taylor1(zero(_S), order)
    tmp3205 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3205 .= Taylor1(zero(_S), order)
    tmp3206 = Array{Taylor1{_S}}(undef, size(tmp3204))
    tmp3206 .= Taylor1(zero(_S), order)
    tmp3207 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3207 .= Taylor1(zero(_S), order)
    tmp3209 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3209 .= Taylor1(zero(_S), order)
    tmp3210 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3210 .= Taylor1(zero(_S), order)
    tmp3211 = Array{Taylor1{_S}}(undef, size(tmp3209))
    tmp3211 .= Taylor1(zero(_S), order)
    tmp3212 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3212 .= Taylor1(zero(_S), order)
    tmp3214 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3214 .= Taylor1(zero(_S), order)
    tmp3215 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3215 .= Taylor1(zero(_S), order)
    tmp3216 = Array{Taylor1{_S}}(undef, size(tmp3214))
    tmp3216 .= Taylor1(zero(_S), order)
    tmp3217 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3217 .= Taylor1(zero(_S), order)
    tmp3219 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3219 .= Taylor1(zero(_S), order)
    tmp3220 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3220 .= Taylor1(zero(_S), order)
    tmp3221 = Array{Taylor1{_S}}(undef, size(tmp3219))
    tmp3221 .= Taylor1(zero(_S), order)
    tmp3222 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3222 .= Taylor1(zero(_S), order)
    tmp3224 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3224 .= Taylor1(zero(_S), order)
    tmp3225 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3225 .= Taylor1(zero(_S), order)
    tmp3226 = Array{Taylor1{_S}}(undef, size(tmp3224))
    tmp3226 .= Taylor1(zero(_S), order)
    tmp3227 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp3227 .= Taylor1(zero(_S), order)
    tmp3229 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp3229 .= Taylor1(zero(_S), order)
    tmp3230 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp3230 .= Taylor1(zero(_S), order)
    tmp3231 = Array{Taylor1{_S}}(undef, size(tmp3229))
    tmp3231 .= Taylor1(zero(_S), order)
    tmp3232 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp3232 .= Taylor1(zero(_S), order)
    tmp3234 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp3234 .= Taylor1(zero(_S), order)
    tmp3235 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp3235 .= Taylor1(zero(_S), order)
    tmp3236 = Array{Taylor1{_S}}(undef, size(tmp3234))
    tmp3236 .= Taylor1(zero(_S), order)
    tmp3237 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp3237 .= Taylor1(zero(_S), order)
    tmp3239 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp3239 .= Taylor1(zero(_S), order)
    tmp3240 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp3240 .= Taylor1(zero(_S), order)
    tmp3241 = Array{Taylor1{_S}}(undef, size(tmp3239))
    tmp3241 .= Taylor1(zero(_S), order)
    tmp3242 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp3242 .= Taylor1(zero(_S), order)
    #= REPL[11]:416 =# Threads.@threads for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        X_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[1, 1, j]), order)
                        X_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[1, 2, j]), order)
                        X_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[1, 3, j]), order)
                        Y_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[2, 1, j]), order)
                        Y_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[2, 2, j]), order)
                        Y_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[2, 3, j]), order)
                        Z_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[3, 1, j]), order)
                        Z_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[3, 2, j]), order)
                        Z_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[3, 3, j]), order)
                        tmp3051[i, j] = Taylor1(constant_term(X_bf_1[i, j]) + constant_term(X_bf_2[i, j]), order)
                        X_bf[i, j] = Taylor1(constant_term(tmp3051[i, j]) + constant_term(X_bf_3[i, j]), order)
                        tmp3053[i, j] = Taylor1(constant_term(Y_bf_1[i, j]) + constant_term(Y_bf_2[i, j]), order)
                        Y_bf[i, j] = Taylor1(constant_term(tmp3053[i, j]) + constant_term(Y_bf_3[i, j]), order)
                        tmp3055[i, j] = Taylor1(constant_term(Z_bf_1[i, j]) + constant_term(Z_bf_2[i, j]), order)
                        Z_bf[i, j] = Taylor1(constant_term(tmp3055[i, j]) + constant_term(Z_bf_3[i, j]), order)
                        sin_ϕ[i, j] = Taylor1(constant_term(Z_bf[i, j]) / constant_term(r_p1d2[i, j]), order)
                        tmp3059[i, j] = Taylor1(constant_term(X_bf[i, j]) ^ float(constant_term(2)), order)
                        tmp3061[i, j] = Taylor1(constant_term(Y_bf[i, j]) ^ float(constant_term(2)), order)
                        tmp3062[i, j] = Taylor1(constant_term(tmp3059[i, j]) + constant_term(tmp3061[i, j]), order)
                        r_xy[i, j] = Taylor1(sqrt(constant_term(tmp3062[i, j])), order)
                        cos_ϕ[i, j] = Taylor1(constant_term(r_xy[i, j]) / constant_term(r_p1d2[i, j]), order)
                        sin_λ[i, j] = Taylor1(constant_term(Y_bf[i, j]) / constant_term(r_xy[i, j]), order)
                        cos_λ[i, j] = Taylor1(constant_term(X_bf[i, j]) / constant_term(r_xy[i, j]), order)
                        P_n[i, j, 1] = Taylor1(identity(constant_term(one_t)), order)
                        P_n[i, j, 2] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                        dP_n[i, j, 1] = Taylor1(identity(constant_term(zero_q_1)), order)
                        dP_n[i, j, 2] = Taylor1(identity(constant_term(one_t)), order)
                        for n = 2:n1SEM[j]
                            tmp3067[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                            tmp3068[i, j, n] = Taylor1(constant_term(tmp3067[i, j, n]) * constant_term(fact1_jsem[n]), order)
                            tmp3069[i, j, n - 1] = Taylor1(constant_term(P_n[i, j, n - 1]) * constant_term(fact2_jsem[n]), order)
                            P_n[i, j, n + 1] = Taylor1(constant_term(tmp3068[i, j, n]) - constant_term(tmp3069[i, j, n - 1]), order)
                            tmp3071[i, j, n] = Taylor1(constant_term(dP_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                            tmp3072[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(fact3_jsem[n]), order)
                            dP_n[i, j, n + 1] = Taylor1(constant_term(tmp3071[i, j, n]) + constant_term(tmp3072[i, j, n]), order)
                            temp_rn[i, j, n] = Taylor1(constant_term(r_p1d2[i, j]) ^ float(constant_term(fact5_jsem[n])), order)
                        end
                        r_p4[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(2)), order)
                        tmp3077[i, j, 3] = Taylor1(constant_term(P_n[i, j, 3]) * constant_term(fact4_jsem[2]), order)
                        tmp3078[i, j, 3] = Taylor1(constant_term(tmp3077[i, j, 3]) * constant_term(J2_t[j]), order)
                        F_J_ξ[i, j] = Taylor1(constant_term(tmp3078[i, j, 3]) / constant_term(r_p4[i, j]), order)
                        tmp3080[i, j, 3] = Taylor1(-(constant_term(dP_n[i, j, 3])), order)
                        tmp3081[i, j, 3] = Taylor1(constant_term(tmp3080[i, j, 3]) * constant_term(cos_ϕ[i, j]), order)
                        tmp3082[i, j, 3] = Taylor1(constant_term(tmp3081[i, j, 3]) * constant_term(J2_t[j]), order)
                        F_J_ζ[i, j] = Taylor1(constant_term(tmp3082[i, j, 3]) / constant_term(r_p4[i, j]), order)
                        F_J_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        F_J_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        for n = 3:n1SEM[j]
                            tmp3084[i, j, n + 1] = Taylor1(constant_term(P_n[i, j, n + 1]) * constant_term(fact4_jsem[n]), order)
                            tmp3085[i, j, n + 1] = Taylor1(constant_term(tmp3084[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                            tmp3086[i, j, n + 1] = Taylor1(constant_term(tmp3085[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                            temp_fjξ[i, j, n] = Taylor1(constant_term(tmp3086[i, j, n + 1]) + constant_term(F_J_ξ_36[i, j]), order)
                            tmp3088[i, j, n + 1] = Taylor1(-(constant_term(dP_n[i, j, n + 1])), order)
                            tmp3089[i, j, n + 1] = Taylor1(constant_term(tmp3088[i, j, n + 1]) * constant_term(cos_ϕ[i, j]), order)
                            tmp3090[i, j, n + 1] = Taylor1(constant_term(tmp3089[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                            tmp3091[i, j, n + 1] = Taylor1(constant_term(tmp3090[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                            temp_fjζ[i, j, n] = Taylor1(constant_term(tmp3091[i, j, n + 1]) + constant_term(F_J_ζ_36[i, j]), order)
                            F_J_ξ_36[i, j] = Taylor1(identity(constant_term(temp_fjξ[i, j, n])), order)
                            F_J_ζ_36[i, j] = Taylor1(identity(constant_term(temp_fjζ[i, j, n])), order)
                        end
                        if j == mo
                            for m = 1:n1SEM[mo]
                                if m == 1
                                    sin_mλ[i, j, 1] = Taylor1(identity(constant_term(sin_λ[i, j])), order)
                                    cos_mλ[i, j, 1] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                                    secϕ_P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(one_t)), order)
                                    P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                                    cosϕ_dP_nm[i, j, 1, 1] = Taylor1(constant_term(sin_ϕ[i, j]) * constant_term(lnm3[1]), order)
                                else
                                    tmp3094[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                    tmp3095[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                    sin_mλ[i, j, m] = Taylor1(constant_term(tmp3094[i, j, m - 1]) + constant_term(tmp3095[i, j, m - 1]), order)
                                    tmp3097[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                    tmp3098[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                    cos_mλ[i, j, m] = Taylor1(constant_term(tmp3097[i, j, m - 1]) - constant_term(tmp3098[i, j, m - 1]), order)
                                    tmp3100[i, j, m - 1, m - 1] = Taylor1(constant_term(secϕ_P_nm[i, j, m - 1, m - 1]) * constant_term(cos_ϕ[i, j]), order)
                                    secϕ_P_nm[i, j, m, m] = Taylor1(constant_term(tmp3100[i, j, m - 1, m - 1]) * constant_term(lnm5[m]), order)
                                    P_nm[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(cos_ϕ[i, j]), order)
                                    tmp3103[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(sin_ϕ[i, j]), order)
                                    cosϕ_dP_nm[i, j, m, m] = Taylor1(constant_term(tmp3103[i, j, m, m]) * constant_term(lnm3[m]), order)
                                end
                                for n = m + 1:n1SEM[mo]
                                    if n == m + 1
                                        tmp3105[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                        secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp3105[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                    else
                                        tmp3107[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                        tmp3108[i, j, n - 1, m] = Taylor1(constant_term(tmp3107[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                        tmp3109[i, j, n - 2, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 2, m]) * constant_term(lnm2[n, m]), order)
                                        secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp3108[i, j, n - 1, m]) + constant_term(tmp3109[i, j, n - 2, m]), order)
                                    end
                                    P_nm[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(cos_ϕ[i, j]), order)
                                    tmp3112[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(sin_ϕ[i, j]), order)
                                    tmp3113[i, j, n, m] = Taylor1(constant_term(tmp3112[i, j, n, m]) * constant_term(lnm3[n]), order)
                                    tmp3114[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(lnm4[n, m]), order)
                                    cosϕ_dP_nm[i, j, n, m] = Taylor1(constant_term(tmp3113[i, j, n, m]) + constant_term(tmp3114[i, j, n - 1, m]), order)
                                end
                            end
                            tmp3116[i, j, 2, 1] = Taylor1(constant_term(P_nm[i, j, 2, 1]) * constant_term(lnm6[2]), order)
                            tmp3117[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp3118[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp3119[i, j, 1] = Taylor1(constant_term(tmp3117[i, j, 1]) + constant_term(tmp3118[i, j, 1]), order)
                            tmp3120[i, j, 2, 1] = Taylor1(constant_term(tmp3116[i, j, 2, 1]) * constant_term(tmp3119[i, j, 1]), order)
                            tmp3121[i, j, 2, 2] = Taylor1(constant_term(P_nm[i, j, 2, 2]) * constant_term(lnm6[2]), order)
                            tmp3122[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp3123[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp3124[i, j, 2] = Taylor1(constant_term(tmp3122[i, j, 2]) + constant_term(tmp3123[i, j, 2]), order)
                            tmp3125[i, j, 2, 2] = Taylor1(constant_term(tmp3121[i, j, 2, 2]) * constant_term(tmp3124[i, j, 2]), order)
                            tmp3126[i, j, 2, 1] = Taylor1(constant_term(tmp3120[i, j, 2, 1]) + constant_term(tmp3125[i, j, 2, 2]), order)
                            F_CS_ξ[i, j] = Taylor1(constant_term(tmp3126[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            tmp3128[i, j, 2, 1] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 1]) * constant_term(lnm7[1]), order)
                            tmp3129[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp3130[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp3131[i, j, 1] = Taylor1(constant_term(tmp3129[i, j, 1]) - constant_term(tmp3130[i, j, 1]), order)
                            tmp3132[i, j, 2, 1] = Taylor1(constant_term(tmp3128[i, j, 2, 1]) * constant_term(tmp3131[i, j, 1]), order)
                            tmp3133[i, j, 2, 2] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 2]) * constant_term(lnm7[2]), order)
                            tmp3134[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp3135[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp3136[i, j, 2] = Taylor1(constant_term(tmp3134[i, j, 2]) - constant_term(tmp3135[i, j, 2]), order)
                            tmp3137[i, j, 2, 2] = Taylor1(constant_term(tmp3133[i, j, 2, 2]) * constant_term(tmp3136[i, j, 2]), order)
                            tmp3138[i, j, 2, 1] = Taylor1(constant_term(tmp3132[i, j, 2, 1]) + constant_term(tmp3137[i, j, 2, 2]), order)
                            F_CS_η[i, j] = Taylor1(constant_term(tmp3138[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            tmp3140[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp3141[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp3142[i, j, 1] = Taylor1(constant_term(tmp3140[i, j, 1]) + constant_term(tmp3141[i, j, 1]), order)
                            tmp3143[i, j, 2, 1] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 1]) * constant_term(tmp3142[i, j, 1]), order)
                            tmp3144[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp3145[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp3146[i, j, 2] = Taylor1(constant_term(tmp3144[i, j, 2]) + constant_term(tmp3145[i, j, 2]), order)
                            tmp3147[i, j, 2, 2] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 2]) * constant_term(tmp3146[i, j, 2]), order)
                            tmp3148[i, j, 2, 1] = Taylor1(constant_term(tmp3143[i, j, 2, 1]) + constant_term(tmp3147[i, j, 2, 2]), order)
                            F_CS_ζ[i, j] = Taylor1(constant_term(tmp3148[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_CS_η_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            for n = 3:n2M
                                for m = 1:n
                                    Cnm_cosmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                    Cnm_sinmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                    Snm_cosmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                    Snm_sinmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                    tmp3154[i, j, n, m] = Taylor1(constant_term(P_nm[i, j, n, m]) * constant_term(lnm6[n]), order)
                                    tmp3155[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                    tmp3156[i, j, n, m] = Taylor1(constant_term(tmp3154[i, j, n, m]) * constant_term(tmp3155[i, j, n, m]), order)
                                    tmp3157[i, j, n, m] = Taylor1(constant_term(tmp3156[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_ξ[i, j, n, m] = Taylor1(constant_term(tmp3157[i, j, n, m]) + constant_term(F_CS_ξ_36[i, j]), order)
                                    tmp3159[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(lnm7[m]), order)
                                    tmp3160[i, j, n, m] = Taylor1(constant_term(Snm_cosmλ[i, j, n, m]) - constant_term(Cnm_sinmλ[i, j, n, m]), order)
                                    tmp3161[i, j, n, m] = Taylor1(constant_term(tmp3159[i, j, n, m]) * constant_term(tmp3160[i, j, n, m]), order)
                                    tmp3162[i, j, n, m] = Taylor1(constant_term(tmp3161[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_η[i, j, n, m] = Taylor1(constant_term(tmp3162[i, j, n, m]) + constant_term(F_CS_η_36[i, j]), order)
                                    tmp3164[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                    tmp3165[i, j, n, m] = Taylor1(constant_term(cosϕ_dP_nm[i, j, n, m]) * constant_term(tmp3164[i, j, n, m]), order)
                                    tmp3166[i, j, n, m] = Taylor1(constant_term(tmp3165[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_ζ[i, j, n, m] = Taylor1(constant_term(tmp3166[i, j, n, m]) + constant_term(F_CS_ζ_36[i, j]), order)
                                    F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ξ[i, j, n, m])), order)
                                    F_CS_η_36[i, j] = Taylor1(identity(constant_term(temp_CS_η[i, j, n, m])), order)
                                    F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ζ[i, j, n, m])), order)
                                end
                            end
                            tmp3168[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                            tmp3169[i, j] = Taylor1(constant_term(F_CS_ξ[i, j]) + constant_term(F_CS_ξ_36[i, j]), order)
                            F_JCS_ξ[i, j] = Taylor1(constant_term(tmp3168[i, j]) + constant_term(tmp3169[i, j]), order)
                            F_JCS_η[i, j] = Taylor1(constant_term(F_CS_η[i, j]) + constant_term(F_CS_η_36[i, j]), order)
                            tmp3172[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                            tmp3173[i, j] = Taylor1(constant_term(F_CS_ζ[i, j]) + constant_term(F_CS_ζ_36[i, j]), order)
                            F_JCS_ζ[i, j] = Taylor1(constant_term(tmp3172[i, j]) + constant_term(tmp3173[i, j]), order)
                        else
                            F_JCS_ξ[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                            F_JCS_η[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_JCS_ζ[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                        end
                        Rb2p[i, j, 1, 1] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(cos_λ[i, j]), order)
                        Rb2p[i, j, 2, 1] = Taylor1(-(constant_term(sin_λ[i, j])), order)
                        tmp3179[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 3, 1] = Taylor1(constant_term(tmp3179[i, j]) * constant_term(cos_λ[i, j]), order)
                        Rb2p[i, j, 1, 2] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(sin_λ[i, j]), order)
                        Rb2p[i, j, 2, 2] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                        tmp3182[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 3, 2] = Taylor1(constant_term(tmp3182[i, j]) * constant_term(sin_λ[i, j]), order)
                        Rb2p[i, j, 1, 3] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 2, 3] = Taylor1(identity(constant_term(zero_q_1)), order)
                        Rb2p[i, j, 3, 3] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                        tmp3184[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp3185[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp3186[i, j, 1, 1] = Taylor1(constant_term(tmp3184[i, j, 1, 1]) + constant_term(tmp3185[i, j, 1, 2]), order)
                        tmp3187[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 1, 1] = Taylor1(constant_term(tmp3186[i, j, 1, 1]) + constant_term(tmp3187[i, j, 1, 3]), order)
                        tmp3189[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp3190[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp3191[i, j, 2, 1] = Taylor1(constant_term(tmp3189[i, j, 2, 1]) + constant_term(tmp3190[i, j, 2, 2]), order)
                        tmp3192[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 2, 1] = Taylor1(constant_term(tmp3191[i, j, 2, 1]) + constant_term(tmp3192[i, j, 2, 3]), order)
                        tmp3194[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp3195[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp3196[i, j, 3, 1] = Taylor1(constant_term(tmp3194[i, j, 3, 1]) + constant_term(tmp3195[i, j, 3, 2]), order)
                        tmp3197[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 3, 1] = Taylor1(constant_term(tmp3196[i, j, 3, 1]) + constant_term(tmp3197[i, j, 3, 3]), order)
                        tmp3199[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp3200[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp3201[i, j, 1, 1] = Taylor1(constant_term(tmp3199[i, j, 1, 1]) + constant_term(tmp3200[i, j, 1, 2]), order)
                        tmp3202[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 1, 2] = Taylor1(constant_term(tmp3201[i, j, 1, 1]) + constant_term(tmp3202[i, j, 1, 3]), order)
                        tmp3204[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp3205[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp3206[i, j, 2, 1] = Taylor1(constant_term(tmp3204[i, j, 2, 1]) + constant_term(tmp3205[i, j, 2, 2]), order)
                        tmp3207[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 2, 2] = Taylor1(constant_term(tmp3206[i, j, 2, 1]) + constant_term(tmp3207[i, j, 2, 3]), order)
                        tmp3209[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp3210[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp3211[i, j, 3, 1] = Taylor1(constant_term(tmp3209[i, j, 3, 1]) + constant_term(tmp3210[i, j, 3, 2]), order)
                        tmp3212[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 3, 2] = Taylor1(constant_term(tmp3211[i, j, 3, 1]) + constant_term(tmp3212[i, j, 3, 3]), order)
                        tmp3214[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp3215[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp3216[i, j, 1, 1] = Taylor1(constant_term(tmp3214[i, j, 1, 1]) + constant_term(tmp3215[i, j, 1, 2]), order)
                        tmp3217[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 1, 3] = Taylor1(constant_term(tmp3216[i, j, 1, 1]) + constant_term(tmp3217[i, j, 1, 3]), order)
                        tmp3219[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp3220[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp3221[i, j, 2, 1] = Taylor1(constant_term(tmp3219[i, j, 2, 1]) + constant_term(tmp3220[i, j, 2, 2]), order)
                        tmp3222[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 2, 3] = Taylor1(constant_term(tmp3221[i, j, 2, 1]) + constant_term(tmp3222[i, j, 2, 3]), order)
                        tmp3224[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp3225[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp3226[i, j, 3, 1] = Taylor1(constant_term(tmp3224[i, j, 3, 1]) + constant_term(tmp3225[i, j, 3, 2]), order)
                        tmp3227[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 3, 3] = Taylor1(constant_term(tmp3226[i, j, 3, 1]) + constant_term(tmp3227[i, j, 3, 3]), order)
                        tmp3229[i, j, 1, 1] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 1]), order)
                        tmp3230[i, j, 2, 1] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 1]), order)
                        tmp3231[i, j, 1, 1] = Taylor1(constant_term(tmp3229[i, j, 1, 1]) + constant_term(tmp3230[i, j, 2, 1]), order)
                        tmp3232[i, j, 3, 1] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 1]), order)
                        F_JCS_x[i, j] = Taylor1(constant_term(tmp3231[i, j, 1, 1]) + constant_term(tmp3232[i, j, 3, 1]), order)
                        tmp3234[i, j, 1, 2] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 2]), order)
                        tmp3235[i, j, 2, 2] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 2]), order)
                        tmp3236[i, j, 1, 2] = Taylor1(constant_term(tmp3234[i, j, 1, 2]) + constant_term(tmp3235[i, j, 2, 2]), order)
                        tmp3237[i, j, 3, 2] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 2]), order)
                        F_JCS_y[i, j] = Taylor1(constant_term(tmp3236[i, j, 1, 2]) + constant_term(tmp3237[i, j, 3, 2]), order)
                        tmp3239[i, j, 1, 3] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 3]), order)
                        tmp3240[i, j, 2, 3] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 3]), order)
                        tmp3241[i, j, 1, 3] = Taylor1(constant_term(tmp3239[i, j, 1, 3]) + constant_term(tmp3240[i, j, 2, 3]), order)
                        tmp3242[i, j, 3, 3] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 3]), order)
                        F_JCS_z[i, j] = Taylor1(constant_term(tmp3241[i, j, 1, 3]) + constant_term(tmp3242[i, j, 3, 3]), order)
                    end
                end
            end
        end
    tmp3244 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    tmp3244 .= Taylor1(zero(_S), order)
    tmp3246 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    tmp3246 .= Taylor1(zero(_S), order)
    tmp3248 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    tmp3248 .= Taylor1(zero(_S), order)
    tmp3250 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    tmp3250 .= Taylor1(zero(_S), order)
    tmp3252 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    tmp3252 .= Taylor1(zero(_S), order)
    tmp3254 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    tmp3254 .= Taylor1(zero(_S), order)
    tmp3256 = Array{Taylor1{_S}}(undef, size(Y))
    tmp3256 .= Taylor1(zero(_S), order)
    tmp3257 = Array{Taylor1{_S}}(undef, size(Z))
    tmp3257 .= Taylor1(zero(_S), order)
    tmp3258 = Array{Taylor1{_S}}(undef, size(tmp3256))
    tmp3258 .= Taylor1(zero(_S), order)
    tmp3260 = Array{Taylor1{_S}}(undef, size(Z))
    tmp3260 .= Taylor1(zero(_S), order)
    tmp3261 = Array{Taylor1{_S}}(undef, size(X))
    tmp3261 .= Taylor1(zero(_S), order)
    tmp3262 = Array{Taylor1{_S}}(undef, size(tmp3260))
    tmp3262 .= Taylor1(zero(_S), order)
    tmp3264 = Array{Taylor1{_S}}(undef, size(X))
    tmp3264 .= Taylor1(zero(_S), order)
    tmp3265 = Array{Taylor1{_S}}(undef, size(Y))
    tmp3265 .= Taylor1(zero(_S), order)
    tmp3266 = Array{Taylor1{_S}}(undef, size(tmp3264))
    tmp3266 .= Taylor1(zero(_S), order)
    for j = 1:N_ext
        for i = 1:N_ext
            if i == j
                continue
            else
                if UJ_interaction[i, j]
                    tmp3244[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_j[i, j] = Taylor1(constant_term(accX[j]) - constant_term(tmp3244[i, j]), order)
                    accX[j] = Taylor1(identity(constant_term(temp_accX_j[i, j])), order)
                    tmp3246[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_j[i, j] = Taylor1(constant_term(accY[j]) - constant_term(tmp3246[i, j]), order)
                    accY[j] = Taylor1(identity(constant_term(temp_accY_j[i, j])), order)
                    tmp3248[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_j[i, j] = Taylor1(constant_term(accZ[j]) - constant_term(tmp3248[i, j]), order)
                    accZ[j] = Taylor1(identity(constant_term(temp_accZ_j[i, j])), order)
                    tmp3250[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_i[i, j] = Taylor1(constant_term(accX[i]) + constant_term(tmp3250[i, j]), order)
                    accX[i] = Taylor1(identity(constant_term(temp_accX_i[i, j])), order)
                    tmp3252[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_i[i, j] = Taylor1(constant_term(accY[i]) + constant_term(tmp3252[i, j]), order)
                    accY[i] = Taylor1(identity(constant_term(temp_accY_i[i, j])), order)
                    tmp3254[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_i[i, j] = Taylor1(constant_term(accZ[i]) + constant_term(tmp3254[i, j]), order)
                    accZ[i] = Taylor1(identity(constant_term(temp_accZ_i[i, j])), order)
                    if j == mo
                        tmp3256[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp3257[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp3258[i, j] = Taylor1(constant_term(tmp3256[i, j]) - constant_term(tmp3257[i, j]), order)
                        N_MfigM_pmA_x[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp3258[i, j]), order)
                        tmp3260[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp3261[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp3262[i, j] = Taylor1(constant_term(tmp3260[i, j]) - constant_term(tmp3261[i, j]), order)
                        N_MfigM_pmA_y[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp3262[i, j]), order)
                        tmp3264[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp3265[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp3266[i, j] = Taylor1(constant_term(tmp3264[i, j]) - constant_term(tmp3265[i, j]), order)
                        N_MfigM_pmA_z[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp3266[i, j]), order)
                        temp_N_M_x[i] = Taylor1(constant_term(N_MfigM[1]) - constant_term(N_MfigM_pmA_x[i]), order)
                        N_MfigM[1] = Taylor1(identity(constant_term(temp_N_M_x[i])), order)
                        temp_N_M_y[i] = Taylor1(constant_term(N_MfigM[2]) - constant_term(N_MfigM_pmA_y[i]), order)
                        N_MfigM[2] = Taylor1(identity(constant_term(temp_N_M_y[i])), order)
                        temp_N_M_z[i] = Taylor1(constant_term(N_MfigM[3]) - constant_term(N_MfigM_pmA_z[i]), order)
                        N_MfigM[3] = Taylor1(identity(constant_term(temp_N_M_z[i])), order)
                    end
                end
            end
        end
    end
    tmp3278 = Array{Taylor1{_S}}(undef, size(vi_dot_vj))
    tmp3278 .= Taylor1(zero(_S), order)
    Xij_t_Ui = Array{Taylor1{_S}}(undef, size(X))
    Xij_t_Ui .= Taylor1(zero(_S), order)
    Yij_t_Vi = Array{Taylor1{_S}}(undef, size(Y))
    Yij_t_Vi .= Taylor1(zero(_S), order)
    Zij_t_Wi = Array{Taylor1{_S}}(undef, size(Z))
    Zij_t_Wi .= Taylor1(zero(_S), order)
    tmp3284 = Array{Taylor1{_S}}(undef, size(Xij_t_Ui))
    tmp3284 .= Taylor1(zero(_S), order)
    Rij_dot_Vi = Array{Taylor1{_S}}(undef, size(tmp3284))
    Rij_dot_Vi .= Taylor1(zero(_S), order)
    tmp3287 = Array{Taylor1{_S}}(undef, size(Rij_dot_Vi))
    tmp3287 .= Taylor1(zero(_S), order)
    pn1t7 = Array{Taylor1{_S}}(undef, size(tmp3287))
    pn1t7 .= Taylor1(zero(_S), order)
    tmp3290 = Array{Taylor1{_S}}(undef, size(pn1t7))
    tmp3290 .= Taylor1(zero(_S), order)
    pn1t2_7 = Array{Taylor1{_S}}(undef, size(ϕs_and_vs))
    pn1t2_7 .= Taylor1(zero(_S), order)
    #= REPL[11]:656 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    _4ϕj[i, j] = Taylor1(constant_term(4) * constant_term(newtonianNb_Potential[j]), order)
                    ϕi_plus_4ϕj[i, j] = Taylor1(constant_term(newtonianNb_Potential[i]) + constant_term(_4ϕj[i, j]), order)
                    _2v2[i, j] = Taylor1(constant_term(2) * constant_term(v2[i]), order)
                    sj2_plus_2si2[i, j] = Taylor1(constant_term(v2[j]) + constant_term(_2v2[i, j]), order)
                    tmp3278[i, j] = Taylor1(constant_term(4) * constant_term(vi_dot_vj[i, j]), order)
                    sj2_plus_2si2_minus_4vivj[i, j] = Taylor1(constant_term(sj2_plus_2si2[i, j]) - constant_term(tmp3278[i, j]), order)
                    ϕs_and_vs[i, j] = Taylor1(constant_term(sj2_plus_2si2_minus_4vivj[i, j]) - constant_term(ϕi_plus_4ϕj[i, j]), order)
                    Xij_t_Ui[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(dq[3i - 2]), order)
                    Yij_t_Vi[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(dq[3i - 1]), order)
                    Zij_t_Wi[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(dq[3i]), order)
                    tmp3284[i, j] = Taylor1(constant_term(Xij_t_Ui[i, j]) + constant_term(Yij_t_Vi[i, j]), order)
                    Rij_dot_Vi[i, j] = Taylor1(constant_term(tmp3284[i, j]) + constant_term(Zij_t_Wi[i, j]), order)
                    tmp3287[i, j] = Taylor1(constant_term(Rij_dot_Vi[i, j]) ^ float(constant_term(2)), order)
                    pn1t7[i, j] = Taylor1(constant_term(tmp3287[i, j]) / constant_term(r_p2[i, j]), order)
                    tmp3290[i, j] = Taylor1(constant_term(1.5) * constant_term(pn1t7[i, j]), order)
                    pn1t2_7[i, j] = Taylor1(constant_term(ϕs_and_vs[i, j]) - constant_term(tmp3290[i, j]), order)
                    pn1t1_7[i, j] = Taylor1(constant_term(c_p2) + constant_term(pn1t2_7[i, j]), order)
                end
            end
            pntempX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            pntempY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            pntempZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        end
    tmp3297 = Array{Taylor1{_S}}(undef, size(pNX_t_X))
    tmp3297 .= Taylor1(zero(_S), order)
    tmp3298 = Array{Taylor1{_S}}(undef, size(tmp3297))
    tmp3298 .= Taylor1(zero(_S), order)
    tmp3299 = Array{Taylor1{_S}}(undef, size(tmp3298))
    tmp3299 .= Taylor1(zero(_S), order)
    tmp3307 = Array{Taylor1{_S}}(undef, size(U_t_pn2))
    tmp3307 .= Taylor1(zero(_S), order)
    termpnx = Array{Taylor1{_S}}(undef, size(X_t_pn1))
    termpnx .= Taylor1(zero(_S), order)
    sumpnx = Array{Taylor1{_S}}(undef, size(termpnx))
    sumpnx .= Taylor1(zero(_S), order)
    tmp3310 = Array{Taylor1{_S}}(undef, size(V_t_pn2))
    tmp3310 .= Taylor1(zero(_S), order)
    termpny = Array{Taylor1{_S}}(undef, size(Y_t_pn1))
    termpny .= Taylor1(zero(_S), order)
    sumpny = Array{Taylor1{_S}}(undef, size(termpny))
    sumpny .= Taylor1(zero(_S), order)
    tmp3313 = Array{Taylor1{_S}}(undef, size(W_t_pn2))
    tmp3313 .= Taylor1(zero(_S), order)
    termpnz = Array{Taylor1{_S}}(undef, size(Z_t_pn1))
    termpnz .= Taylor1(zero(_S), order)
    sumpnz = Array{Taylor1{_S}}(undef, size(termpnz))
    sumpnz .= Taylor1(zero(_S), order)
    #= REPL[11]:695 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    pNX_t_X[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(X[i, j]), order)
                    pNY_t_Y[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(Y[i, j]), order)
                    pNZ_t_Z[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(Z[i, j]), order)
                    tmp3297[i, j] = Taylor1(constant_term(pNX_t_X[i, j]) + constant_term(pNY_t_Y[i, j]), order)
                    tmp3298[i, j] = Taylor1(constant_term(tmp3297[i, j]) + constant_term(pNZ_t_Z[i, j]), order)
                    tmp3299[i, j] = Taylor1(constant_term(0.5) * constant_term(tmp3298[i, j]), order)
                    pn1[i, j] = Taylor1(constant_term(pn1t1_7[i, j]) + constant_term(tmp3299[i, j]), order)
                    X_t_pn1[i, j] = Taylor1(constant_term(newton_acc_X[i, j]) * constant_term(pn1[i, j]), order)
                    Y_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Y[i, j]) * constant_term(pn1[i, j]), order)
                    Z_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Z[i, j]) * constant_term(pn1[i, j]), order)
                    pNX_t_pn3[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(pn3[i, j]), order)
                    pNY_t_pn3[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(pn3[i, j]), order)
                    pNZ_t_pn3[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(pn3[i, j]), order)
                    tmp3307[i, j] = Taylor1(constant_term(U_t_pn2[i, j]) + constant_term(pNX_t_pn3[i, j]), order)
                    termpnx[i, j] = Taylor1(constant_term(X_t_pn1[i, j]) + constant_term(tmp3307[i, j]), order)
                    sumpnx[i, j] = Taylor1(constant_term(pntempX[j]) + constant_term(termpnx[i, j]), order)
                    pntempX[j] = Taylor1(identity(constant_term(sumpnx[i, j])), order)
                    tmp3310[i, j] = Taylor1(constant_term(V_t_pn2[i, j]) + constant_term(pNY_t_pn3[i, j]), order)
                    termpny[i, j] = Taylor1(constant_term(Y_t_pn1[i, j]) + constant_term(tmp3310[i, j]), order)
                    sumpny[i, j] = Taylor1(constant_term(pntempY[j]) + constant_term(termpny[i, j]), order)
                    pntempY[j] = Taylor1(identity(constant_term(sumpny[i, j])), order)
                    tmp3313[i, j] = Taylor1(constant_term(W_t_pn2[i, j]) + constant_term(pNZ_t_pn3[i, j]), order)
                    termpnz[i, j] = Taylor1(constant_term(Z_t_pn1[i, j]) + constant_term(tmp3313[i, j]), order)
                    sumpnz[i, j] = Taylor1(constant_term(pntempZ[j]) + constant_term(termpnz[i, j]), order)
                    pntempZ[j] = Taylor1(identity(constant_term(sumpnz[i, j])), order)
                end
            end
            postNewtonX[j] = Taylor1(constant_term(pntempX[j]) * constant_term(c_m2), order)
            postNewtonY[j] = Taylor1(constant_term(pntempY[j]) * constant_term(c_m2), order)
            postNewtonZ[j] = Taylor1(constant_term(pntempZ[j]) * constant_term(c_m2), order)
        end
    #= REPL[11]:741 =# Threads.@threads for i = 1:N_ext
            dq[3 * (N + i) - 2] = Taylor1(constant_term(postNewtonX[i]) + constant_term(accX[i]), order)
            dq[3 * (N + i) - 1] = Taylor1(constant_term(postNewtonY[i]) + constant_term(accY[i]), order)
            dq[3 * (N + i)] = Taylor1(constant_term(postNewtonZ[i]) + constant_term(accZ[i]), order)
        end
    #= REPL[11]:746 =# Threads.@threads for i = N_ext + 1:N
            dq[3 * (N + i) - 2] = Taylor1(identity(constant_term(postNewtonX[i])), order)
            dq[3 * (N + i) - 1] = Taylor1(identity(constant_term(postNewtonY[i])), order)
            dq[3 * (N + i)] = Taylor1(identity(constant_term(postNewtonZ[i])), order)
        end
    tmp3322 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp3323 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp3324 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp3325 = Taylor1(constant_term(tmp3323) + constant_term(tmp3324), order)
    Iω_x = Taylor1(constant_term(tmp3322) + constant_term(tmp3325), order)
    tmp3327 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp3328 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp3329 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp3330 = Taylor1(constant_term(tmp3328) + constant_term(tmp3329), order)
    Iω_y = Taylor1(constant_term(tmp3327) + constant_term(tmp3330), order)
    tmp3332 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp3333 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp3334 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp3335 = Taylor1(constant_term(tmp3333) + constant_term(tmp3334), order)
    Iω_z = Taylor1(constant_term(tmp3332) + constant_term(tmp3335), order)
    tmp3337 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_z), order)
    tmp3338 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_y), order)
    ωxIω_x = Taylor1(constant_term(tmp3337) - constant_term(tmp3338), order)
    tmp3340 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_x), order)
    tmp3341 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_z), order)
    ωxIω_y = Taylor1(constant_term(tmp3340) - constant_term(tmp3341), order)
    tmp3343 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_y), order)
    tmp3344 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_x), order)
    ωxIω_z = Taylor1(constant_term(tmp3343) - constant_term(tmp3344), order)
    tmp3346 = Taylor1(constant_term(dI_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp3347 = Taylor1(constant_term(dI_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp3348 = Taylor1(constant_term(dI_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp3349 = Taylor1(constant_term(tmp3347) + constant_term(tmp3348), order)
    dIω_x = Taylor1(constant_term(tmp3346) + constant_term(tmp3349), order)
    tmp3351 = Taylor1(constant_term(dI_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp3352 = Taylor1(constant_term(dI_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp3353 = Taylor1(constant_term(dI_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp3354 = Taylor1(constant_term(tmp3352) + constant_term(tmp3353), order)
    dIω_y = Taylor1(constant_term(tmp3351) + constant_term(tmp3354), order)
    tmp3356 = Taylor1(constant_term(dI_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp3357 = Taylor1(constant_term(dI_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp3358 = Taylor1(constant_term(dI_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp3359 = Taylor1(constant_term(tmp3357) + constant_term(tmp3358), order)
    dIω_z = Taylor1(constant_term(tmp3356) + constant_term(tmp3359), order)
    er_EM_I_1 = Taylor1(constant_term(X[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_2 = Taylor1(constant_term(Y[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_3 = Taylor1(constant_term(Z[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    p_E_I_1 = Taylor1(identity(constant_term(RotM[3, 1, ea])), order)
    p_E_I_2 = Taylor1(identity(constant_term(RotM[3, 2, ea])), order)
    p_E_I_3 = Taylor1(identity(constant_term(RotM[3, 3, ea])), order)
    tmp3364 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp3365 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp3366 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp3367 = Taylor1(constant_term(tmp3365) + constant_term(tmp3366), order)
    er_EM_1 = Taylor1(constant_term(tmp3364) + constant_term(tmp3367), order)
    tmp3369 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp3370 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp3371 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp3372 = Taylor1(constant_term(tmp3370) + constant_term(tmp3371), order)
    er_EM_2 = Taylor1(constant_term(tmp3369) + constant_term(tmp3372), order)
    tmp3374 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp3375 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp3376 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp3377 = Taylor1(constant_term(tmp3375) + constant_term(tmp3376), order)
    er_EM_3 = Taylor1(constant_term(tmp3374) + constant_term(tmp3377), order)
    tmp3379 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(p_E_I_1), order)
    tmp3380 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(p_E_I_2), order)
    tmp3381 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(p_E_I_3), order)
    tmp3382 = Taylor1(constant_term(tmp3380) + constant_term(tmp3381), order)
    p_E_1 = Taylor1(constant_term(tmp3379) + constant_term(tmp3382), order)
    tmp3384 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(p_E_I_1), order)
    tmp3385 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(p_E_I_2), order)
    tmp3386 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(p_E_I_3), order)
    tmp3387 = Taylor1(constant_term(tmp3385) + constant_term(tmp3386), order)
    p_E_2 = Taylor1(constant_term(tmp3384) + constant_term(tmp3387), order)
    tmp3389 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(p_E_I_1), order)
    tmp3390 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(p_E_I_2), order)
    tmp3391 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(p_E_I_3), order)
    tmp3392 = Taylor1(constant_term(tmp3390) + constant_term(tmp3391), order)
    p_E_3 = Taylor1(constant_term(tmp3389) + constant_term(tmp3392), order)
    tmp3394 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(er_EM_1), order)
    tmp3395 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(er_EM_2), order)
    tmp3396 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(er_EM_3), order)
    tmp3397 = Taylor1(constant_term(tmp3395) + constant_term(tmp3396), order)
    I_er_EM_1 = Taylor1(constant_term(tmp3394) + constant_term(tmp3397), order)
    tmp3399 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(er_EM_1), order)
    tmp3400 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(er_EM_2), order)
    tmp3401 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(er_EM_3), order)
    tmp3402 = Taylor1(constant_term(tmp3400) + constant_term(tmp3401), order)
    I_er_EM_2 = Taylor1(constant_term(tmp3399) + constant_term(tmp3402), order)
    tmp3404 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(er_EM_1), order)
    tmp3405 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(er_EM_2), order)
    tmp3406 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(er_EM_3), order)
    tmp3407 = Taylor1(constant_term(tmp3405) + constant_term(tmp3406), order)
    I_er_EM_3 = Taylor1(constant_term(tmp3404) + constant_term(tmp3407), order)
    tmp3409 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(p_E_1), order)
    tmp3410 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(p_E_2), order)
    tmp3411 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(p_E_3), order)
    tmp3412 = Taylor1(constant_term(tmp3410) + constant_term(tmp3411), order)
    I_p_E_1 = Taylor1(constant_term(tmp3409) + constant_term(tmp3412), order)
    tmp3414 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(p_E_1), order)
    tmp3415 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(p_E_2), order)
    tmp3416 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(p_E_3), order)
    tmp3417 = Taylor1(constant_term(tmp3415) + constant_term(tmp3416), order)
    I_p_E_2 = Taylor1(constant_term(tmp3414) + constant_term(tmp3417), order)
    tmp3419 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(p_E_1), order)
    tmp3420 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(p_E_2), order)
    tmp3421 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(p_E_3), order)
    tmp3422 = Taylor1(constant_term(tmp3420) + constant_term(tmp3421), order)
    I_p_E_3 = Taylor1(constant_term(tmp3419) + constant_term(tmp3422), order)
    tmp3424 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_3), order)
    tmp3425 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_2), order)
    er_EM_cross_I_er_EM_1 = Taylor1(constant_term(tmp3424) - constant_term(tmp3425), order)
    tmp3427 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_1), order)
    tmp3428 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_3), order)
    er_EM_cross_I_er_EM_2 = Taylor1(constant_term(tmp3427) - constant_term(tmp3428), order)
    tmp3430 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_2), order)
    tmp3431 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_1), order)
    er_EM_cross_I_er_EM_3 = Taylor1(constant_term(tmp3430) - constant_term(tmp3431), order)
    tmp3433 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_3), order)
    tmp3434 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_2), order)
    er_EM_cross_I_p_E_1 = Taylor1(constant_term(tmp3433) - constant_term(tmp3434), order)
    tmp3436 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_1), order)
    tmp3437 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_3), order)
    er_EM_cross_I_p_E_2 = Taylor1(constant_term(tmp3436) - constant_term(tmp3437), order)
    tmp3439 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_2), order)
    tmp3440 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_1), order)
    er_EM_cross_I_p_E_3 = Taylor1(constant_term(tmp3439) - constant_term(tmp3440), order)
    tmp3442 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_3), order)
    tmp3443 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_2), order)
    p_E_cross_I_er_EM_1 = Taylor1(constant_term(tmp3442) - constant_term(tmp3443), order)
    tmp3445 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_1), order)
    tmp3446 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_3), order)
    p_E_cross_I_er_EM_2 = Taylor1(constant_term(tmp3445) - constant_term(tmp3446), order)
    tmp3448 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_2), order)
    tmp3449 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_1), order)
    p_E_cross_I_er_EM_3 = Taylor1(constant_term(tmp3448) - constant_term(tmp3449), order)
    tmp3451 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_3), order)
    tmp3452 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_2), order)
    p_E_cross_I_p_E_1 = Taylor1(constant_term(tmp3451) - constant_term(tmp3452), order)
    tmp3454 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_1), order)
    tmp3455 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_3), order)
    p_E_cross_I_p_E_2 = Taylor1(constant_term(tmp3454) - constant_term(tmp3455), order)
    tmp3457 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_2), order)
    tmp3458 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_1), order)
    p_E_cross_I_p_E_3 = Taylor1(constant_term(tmp3457) - constant_term(tmp3458), order)
    tmp3462 = Taylor1(constant_term(sin_ϕ[ea, mo]) ^ float(constant_term(2)), order)
    tmp3463 = Taylor1(constant_term(7) * constant_term(tmp3462), order)
    one_minus_7sin2ϕEM = Taylor1(constant_term(one_t) - constant_term(tmp3463), order)
    two_sinϕEM = Taylor1(constant_term(2) * constant_term(sin_ϕ[ea, mo]), order)
    tmp3468 = Taylor1(constant_term(r_p1d2[mo, ea]) ^ float(constant_term(5)), order)
    N_MfigM_figE_factor_div_rEMp5 = Taylor1(constant_term(N_MfigM_figE_factor) / constant_term(tmp3468), order)
    tmp3470 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_1), order)
    tmp3471 = Taylor1(constant_term(er_EM_cross_I_p_E_1) + constant_term(p_E_cross_I_er_EM_1), order)
    tmp3472 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp3471), order)
    tmp3473 = Taylor1(constant_term(tmp3470) + constant_term(tmp3472), order)
    tmp3475 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_1), order)
    tmp3476 = Taylor1(constant_term(tmp3473) - constant_term(tmp3475), order)
    N_MfigM_figE_1 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp3476), order)
    tmp3478 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_2), order)
    tmp3479 = Taylor1(constant_term(er_EM_cross_I_p_E_2) + constant_term(p_E_cross_I_er_EM_2), order)
    tmp3480 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp3479), order)
    tmp3481 = Taylor1(constant_term(tmp3478) + constant_term(tmp3480), order)
    tmp3483 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_2), order)
    tmp3484 = Taylor1(constant_term(tmp3481) - constant_term(tmp3483), order)
    N_MfigM_figE_2 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp3484), order)
    tmp3486 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_3), order)
    tmp3487 = Taylor1(constant_term(er_EM_cross_I_p_E_3) + constant_term(p_E_cross_I_er_EM_3), order)
    tmp3488 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp3487), order)
    tmp3489 = Taylor1(constant_term(tmp3486) + constant_term(tmp3488), order)
    tmp3491 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_3), order)
    tmp3492 = Taylor1(constant_term(tmp3489) - constant_term(tmp3491), order)
    N_MfigM_figE_3 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp3492), order)
    tmp3494 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp3495 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp3496 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp3497 = Taylor1(constant_term(tmp3495) + constant_term(tmp3496), order)
    N_1_LMF = Taylor1(constant_term(tmp3494) + constant_term(tmp3497), order)
    tmp3499 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp3500 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp3501 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp3502 = Taylor1(constant_term(tmp3500) + constant_term(tmp3501), order)
    N_2_LMF = Taylor1(constant_term(tmp3499) + constant_term(tmp3502), order)
    tmp3504 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp3505 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp3506 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp3507 = Taylor1(constant_term(tmp3505) + constant_term(tmp3506), order)
    N_3_LMF = Taylor1(constant_term(tmp3504) + constant_term(tmp3507), order)
    tmp3509 = Taylor1(constant_term(q[6N + 10]) - constant_term(q[6N + 4]), order)
    tmp3510 = Taylor1(constant_term(k_ν) * constant_term(tmp3509), order)
    tmp3511 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp3512 = Taylor1(constant_term(tmp3511) * constant_term(q[6N + 11]), order)
    N_cmb_1 = Taylor1(constant_term(tmp3510) - constant_term(tmp3512), order)
    tmp3514 = Taylor1(constant_term(q[6N + 11]) - constant_term(q[6N + 5]), order)
    tmp3515 = Taylor1(constant_term(k_ν) * constant_term(tmp3514), order)
    tmp3516 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp3517 = Taylor1(constant_term(tmp3516) * constant_term(q[6N + 10]), order)
    N_cmb_2 = Taylor1(constant_term(tmp3515) + constant_term(tmp3517), order)
    tmp3519 = Taylor1(constant_term(q[6N + 12]) - constant_term(q[6N + 6]), order)
    N_cmb_3 = Taylor1(constant_term(k_ν) * constant_term(tmp3519), order)
    tmp3521 = Taylor1(constant_term(μ[mo]) * constant_term(N_1_LMF), order)
    tmp3522 = Taylor1(constant_term(N_MfigM_figE_1) + constant_term(tmp3521), order)
    tmp3523 = Taylor1(constant_term(tmp3522) + constant_term(N_cmb_1), order)
    tmp3524 = Taylor1(constant_term(dIω_x) + constant_term(ωxIω_x), order)
    I_dω_1 = Taylor1(constant_term(tmp3523) - constant_term(tmp3524), order)
    tmp3526 = Taylor1(constant_term(μ[mo]) * constant_term(N_2_LMF), order)
    tmp3527 = Taylor1(constant_term(N_MfigM_figE_2) + constant_term(tmp3526), order)
    tmp3528 = Taylor1(constant_term(tmp3527) + constant_term(N_cmb_2), order)
    tmp3529 = Taylor1(constant_term(dIω_y) + constant_term(ωxIω_y), order)
    I_dω_2 = Taylor1(constant_term(tmp3528) - constant_term(tmp3529), order)
    tmp3531 = Taylor1(constant_term(μ[mo]) * constant_term(N_3_LMF), order)
    tmp3532 = Taylor1(constant_term(N_MfigM_figE_3) + constant_term(tmp3531), order)
    tmp3533 = Taylor1(constant_term(tmp3532) + constant_term(N_cmb_3), order)
    tmp3534 = Taylor1(constant_term(dIω_z) + constant_term(ωxIω_z), order)
    I_dω_3 = Taylor1(constant_term(tmp3533) - constant_term(tmp3534), order)
    Ic_ωc_1 = Taylor1(constant_term(I_c_t[1, 1]) * constant_term(q[6N + 10]), order)
    Ic_ωc_2 = Taylor1(constant_term(I_c_t[2, 2]) * constant_term(q[6N + 11]), order)
    Ic_ωc_3 = Taylor1(constant_term(I_c_t[3, 3]) * constant_term(q[6N + 12]), order)
    tmp3539 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_2), order)
    tmp3540 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_3), order)
    m_ωm_x_Icωc_1 = Taylor1(constant_term(tmp3539) - constant_term(tmp3540), order)
    tmp3542 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_3), order)
    tmp3543 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_1), order)
    m_ωm_x_Icωc_2 = Taylor1(constant_term(tmp3542) - constant_term(tmp3543), order)
    tmp3545 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_1), order)
    tmp3546 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_2), order)
    m_ωm_x_Icωc_3 = Taylor1(constant_term(tmp3545) - constant_term(tmp3546), order)
    Ic_dωc_1 = Taylor1(constant_term(m_ωm_x_Icωc_1) - constant_term(N_cmb_1), order)
    Ic_dωc_2 = Taylor1(constant_term(m_ωm_x_Icωc_2) - constant_term(N_cmb_2), order)
    Ic_dωc_3 = Taylor1(constant_term(m_ωm_x_Icωc_3) - constant_term(N_cmb_3), order)
    tmp3551 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp3631 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp3552 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp3551), order)
    tmp3553 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp3632 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp3554 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp3553), order)
    tmp3555 = Taylor1(constant_term(tmp3552) + constant_term(tmp3554), order)
    tmp3556 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp3633 = Taylor1(cos(constant_term(q[6N + 2])), order)
    dq[6N + 1] = Taylor1(constant_term(tmp3555) / constant_term(tmp3556), order)
    tmp3558 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp3634 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp3559 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp3558), order)
    tmp3560 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp3635 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp3561 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp3560), order)
    dq[6N + 2] = Taylor1(constant_term(tmp3559) - constant_term(tmp3561), order)
    tmp3563 = Taylor1(cos(constant_term(q[6N + 2])), order)
    tmp3636 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp3564 = Taylor1(constant_term(dq[6N + 1]) * constant_term(tmp3563), order)
    dq[6N + 3] = Taylor1(constant_term(q[6N + 6]) - constant_term(tmp3564), order)
    tmp3566 = Taylor1(constant_term(inv_I_m_t[1, 1]) * constant_term(I_dω_1), order)
    tmp3567 = Taylor1(constant_term(inv_I_m_t[1, 2]) * constant_term(I_dω_2), order)
    tmp3568 = Taylor1(constant_term(inv_I_m_t[1, 3]) * constant_term(I_dω_3), order)
    tmp3569 = Taylor1(constant_term(tmp3567) + constant_term(tmp3568), order)
    dq[6N + 4] = Taylor1(constant_term(tmp3566) + constant_term(tmp3569), order)
    tmp3571 = Taylor1(constant_term(inv_I_m_t[2, 1]) * constant_term(I_dω_1), order)
    tmp3572 = Taylor1(constant_term(inv_I_m_t[2, 2]) * constant_term(I_dω_2), order)
    tmp3573 = Taylor1(constant_term(inv_I_m_t[2, 3]) * constant_term(I_dω_3), order)
    tmp3574 = Taylor1(constant_term(tmp3572) + constant_term(tmp3573), order)
    dq[6N + 5] = Taylor1(constant_term(tmp3571) + constant_term(tmp3574), order)
    tmp3576 = Taylor1(constant_term(inv_I_m_t[3, 1]) * constant_term(I_dω_1), order)
    tmp3577 = Taylor1(constant_term(inv_I_m_t[3, 2]) * constant_term(I_dω_2), order)
    tmp3578 = Taylor1(constant_term(inv_I_m_t[3, 3]) * constant_term(I_dω_3), order)
    tmp3579 = Taylor1(constant_term(tmp3577) + constant_term(tmp3578), order)
    dq[6N + 6] = Taylor1(constant_term(tmp3576) + constant_term(tmp3579), order)
    tmp3581 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp3637 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp3582 = Taylor1(constant_term(ω_c_CE_2) / constant_term(tmp3581), order)
    dq[6N + 9] = Taylor1(-(constant_term(tmp3582)), order)
    tmp3584 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp3638 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp3585 = Taylor1(constant_term(dq[6N + 9]) * constant_term(tmp3584), order)
    dq[6N + 7] = Taylor1(constant_term(ω_c_CE_3) - constant_term(tmp3585), order)
    dq[6N + 8] = Taylor1(identity(constant_term(ω_c_CE_1)), order)
    dq[6N + 10] = Taylor1(constant_term(inv_I_c_t[1, 1]) * constant_term(Ic_dωc_1), order)
    dq[6N + 11] = Taylor1(constant_term(inv_I_c_t[2, 2]) * constant_term(Ic_dωc_2), order)
    dq[6N + 12] = Taylor1(constant_term(inv_I_c_t[3, 3]) * constant_term(Ic_dωc_3), order)
    dq[6N + 13] = Taylor1(identity(constant_term(zero_q_1)), order)
    for __idx = eachindex(q)
        (q[__idx]).coeffs[2] = (dq[__idx]).coeffs[1]
    end
    for ord = 1:order - 1
        ordnext = ord + 1
        TaylorSeries.identity!(N_MfigM[1], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[2], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[3], zero_q_1, ord)
        TaylorSeries.identity!(ϕ_m, q[6N + 1], ord)
        TaylorSeries.identity!(θ_m, q[6N + 2], ord)
        TaylorSeries.identity!(ψ_m, q[6N + 3], ord)
        TaylorSeries.sincos!(tmp3590, tmp2856, ϕ_m, ord)
        TaylorSeries.sincos!(tmp3591, tmp2857, ψ_m, ord)
        TaylorSeries.mul!(tmp2858, tmp2856, tmp2857, ord)
        TaylorSeries.sincos!(tmp3592, tmp2859, θ_m, ord)
        TaylorSeries.sincos!(tmp2860, tmp3593, ϕ_m, ord)
        TaylorSeries.mul!(tmp2861, tmp2859, tmp2860, ord)
        TaylorSeries.sincos!(tmp2862, tmp3594, ψ_m, ord)
        TaylorSeries.mul!(tmp2863, tmp2861, tmp2862, ord)
        TaylorSeries.subst!(RotM[1, 1, mo], tmp2858, tmp2863, ord)
        TaylorSeries.sincos!(tmp3595, tmp2865, θ_m, ord)
        TaylorSeries.subst!(tmp2866, tmp2865, ord)
        TaylorSeries.sincos!(tmp3596, tmp2867, ψ_m, ord)
        TaylorSeries.mul!(tmp2868, tmp2866, tmp2867, ord)
        TaylorSeries.sincos!(tmp2869, tmp3597, ϕ_m, ord)
        TaylorSeries.mul!(tmp2870, tmp2868, tmp2869, ord)
        TaylorSeries.sincos!(tmp3598, tmp2871, ϕ_m, ord)
        TaylorSeries.sincos!(tmp2872, tmp3599, ψ_m, ord)
        TaylorSeries.mul!(tmp2873, tmp2871, tmp2872, ord)
        TaylorSeries.subst!(RotM[2, 1, mo], tmp2870, tmp2873, ord)
        TaylorSeries.sincos!(tmp2875, tmp3600, θ_m, ord)
        TaylorSeries.sincos!(tmp2876, tmp3601, ϕ_m, ord)
        TaylorSeries.mul!(RotM[3, 1, mo], tmp2875, tmp2876, ord)
        TaylorSeries.sincos!(tmp3602, tmp2878, ψ_m, ord)
        TaylorSeries.sincos!(tmp2879, tmp3603, ϕ_m, ord)
        TaylorSeries.mul!(tmp2880, tmp2878, tmp2879, ord)
        TaylorSeries.sincos!(tmp3604, tmp2881, θ_m, ord)
        TaylorSeries.sincos!(tmp3605, tmp2882, ϕ_m, ord)
        TaylorSeries.mul!(tmp2883, tmp2881, tmp2882, ord)
        TaylorSeries.sincos!(tmp2884, tmp3606, ψ_m, ord)
        TaylorSeries.mul!(tmp2885, tmp2883, tmp2884, ord)
        TaylorSeries.add!(RotM[1, 2, mo], tmp2880, tmp2885, ord)
        TaylorSeries.sincos!(tmp3607, tmp2887, θ_m, ord)
        TaylorSeries.sincos!(tmp3608, tmp2888, ϕ_m, ord)
        TaylorSeries.mul!(tmp2889, tmp2887, tmp2888, ord)
        TaylorSeries.sincos!(tmp3609, tmp2890, ψ_m, ord)
        TaylorSeries.mul!(tmp2891, tmp2889, tmp2890, ord)
        TaylorSeries.sincos!(tmp2892, tmp3610, ϕ_m, ord)
        TaylorSeries.sincos!(tmp2893, tmp3611, ψ_m, ord)
        TaylorSeries.mul!(tmp2894, tmp2892, tmp2893, ord)
        TaylorSeries.subst!(RotM[2, 2, mo], tmp2891, tmp2894, ord)
        TaylorSeries.sincos!(tmp3612, tmp2896, ϕ_m, ord)
        TaylorSeries.subst!(tmp2897, tmp2896, ord)
        TaylorSeries.sincos!(tmp2898, tmp3613, θ_m, ord)
        TaylorSeries.mul!(RotM[3, 2, mo], tmp2897, tmp2898, ord)
        TaylorSeries.sincos!(tmp2900, tmp3614, θ_m, ord)
        TaylorSeries.sincos!(tmp2901, tmp3615, ψ_m, ord)
        TaylorSeries.mul!(RotM[1, 3, mo], tmp2900, tmp2901, ord)
        TaylorSeries.sincos!(tmp3616, tmp2903, ψ_m, ord)
        TaylorSeries.sincos!(tmp2904, tmp3617, θ_m, ord)
        TaylorSeries.mul!(RotM[2, 3, mo], tmp2903, tmp2904, ord)
        TaylorSeries.sincos!(tmp3618, RotM[3, 3, mo], θ_m, ord)
        TaylorSeries.identity!(ϕ_c, q[6N + 7], ord)
        TaylorSeries.sincos!(tmp3619, tmp2907, ϕ_c, ord)
        TaylorSeries.mul!(tmp2908, RotM[1, 1, mo], tmp2907, ord)
        TaylorSeries.sincos!(tmp2909, tmp3620, ϕ_c, ord)
        TaylorSeries.mul!(tmp2910, RotM[1, 2, mo], tmp2909, ord)
        TaylorSeries.add!(mantlef2coref[1, 1], tmp2908, tmp2910, ord)
        TaylorSeries.subst!(tmp2912, RotM[1, 1, mo], ord)
        TaylorSeries.sincos!(tmp2913, tmp3621, ϕ_c, ord)
        TaylorSeries.mul!(tmp2914, tmp2912, tmp2913, ord)
        TaylorSeries.sincos!(tmp3622, tmp2915, ϕ_c, ord)
        TaylorSeries.mul!(tmp2916, RotM[1, 2, mo], tmp2915, ord)
        TaylorSeries.add!(mantlef2coref[2, 1], tmp2914, tmp2916, ord)
        TaylorSeries.identity!(mantlef2coref[3, 1], RotM[1, 3, mo], ord)
        TaylorSeries.sincos!(tmp3623, tmp2918, ϕ_c, ord)
        TaylorSeries.mul!(tmp2919, RotM[2, 1, mo], tmp2918, ord)
        TaylorSeries.sincos!(tmp2920, tmp3624, ϕ_c, ord)
        TaylorSeries.mul!(tmp2921, RotM[2, 2, mo], tmp2920, ord)
        TaylorSeries.add!(mantlef2coref[1, 2], tmp2919, tmp2921, ord)
        TaylorSeries.subst!(tmp2923, RotM[2, 1, mo], ord)
        TaylorSeries.sincos!(tmp2924, tmp3625, ϕ_c, ord)
        TaylorSeries.mul!(tmp2925, tmp2923, tmp2924, ord)
        TaylorSeries.sincos!(tmp3626, tmp2926, ϕ_c, ord)
        TaylorSeries.mul!(tmp2927, RotM[2, 2, mo], tmp2926, ord)
        TaylorSeries.add!(mantlef2coref[2, 2], tmp2925, tmp2927, ord)
        TaylorSeries.identity!(mantlef2coref[3, 2], RotM[2, 3, mo], ord)
        TaylorSeries.sincos!(tmp3627, tmp2929, ϕ_c, ord)
        TaylorSeries.mul!(tmp2930, RotM[3, 1, mo], tmp2929, ord)
        TaylorSeries.sincos!(tmp2931, tmp3628, ϕ_c, ord)
        TaylorSeries.mul!(tmp2932, RotM[3, 2, mo], tmp2931, ord)
        TaylorSeries.add!(mantlef2coref[1, 3], tmp2930, tmp2932, ord)
        TaylorSeries.subst!(tmp2934, RotM[3, 1, mo], ord)
        TaylorSeries.sincos!(tmp2935, tmp3629, ϕ_c, ord)
        TaylorSeries.mul!(tmp2936, tmp2934, tmp2935, ord)
        TaylorSeries.sincos!(tmp3630, tmp2937, ϕ_c, ord)
        TaylorSeries.mul!(tmp2938, RotM[3, 2, mo], tmp2937, ord)
        TaylorSeries.add!(mantlef2coref[2, 3], tmp2936, tmp2938, ord)
        TaylorSeries.identity!(mantlef2coref[3, 3], RotM[3, 3, mo], ord)
        TaylorSeries.mul!(tmp2940, mantlef2coref[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp2941, mantlef2coref[1, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp2942, mantlef2coref[1, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp2943, tmp2941, tmp2942, ord)
        TaylorSeries.add!(ω_c_CE_1, tmp2940, tmp2943, ord)
        TaylorSeries.mul!(tmp2945, mantlef2coref[2, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp2946, mantlef2coref[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp2947, mantlef2coref[2, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp2948, tmp2946, tmp2947, ord)
        TaylorSeries.add!(ω_c_CE_2, tmp2945, tmp2948, ord)
        TaylorSeries.mul!(tmp2950, mantlef2coref[3, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp2951, mantlef2coref[3, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp2952, mantlef2coref[3, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp2953, tmp2951, tmp2952, ord)
        TaylorSeries.add!(ω_c_CE_3, tmp2950, tmp2953, ord)
        TaylorSeries.identity!(J2_t[su], J2S_t, ord)
        TaylorSeries.identity!(J2_t[ea], J2E_t, ord)
        #= REPL[11]:307 =# Threads.@threads for j = 1:N
                TaylorSeries.identity!(newtonX[j], zero_q_1, ord)
                TaylorSeries.identity!(newtonY[j], zero_q_1, ord)
                TaylorSeries.identity!(newtonZ[j], zero_q_1, ord)
                TaylorSeries.identity!(newtonianNb_Potential[j], zero_q_1, ord)
                TaylorSeries.identity!(dq[3j - 2], q[3 * (N + j) - 2], ord)
                TaylorSeries.identity!(dq[3j - 1], q[3 * (N + j) - 1], ord)
                TaylorSeries.identity!(dq[3j], q[3 * (N + j)], ord)
            end
        #= REPL[11]:319 =# Threads.@threads for j = 1:N_ext
                TaylorSeries.identity!(accX[j], zero_q_1, ord)
                TaylorSeries.identity!(accY[j], zero_q_1, ord)
                TaylorSeries.identity!(accZ[j], zero_q_1, ord)
            end
        #= REPL[11]:325 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.subst!(X[i, j], q[3i - 2], q[3j - 2], ord)
                        TaylorSeries.subst!(Y[i, j], q[3i - 1], q[3j - 1], ord)
                        TaylorSeries.subst!(Z[i, j], q[3i], q[3j], ord)
                        TaylorSeries.subst!(U[i, j], dq[3i - 2], dq[3j - 2], ord)
                        TaylorSeries.subst!(V[i, j], dq[3i - 1], dq[3j - 1], ord)
                        TaylorSeries.subst!(W[i, j], dq[3i], dq[3j], ord)
                        TaylorSeries.mul!(tmp2962[3j - 2], 4, dq[3j - 2], ord)
                        TaylorSeries.mul!(tmp2964[3i - 2], 3, dq[3i - 2], ord)
                        TaylorSeries.subst!(_4U_m_3X[i, j], tmp2962[3j - 2], tmp2964[3i - 2], ord)
                        TaylorSeries.mul!(tmp2967[3j - 1], 4, dq[3j - 1], ord)
                        TaylorSeries.mul!(tmp2969[3i - 1], 3, dq[3i - 1], ord)
                        TaylorSeries.subst!(_4V_m_3Y[i, j], tmp2967[3j - 1], tmp2969[3i - 1], ord)
                        TaylorSeries.mul!(tmp2972[3j], 4, dq[3j], ord)
                        TaylorSeries.mul!(tmp2974[3i], 3, dq[3i], ord)
                        TaylorSeries.subst!(_4W_m_3Z[i, j], tmp2972[3j], tmp2974[3i], ord)
                        TaylorSeries.mul!(pn2x[i, j], X[i, j], _4U_m_3X[i, j], ord)
                        TaylorSeries.mul!(pn2y[i, j], Y[i, j], _4V_m_3Y[i, j], ord)
                        TaylorSeries.mul!(pn2z[i, j], Z[i, j], _4W_m_3Z[i, j], ord)
                        TaylorSeries.mul!(UU[i, j], dq[3i - 2], dq[3j - 2], ord)
                        TaylorSeries.mul!(VV[i, j], dq[3i - 1], dq[3j - 1], ord)
                        TaylorSeries.mul!(WW[i, j], dq[3i], dq[3j], ord)
                        TaylorSeries.add!(tmp2982[i, j], UU[i, j], VV[i, j], ord)
                        TaylorSeries.add!(vi_dot_vj[i, j], tmp2982[i, j], WW[i, j], ord)
                        TaylorSeries.pow!(tmp2985[i, j], X[i, j], 2, ord)
                        TaylorSeries.pow!(tmp2987[i, j], Y[i, j], 2, ord)
                        TaylorSeries.add!(tmp2988[i, j], tmp2985[i, j], tmp2987[i, j], ord)
                        TaylorSeries.pow!(tmp2990[i, j], Z[i, j], 2, ord)
                        TaylorSeries.add!(r_p2[i, j], tmp2988[i, j], tmp2990[i, j], ord)
                        TaylorSeries.sqrt!(r_p1d2[i, j], r_p2[i, j], ord)
                        TaylorSeries.pow!(r_p3d2[i, j], r_p2[i, j], 1.5, ord)
                        TaylorSeries.pow!(r_p7d2[i, j], r_p2[i, j], 3.5, ord)
                        TaylorSeries.div!(newtonianCoeff[i, j], μ[i], r_p3d2[i, j], ord)
                        TaylorSeries.add!(tmp2998[i, j], pn2x[i, j], pn2y[i, j], ord)
                        TaylorSeries.add!(tmp2999[i, j], tmp2998[i, j], pn2z[i, j], ord)
                        TaylorSeries.mul!(pn2[i, j], newtonianCoeff[i, j], tmp2999[i, j], ord)
                        TaylorSeries.mul!(newton_acc_X[i, j], X[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.mul!(newton_acc_Y[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.mul!(newton_acc_Z[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.div!(newtonian1b_Potential[i, j], μ[i], r_p1d2[i, j], ord)
                        TaylorSeries.mul!(pn3[i, j], 3.5, newtonian1b_Potential[i, j], ord)
                        TaylorSeries.mul!(U_t_pn2[i, j], pn2[i, j], U[i, j], ord)
                        TaylorSeries.mul!(V_t_pn2[i, j], pn2[i, j], V[i, j], ord)
                        TaylorSeries.mul!(W_t_pn2[i, j], pn2[i, j], W[i, j], ord)
                        TaylorSeries.mul!(tmp3010[i, j], X[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_001[i, j], newtonX[j], tmp3010[i, j], ord)
                        TaylorSeries.identity!(newtonX[j], temp_001[i, j], ord)
                        TaylorSeries.mul!(tmp3012[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_002[i, j], newtonY[j], tmp3012[i, j], ord)
                        TaylorSeries.identity!(newtonY[j], temp_002[i, j], ord)
                        TaylorSeries.mul!(tmp3014[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_003[i, j], newtonZ[j], tmp3014[i, j], ord)
                        TaylorSeries.identity!(newtonZ[j], temp_003[i, j], ord)
                        TaylorSeries.add!(temp_004[i, j], newtonianNb_Potential[j], newtonian1b_Potential[i, j], ord)
                        TaylorSeries.identity!(newtonianNb_Potential[j], temp_004[i, j], ord)
                    end
                end
                TaylorSeries.pow!(tmp3018[3j - 2], dq[3j - 2], 2, ord)
                TaylorSeries.pow!(tmp3020[3j - 1], dq[3j - 1], 2, ord)
                TaylorSeries.add!(tmp3021[3j - 2], tmp3018[3j - 2], tmp3020[3j - 1], ord)
                TaylorSeries.pow!(tmp3023[3j], dq[3j], 2, ord)
                TaylorSeries.add!(v2[j], tmp3021[3j - 2], tmp3023[3j], ord)
            end
        TaylorSeries.add!(tmp3025, I_M_t[1, 1], I_M_t[2, 2], ord)
        TaylorSeries.div!(tmp3027, tmp3025, 2, ord)
        TaylorSeries.subst!(tmp3028, I_M_t[3, 3], tmp3027, ord)
        TaylorSeries.div!(J2M_t, tmp3028, μ[mo], ord)
        TaylorSeries.subst!(tmp3030, I_M_t[2, 2], I_M_t[1, 1], ord)
        TaylorSeries.div!(tmp3031, tmp3030, μ[mo], ord)
        TaylorSeries.div!(C22M_t, tmp3031, 4, ord)
        TaylorSeries.subst!(tmp3034, I_M_t[1, 3], ord)
        TaylorSeries.div!(C21M_t, tmp3034, μ[mo], ord)
        TaylorSeries.subst!(tmp3036, I_M_t[3, 2], ord)
        TaylorSeries.div!(S21M_t, tmp3036, μ[mo], ord)
        TaylorSeries.subst!(tmp3038, I_M_t[2, 1], ord)
        TaylorSeries.div!(tmp3039, tmp3038, μ[mo], ord)
        TaylorSeries.div!(S22M_t, tmp3039, 2, ord)
        TaylorSeries.identity!(J2_t[mo], J2M_t, ord)
        #= REPL[11]:416 =# Threads.@threads for j = 1:N_ext
                for i = 1:N_ext
                    if i == j
                        continue
                    else
                        if UJ_interaction[i, j]
                            TaylorSeries.mul!(X_bf_1[i, j], X[i, j], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(X_bf_2[i, j], Y[i, j], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(X_bf_3[i, j], Z[i, j], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(Y_bf_1[i, j], X[i, j], RotM[2, 1, j], ord)
                            TaylorSeries.mul!(Y_bf_2[i, j], Y[i, j], RotM[2, 2, j], ord)
                            TaylorSeries.mul!(Y_bf_3[i, j], Z[i, j], RotM[2, 3, j], ord)
                            TaylorSeries.mul!(Z_bf_1[i, j], X[i, j], RotM[3, 1, j], ord)
                            TaylorSeries.mul!(Z_bf_2[i, j], Y[i, j], RotM[3, 2, j], ord)
                            TaylorSeries.mul!(Z_bf_3[i, j], Z[i, j], RotM[3, 3, j], ord)
                            TaylorSeries.add!(tmp3051[i, j], X_bf_1[i, j], X_bf_2[i, j], ord)
                            TaylorSeries.add!(X_bf[i, j], tmp3051[i, j], X_bf_3[i, j], ord)
                            TaylorSeries.add!(tmp3053[i, j], Y_bf_1[i, j], Y_bf_2[i, j], ord)
                            TaylorSeries.add!(Y_bf[i, j], tmp3053[i, j], Y_bf_3[i, j], ord)
                            TaylorSeries.add!(tmp3055[i, j], Z_bf_1[i, j], Z_bf_2[i, j], ord)
                            TaylorSeries.add!(Z_bf[i, j], tmp3055[i, j], Z_bf_3[i, j], ord)
                            TaylorSeries.div!(sin_ϕ[i, j], Z_bf[i, j], r_p1d2[i, j], ord)
                            TaylorSeries.pow!(tmp3059[i, j], X_bf[i, j], 2, ord)
                            TaylorSeries.pow!(tmp3061[i, j], Y_bf[i, j], 2, ord)
                            TaylorSeries.add!(tmp3062[i, j], tmp3059[i, j], tmp3061[i, j], ord)
                            TaylorSeries.sqrt!(r_xy[i, j], tmp3062[i, j], ord)
                            TaylorSeries.div!(cos_ϕ[i, j], r_xy[i, j], r_p1d2[i, j], ord)
                            TaylorSeries.div!(sin_λ[i, j], Y_bf[i, j], r_xy[i, j], ord)
                            TaylorSeries.div!(cos_λ[i, j], X_bf[i, j], r_xy[i, j], ord)
                            TaylorSeries.identity!(P_n[i, j, 1], one_t, ord)
                            TaylorSeries.identity!(P_n[i, j, 2], sin_ϕ[i, j], ord)
                            TaylorSeries.identity!(dP_n[i, j, 1], zero_q_1, ord)
                            TaylorSeries.identity!(dP_n[i, j, 2], one_t, ord)
                            for n = 2:n1SEM[j]
                                TaylorSeries.mul!(tmp3067[i, j, n], P_n[i, j, n], sin_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp3068[i, j, n], tmp3067[i, j, n], fact1_jsem[n], ord)
                                TaylorSeries.mul!(tmp3069[i, j, n - 1], P_n[i, j, n - 1], fact2_jsem[n], ord)
                                TaylorSeries.subst!(P_n[i, j, n + 1], tmp3068[i, j, n], tmp3069[i, j, n - 1], ord)
                                TaylorSeries.mul!(tmp3071[i, j, n], dP_n[i, j, n], sin_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp3072[i, j, n], P_n[i, j, n], fact3_jsem[n], ord)
                                TaylorSeries.add!(dP_n[i, j, n + 1], tmp3071[i, j, n], tmp3072[i, j, n], ord)
                                TaylorSeries.pow!(temp_rn[i, j, n], r_p1d2[i, j], fact5_jsem[n], ord)
                            end
                            TaylorSeries.pow!(r_p4[i, j], r_p2[i, j], 2, ord)
                            TaylorSeries.mul!(tmp3077[i, j, 3], P_n[i, j, 3], fact4_jsem[2], ord)
                            TaylorSeries.mul!(tmp3078[i, j, 3], tmp3077[i, j, 3], J2_t[j], ord)
                            TaylorSeries.div!(F_J_ξ[i, j], tmp3078[i, j, 3], r_p4[i, j], ord)
                            TaylorSeries.subst!(tmp3080[i, j, 3], dP_n[i, j, 3], ord)
                            TaylorSeries.mul!(tmp3081[i, j, 3], tmp3080[i, j, 3], cos_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp3082[i, j, 3], tmp3081[i, j, 3], J2_t[j], ord)
                            TaylorSeries.div!(F_J_ζ[i, j], tmp3082[i, j, 3], r_p4[i, j], ord)
                            TaylorSeries.identity!(F_J_ξ_36[i, j], zero_q_1, ord)
                            TaylorSeries.identity!(F_J_ζ_36[i, j], zero_q_1, ord)
                            for n = 3:n1SEM[j]
                                TaylorSeries.mul!(tmp3084[i, j, n + 1], P_n[i, j, n + 1], fact4_jsem[n], ord)
                                TaylorSeries.mul!(tmp3085[i, j, n + 1], tmp3084[i, j, n + 1], JSEM[j, n], ord)
                                TaylorSeries.div!(tmp3086[i, j, n + 1], tmp3085[i, j, n + 1], temp_rn[i, j, n], ord)
                                TaylorSeries.add!(temp_fjξ[i, j, n], tmp3086[i, j, n + 1], F_J_ξ_36[i, j], ord)
                                TaylorSeries.subst!(tmp3088[i, j, n + 1], dP_n[i, j, n + 1], ord)
                                TaylorSeries.mul!(tmp3089[i, j, n + 1], tmp3088[i, j, n + 1], cos_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp3090[i, j, n + 1], tmp3089[i, j, n + 1], JSEM[j, n], ord)
                                TaylorSeries.div!(tmp3091[i, j, n + 1], tmp3090[i, j, n + 1], temp_rn[i, j, n], ord)
                                TaylorSeries.add!(temp_fjζ[i, j, n], tmp3091[i, j, n + 1], F_J_ζ_36[i, j], ord)
                                TaylorSeries.identity!(F_J_ξ_36[i, j], temp_fjξ[i, j, n], ord)
                                TaylorSeries.identity!(F_J_ζ_36[i, j], temp_fjζ[i, j, n], ord)
                            end
                            if j == mo
                                for m = 1:n1SEM[mo]
                                    if m == 1
                                        TaylorSeries.identity!(sin_mλ[i, j, 1], sin_λ[i, j], ord)
                                        TaylorSeries.identity!(cos_mλ[i, j, 1], cos_λ[i, j], ord)
                                        TaylorSeries.identity!(secϕ_P_nm[i, j, 1, 1], one_t, ord)
                                        TaylorSeries.identity!(P_nm[i, j, 1, 1], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(cosϕ_dP_nm[i, j, 1, 1], sin_ϕ[i, j], lnm3[1], ord)
                                    else
                                        TaylorSeries.mul!(tmp3094[i, j, m - 1], cos_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                        TaylorSeries.mul!(tmp3095[i, j, m - 1], sin_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                        TaylorSeries.add!(sin_mλ[i, j, m], tmp3094[i, j, m - 1], tmp3095[i, j, m - 1], ord)
                                        TaylorSeries.mul!(tmp3097[i, j, m - 1], cos_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                        TaylorSeries.mul!(tmp3098[i, j, m - 1], sin_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                        TaylorSeries.subst!(cos_mλ[i, j, m], tmp3097[i, j, m - 1], tmp3098[i, j, m - 1], ord)
                                        TaylorSeries.mul!(tmp3100[i, j, m - 1, m - 1], secϕ_P_nm[i, j, m - 1, m - 1], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(secϕ_P_nm[i, j, m, m], tmp3100[i, j, m - 1, m - 1], lnm5[m], ord)
                                        TaylorSeries.mul!(P_nm[i, j, m, m], secϕ_P_nm[i, j, m, m], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp3103[i, j, m, m], secϕ_P_nm[i, j, m, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(cosϕ_dP_nm[i, j, m, m], tmp3103[i, j, m, m], lnm3[m], ord)
                                    end
                                    for n = m + 1:n1SEM[mo]
                                        if n == m + 1
                                            TaylorSeries.mul!(tmp3105[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                            TaylorSeries.mul!(secϕ_P_nm[i, j, n, m], tmp3105[i, j, n - 1, m], lnm1[n, m], ord)
                                        else
                                            TaylorSeries.mul!(tmp3107[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                            TaylorSeries.mul!(tmp3108[i, j, n - 1, m], tmp3107[i, j, n - 1, m], lnm1[n, m], ord)
                                            TaylorSeries.mul!(tmp3109[i, j, n - 2, m], secϕ_P_nm[i, j, n - 2, m], lnm2[n, m], ord)
                                            TaylorSeries.add!(secϕ_P_nm[i, j, n, m], tmp3108[i, j, n - 1, m], tmp3109[i, j, n - 2, m], ord)
                                        end
                                        TaylorSeries.mul!(P_nm[i, j, n, m], secϕ_P_nm[i, j, n, m], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp3112[i, j, n, m], secϕ_P_nm[i, j, n, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp3113[i, j, n, m], tmp3112[i, j, n, m], lnm3[n], ord)
                                        TaylorSeries.mul!(tmp3114[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], lnm4[n, m], ord)
                                        TaylorSeries.add!(cosϕ_dP_nm[i, j, n, m], tmp3113[i, j, n, m], tmp3114[i, j, n - 1, m], ord)
                                    end
                                end
                                TaylorSeries.mul!(tmp3116[i, j, 2, 1], P_nm[i, j, 2, 1], lnm6[2], ord)
                                TaylorSeries.mul!(tmp3117[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3118[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.add!(tmp3119[i, j, 1], tmp3117[i, j, 1], tmp3118[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3120[i, j, 2, 1], tmp3116[i, j, 2, 1], tmp3119[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3121[i, j, 2, 2], P_nm[i, j, 2, 2], lnm6[2], ord)
                                TaylorSeries.mul!(tmp3122[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3123[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.add!(tmp3124[i, j, 2], tmp3122[i, j, 2], tmp3123[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3125[i, j, 2, 2], tmp3121[i, j, 2, 2], tmp3124[i, j, 2], ord)
                                TaylorSeries.add!(tmp3126[i, j, 2, 1], tmp3120[i, j, 2, 1], tmp3125[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_ξ[i, j], tmp3126[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.mul!(tmp3128[i, j, 2, 1], secϕ_P_nm[i, j, 2, 1], lnm7[1], ord)
                                TaylorSeries.mul!(tmp3129[i, j, 1], S21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3130[i, j, 1], C21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.subst!(tmp3131[i, j, 1], tmp3129[i, j, 1], tmp3130[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3132[i, j, 2, 1], tmp3128[i, j, 2, 1], tmp3131[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3133[i, j, 2, 2], secϕ_P_nm[i, j, 2, 2], lnm7[2], ord)
                                TaylorSeries.mul!(tmp3134[i, j, 2], S22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3135[i, j, 2], C22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.subst!(tmp3136[i, j, 2], tmp3134[i, j, 2], tmp3135[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3137[i, j, 2, 2], tmp3133[i, j, 2, 2], tmp3136[i, j, 2], ord)
                                TaylorSeries.add!(tmp3138[i, j, 2, 1], tmp3132[i, j, 2, 1], tmp3137[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_η[i, j], tmp3138[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.mul!(tmp3140[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3141[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.add!(tmp3142[i, j, 1], tmp3140[i, j, 1], tmp3141[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3143[i, j, 2, 1], cosϕ_dP_nm[i, j, 2, 1], tmp3142[i, j, 1], ord)
                                TaylorSeries.mul!(tmp3144[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3145[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.add!(tmp3146[i, j, 2], tmp3144[i, j, 2], tmp3145[i, j, 2], ord)
                                TaylorSeries.mul!(tmp3147[i, j, 2, 2], cosϕ_dP_nm[i, j, 2, 2], tmp3146[i, j, 2], ord)
                                TaylorSeries.add!(tmp3148[i, j, 2, 1], tmp3143[i, j, 2, 1], tmp3147[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_ζ[i, j], tmp3148[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.identity!(F_CS_ξ_36[i, j], zero_q_1, ord)
                                TaylorSeries.identity!(F_CS_η_36[i, j], zero_q_1, ord)
                                TaylorSeries.identity!(F_CS_ζ_36[i, j], zero_q_1, ord)
                                for n = 3:n2M
                                    for m = 1:n
                                        TaylorSeries.mul!(Cnm_cosmλ[i, j, n, m], CM[n, m], cos_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Cnm_sinmλ[i, j, n, m], CM[n, m], sin_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Snm_cosmλ[i, j, n, m], SM[n, m], cos_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Snm_sinmλ[i, j, n, m], SM[n, m], sin_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(tmp3154[i, j, n, m], P_nm[i, j, n, m], lnm6[n], ord)
                                        TaylorSeries.add!(tmp3155[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp3156[i, j, n, m], tmp3154[i, j, n, m], tmp3155[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp3157[i, j, n, m], tmp3156[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_ξ[i, j, n, m], tmp3157[i, j, n, m], F_CS_ξ_36[i, j], ord)
                                        TaylorSeries.mul!(tmp3159[i, j, n, m], secϕ_P_nm[i, j, n, m], lnm7[m], ord)
                                        TaylorSeries.subst!(tmp3160[i, j, n, m], Snm_cosmλ[i, j, n, m], Cnm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp3161[i, j, n, m], tmp3159[i, j, n, m], tmp3160[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp3162[i, j, n, m], tmp3161[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_η[i, j, n, m], tmp3162[i, j, n, m], F_CS_η_36[i, j], ord)
                                        TaylorSeries.add!(tmp3164[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp3165[i, j, n, m], cosϕ_dP_nm[i, j, n, m], tmp3164[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp3166[i, j, n, m], tmp3165[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_ζ[i, j, n, m], tmp3166[i, j, n, m], F_CS_ζ_36[i, j], ord)
                                        TaylorSeries.identity!(F_CS_ξ_36[i, j], temp_CS_ξ[i, j, n, m], ord)
                                        TaylorSeries.identity!(F_CS_η_36[i, j], temp_CS_η[i, j, n, m], ord)
                                        TaylorSeries.identity!(F_CS_ζ_36[i, j], temp_CS_ζ[i, j, n, m], ord)
                                    end
                                end
                                TaylorSeries.add!(tmp3168[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                                TaylorSeries.add!(tmp3169[i, j], F_CS_ξ[i, j], F_CS_ξ_36[i, j], ord)
                                TaylorSeries.add!(F_JCS_ξ[i, j], tmp3168[i, j], tmp3169[i, j], ord)
                                TaylorSeries.add!(F_JCS_η[i, j], F_CS_η[i, j], F_CS_η_36[i, j], ord)
                                TaylorSeries.add!(tmp3172[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                                TaylorSeries.add!(tmp3173[i, j], F_CS_ζ[i, j], F_CS_ζ_36[i, j], ord)
                                TaylorSeries.add!(F_JCS_ζ[i, j], tmp3172[i, j], tmp3173[i, j], ord)
                            else
                                TaylorSeries.add!(F_JCS_ξ[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                                TaylorSeries.identity!(F_JCS_η[i, j], zero_q_1, ord)
                                TaylorSeries.add!(F_JCS_ζ[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                            end
                            TaylorSeries.mul!(Rb2p[i, j, 1, 1], cos_ϕ[i, j], cos_λ[i, j], ord)
                            TaylorSeries.subst!(Rb2p[i, j, 2, 1], sin_λ[i, j], ord)
                            TaylorSeries.subst!(tmp3179[i, j], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 3, 1], tmp3179[i, j], cos_λ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 1, 2], cos_ϕ[i, j], sin_λ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 2, 2], cos_λ[i, j], ord)
                            TaylorSeries.subst!(tmp3182[i, j], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 3, 2], tmp3182[i, j], sin_λ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 1, 3], sin_ϕ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 2, 3], zero_q_1, ord)
                            TaylorSeries.identity!(Rb2p[i, j, 3, 3], cos_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp3184[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp3185[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp3186[i, j, 1, 1], tmp3184[i, j, 1, 1], tmp3185[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp3187[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 1], tmp3186[i, j, 1, 1], tmp3187[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp3189[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp3190[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp3191[i, j, 2, 1], tmp3189[i, j, 2, 1], tmp3190[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp3192[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 1], tmp3191[i, j, 2, 1], tmp3192[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp3194[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp3195[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp3196[i, j, 3, 1], tmp3194[i, j, 3, 1], tmp3195[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp3197[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 1], tmp3196[i, j, 3, 1], tmp3197[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp3199[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp3200[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp3201[i, j, 1, 1], tmp3199[i, j, 1, 1], tmp3200[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp3202[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 2], tmp3201[i, j, 1, 1], tmp3202[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp3204[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp3205[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp3206[i, j, 2, 1], tmp3204[i, j, 2, 1], tmp3205[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp3207[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 2], tmp3206[i, j, 2, 1], tmp3207[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp3209[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp3210[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp3211[i, j, 3, 1], tmp3209[i, j, 3, 1], tmp3210[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp3212[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 2], tmp3211[i, j, 3, 1], tmp3212[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp3214[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp3215[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp3216[i, j, 1, 1], tmp3214[i, j, 1, 1], tmp3215[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp3217[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 3], tmp3216[i, j, 1, 1], tmp3217[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp3219[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp3220[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp3221[i, j, 2, 1], tmp3219[i, j, 2, 1], tmp3220[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp3222[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 3], tmp3221[i, j, 2, 1], tmp3222[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp3224[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp3225[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp3226[i, j, 3, 1], tmp3224[i, j, 3, 1], tmp3225[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp3227[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 3], tmp3226[i, j, 3, 1], tmp3227[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp3229[i, j, 1, 1], F_JCS_ξ[i, j], Gc2p[i, j, 1, 1], ord)
                            TaylorSeries.mul!(tmp3230[i, j, 2, 1], F_JCS_η[i, j], Gc2p[i, j, 2, 1], ord)
                            TaylorSeries.add!(tmp3231[i, j, 1, 1], tmp3229[i, j, 1, 1], tmp3230[i, j, 2, 1], ord)
                            TaylorSeries.mul!(tmp3232[i, j, 3, 1], F_JCS_ζ[i, j], Gc2p[i, j, 3, 1], ord)
                            TaylorSeries.add!(F_JCS_x[i, j], tmp3231[i, j, 1, 1], tmp3232[i, j, 3, 1], ord)
                            TaylorSeries.mul!(tmp3234[i, j, 1, 2], F_JCS_ξ[i, j], Gc2p[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp3235[i, j, 2, 2], F_JCS_η[i, j], Gc2p[i, j, 2, 2], ord)
                            TaylorSeries.add!(tmp3236[i, j, 1, 2], tmp3234[i, j, 1, 2], tmp3235[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp3237[i, j, 3, 2], F_JCS_ζ[i, j], Gc2p[i, j, 3, 2], ord)
                            TaylorSeries.add!(F_JCS_y[i, j], tmp3236[i, j, 1, 2], tmp3237[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp3239[i, j, 1, 3], F_JCS_ξ[i, j], Gc2p[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp3240[i, j, 2, 3], F_JCS_η[i, j], Gc2p[i, j, 2, 3], ord)
                            TaylorSeries.add!(tmp3241[i, j, 1, 3], tmp3239[i, j, 1, 3], tmp3240[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp3242[i, j, 3, 3], F_JCS_ζ[i, j], Gc2p[i, j, 3, 3], ord)
                            TaylorSeries.add!(F_JCS_z[i, j], tmp3241[i, j, 1, 3], tmp3242[i, j, 3, 3], ord)
                        end
                    end
                end
            end
        for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        TaylorSeries.mul!(tmp3244[i, j], μ[i], F_JCS_x[i, j], ord)
                        TaylorSeries.subst!(temp_accX_j[i, j], accX[j], tmp3244[i, j], ord)
                        TaylorSeries.identity!(accX[j], temp_accX_j[i, j], ord)
                        TaylorSeries.mul!(tmp3246[i, j], μ[i], F_JCS_y[i, j], ord)
                        TaylorSeries.subst!(temp_accY_j[i, j], accY[j], tmp3246[i, j], ord)
                        TaylorSeries.identity!(accY[j], temp_accY_j[i, j], ord)
                        TaylorSeries.mul!(tmp3248[i, j], μ[i], F_JCS_z[i, j], ord)
                        TaylorSeries.subst!(temp_accZ_j[i, j], accZ[j], tmp3248[i, j], ord)
                        TaylorSeries.identity!(accZ[j], temp_accZ_j[i, j], ord)
                        TaylorSeries.mul!(tmp3250[i, j], μ[j], F_JCS_x[i, j], ord)
                        TaylorSeries.add!(temp_accX_i[i, j], accX[i], tmp3250[i, j], ord)
                        TaylorSeries.identity!(accX[i], temp_accX_i[i, j], ord)
                        TaylorSeries.mul!(tmp3252[i, j], μ[j], F_JCS_y[i, j], ord)
                        TaylorSeries.add!(temp_accY_i[i, j], accY[i], tmp3252[i, j], ord)
                        TaylorSeries.identity!(accY[i], temp_accY_i[i, j], ord)
                        TaylorSeries.mul!(tmp3254[i, j], μ[j], F_JCS_z[i, j], ord)
                        TaylorSeries.add!(temp_accZ_i[i, j], accZ[i], tmp3254[i, j], ord)
                        TaylorSeries.identity!(accZ[i], temp_accZ_i[i, j], ord)
                        if j == mo
                            TaylorSeries.mul!(tmp3256[i, j], Y[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.mul!(tmp3257[i, j], Z[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.subst!(tmp3258[i, j], tmp3256[i, j], tmp3257[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_x[i], μ[i], tmp3258[i, j], ord)
                            TaylorSeries.mul!(tmp3260[i, j], Z[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.mul!(tmp3261[i, j], X[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.subst!(tmp3262[i, j], tmp3260[i, j], tmp3261[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_y[i], μ[i], tmp3262[i, j], ord)
                            TaylorSeries.mul!(tmp3264[i, j], X[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.mul!(tmp3265[i, j], Y[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.subst!(tmp3266[i, j], tmp3264[i, j], tmp3265[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_z[i], μ[i], tmp3266[i, j], ord)
                            TaylorSeries.subst!(temp_N_M_x[i], N_MfigM[1], N_MfigM_pmA_x[i], ord)
                            TaylorSeries.identity!(N_MfigM[1], temp_N_M_x[i], ord)
                            TaylorSeries.subst!(temp_N_M_y[i], N_MfigM[2], N_MfigM_pmA_y[i], ord)
                            TaylorSeries.identity!(N_MfigM[2], temp_N_M_y[i], ord)
                            TaylorSeries.subst!(temp_N_M_z[i], N_MfigM[3], N_MfigM_pmA_z[i], ord)
                            TaylorSeries.identity!(N_MfigM[3], temp_N_M_z[i], ord)
                        end
                    end
                end
            end
        end
        #= REPL[11]:656 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.mul!(_4ϕj[i, j], 4, newtonianNb_Potential[j], ord)
                        TaylorSeries.add!(ϕi_plus_4ϕj[i, j], newtonianNb_Potential[i], _4ϕj[i, j], ord)
                        TaylorSeries.mul!(_2v2[i, j], 2, v2[i], ord)
                        TaylorSeries.add!(sj2_plus_2si2[i, j], v2[j], _2v2[i, j], ord)
                        TaylorSeries.mul!(tmp3278[i, j], 4, vi_dot_vj[i, j], ord)
                        TaylorSeries.subst!(sj2_plus_2si2_minus_4vivj[i, j], sj2_plus_2si2[i, j], tmp3278[i, j], ord)
                        TaylorSeries.subst!(ϕs_and_vs[i, j], sj2_plus_2si2_minus_4vivj[i, j], ϕi_plus_4ϕj[i, j], ord)
                        TaylorSeries.mul!(Xij_t_Ui[i, j], X[i, j], dq[3i - 2], ord)
                        TaylorSeries.mul!(Yij_t_Vi[i, j], Y[i, j], dq[3i - 1], ord)
                        TaylorSeries.mul!(Zij_t_Wi[i, j], Z[i, j], dq[3i], ord)
                        TaylorSeries.add!(tmp3284[i, j], Xij_t_Ui[i, j], Yij_t_Vi[i, j], ord)
                        TaylorSeries.add!(Rij_dot_Vi[i, j], tmp3284[i, j], Zij_t_Wi[i, j], ord)
                        TaylorSeries.pow!(tmp3287[i, j], Rij_dot_Vi[i, j], 2, ord)
                        TaylorSeries.div!(pn1t7[i, j], tmp3287[i, j], r_p2[i, j], ord)
                        TaylorSeries.mul!(tmp3290[i, j], 1.5, pn1t7[i, j], ord)
                        TaylorSeries.subst!(pn1t2_7[i, j], ϕs_and_vs[i, j], tmp3290[i, j], ord)
                        TaylorSeries.add!(pn1t1_7[i, j], c_p2, pn1t2_7[i, j], ord)
                    end
                end
                TaylorSeries.identity!(pntempX[j], zero_q_1, ord)
                TaylorSeries.identity!(pntempY[j], zero_q_1, ord)
                TaylorSeries.identity!(pntempZ[j], zero_q_1, ord)
            end
        #= REPL[11]:695 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.mul!(pNX_t_X[i, j], newtonX[i], X[i, j], ord)
                        TaylorSeries.mul!(pNY_t_Y[i, j], newtonY[i], Y[i, j], ord)
                        TaylorSeries.mul!(pNZ_t_Z[i, j], newtonZ[i], Z[i, j], ord)
                        TaylorSeries.add!(tmp3297[i, j], pNX_t_X[i, j], pNY_t_Y[i, j], ord)
                        TaylorSeries.add!(tmp3298[i, j], tmp3297[i, j], pNZ_t_Z[i, j], ord)
                        TaylorSeries.mul!(tmp3299[i, j], 0.5, tmp3298[i, j], ord)
                        TaylorSeries.add!(pn1[i, j], pn1t1_7[i, j], tmp3299[i, j], ord)
                        TaylorSeries.mul!(X_t_pn1[i, j], newton_acc_X[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(Y_t_pn1[i, j], newton_acc_Y[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(Z_t_pn1[i, j], newton_acc_Z[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(pNX_t_pn3[i, j], newtonX[i], pn3[i, j], ord)
                        TaylorSeries.mul!(pNY_t_pn3[i, j], newtonY[i], pn3[i, j], ord)
                        TaylorSeries.mul!(pNZ_t_pn3[i, j], newtonZ[i], pn3[i, j], ord)
                        TaylorSeries.add!(tmp3307[i, j], U_t_pn2[i, j], pNX_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpnx[i, j], X_t_pn1[i, j], tmp3307[i, j], ord)
                        TaylorSeries.add!(sumpnx[i, j], pntempX[j], termpnx[i, j], ord)
                        TaylorSeries.identity!(pntempX[j], sumpnx[i, j], ord)
                        TaylorSeries.add!(tmp3310[i, j], V_t_pn2[i, j], pNY_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpny[i, j], Y_t_pn1[i, j], tmp3310[i, j], ord)
                        TaylorSeries.add!(sumpny[i, j], pntempY[j], termpny[i, j], ord)
                        TaylorSeries.identity!(pntempY[j], sumpny[i, j], ord)
                        TaylorSeries.add!(tmp3313[i, j], W_t_pn2[i, j], pNZ_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpnz[i, j], Z_t_pn1[i, j], tmp3313[i, j], ord)
                        TaylorSeries.add!(sumpnz[i, j], pntempZ[j], termpnz[i, j], ord)
                        TaylorSeries.identity!(pntempZ[j], sumpnz[i, j], ord)
                    end
                end
                TaylorSeries.mul!(postNewtonX[j], pntempX[j], c_m2, ord)
                TaylorSeries.mul!(postNewtonY[j], pntempY[j], c_m2, ord)
                TaylorSeries.mul!(postNewtonZ[j], pntempZ[j], c_m2, ord)
            end
        #= REPL[11]:741 =# Threads.@threads for i = 1:N_ext
                TaylorSeries.add!(dq[3 * (N + i) - 2], postNewtonX[i], accX[i], ord)
                TaylorSeries.add!(dq[3 * (N + i) - 1], postNewtonY[i], accY[i], ord)
                TaylorSeries.add!(dq[3 * (N + i)], postNewtonZ[i], accZ[i], ord)
            end
        #= REPL[11]:746 =# Threads.@threads for i = N_ext + 1:N
                TaylorSeries.identity!(dq[3 * (N + i) - 2], postNewtonX[i], ord)
                TaylorSeries.identity!(dq[3 * (N + i) - 1], postNewtonY[i], ord)
                TaylorSeries.identity!(dq[3 * (N + i)], postNewtonZ[i], ord)
            end
        TaylorSeries.mul!(tmp3322, I_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3323, I_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3324, I_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3325, tmp3323, tmp3324, ord)
        TaylorSeries.add!(Iω_x, tmp3322, tmp3325, ord)
        TaylorSeries.mul!(tmp3327, I_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3328, I_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3329, I_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3330, tmp3328, tmp3329, ord)
        TaylorSeries.add!(Iω_y, tmp3327, tmp3330, ord)
        TaylorSeries.mul!(tmp3332, I_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3333, I_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3334, I_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3335, tmp3333, tmp3334, ord)
        TaylorSeries.add!(Iω_z, tmp3332, tmp3335, ord)
        TaylorSeries.mul!(tmp3337, q[6N + 5], Iω_z, ord)
        TaylorSeries.mul!(tmp3338, q[6N + 6], Iω_y, ord)
        TaylorSeries.subst!(ωxIω_x, tmp3337, tmp3338, ord)
        TaylorSeries.mul!(tmp3340, q[6N + 6], Iω_x, ord)
        TaylorSeries.mul!(tmp3341, q[6N + 4], Iω_z, ord)
        TaylorSeries.subst!(ωxIω_y, tmp3340, tmp3341, ord)
        TaylorSeries.mul!(tmp3343, q[6N + 4], Iω_y, ord)
        TaylorSeries.mul!(tmp3344, q[6N + 5], Iω_x, ord)
        TaylorSeries.subst!(ωxIω_z, tmp3343, tmp3344, ord)
        TaylorSeries.mul!(tmp3346, dI_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3347, dI_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3348, dI_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3349, tmp3347, tmp3348, ord)
        TaylorSeries.add!(dIω_x, tmp3346, tmp3349, ord)
        TaylorSeries.mul!(tmp3351, dI_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3352, dI_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3353, dI_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3354, tmp3352, tmp3353, ord)
        TaylorSeries.add!(dIω_y, tmp3351, tmp3354, ord)
        TaylorSeries.mul!(tmp3356, dI_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3357, dI_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3358, dI_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp3359, tmp3357, tmp3358, ord)
        TaylorSeries.add!(dIω_z, tmp3356, tmp3359, ord)
        TaylorSeries.div!(er_EM_I_1, X[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_2, Y[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_3, Z[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.identity!(p_E_I_1, RotM[3, 1, ea], ord)
        TaylorSeries.identity!(p_E_I_2, RotM[3, 2, ea], ord)
        TaylorSeries.identity!(p_E_I_3, RotM[3, 3, ea], ord)
        TaylorSeries.mul!(tmp3364, RotM[1, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp3365, RotM[1, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp3366, RotM[1, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp3367, tmp3365, tmp3366, ord)
        TaylorSeries.add!(er_EM_1, tmp3364, tmp3367, ord)
        TaylorSeries.mul!(tmp3369, RotM[2, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp3370, RotM[2, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp3371, RotM[2, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp3372, tmp3370, tmp3371, ord)
        TaylorSeries.add!(er_EM_2, tmp3369, tmp3372, ord)
        TaylorSeries.mul!(tmp3374, RotM[3, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp3375, RotM[3, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp3376, RotM[3, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp3377, tmp3375, tmp3376, ord)
        TaylorSeries.add!(er_EM_3, tmp3374, tmp3377, ord)
        TaylorSeries.mul!(tmp3379, RotM[1, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp3380, RotM[1, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp3381, RotM[1, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp3382, tmp3380, tmp3381, ord)
        TaylorSeries.add!(p_E_1, tmp3379, tmp3382, ord)
        TaylorSeries.mul!(tmp3384, RotM[2, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp3385, RotM[2, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp3386, RotM[2, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp3387, tmp3385, tmp3386, ord)
        TaylorSeries.add!(p_E_2, tmp3384, tmp3387, ord)
        TaylorSeries.mul!(tmp3389, RotM[3, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp3390, RotM[3, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp3391, RotM[3, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp3392, tmp3390, tmp3391, ord)
        TaylorSeries.add!(p_E_3, tmp3389, tmp3392, ord)
        TaylorSeries.mul!(tmp3394, I_m_t[1, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp3395, I_m_t[1, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp3396, I_m_t[1, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp3397, tmp3395, tmp3396, ord)
        TaylorSeries.add!(I_er_EM_1, tmp3394, tmp3397, ord)
        TaylorSeries.mul!(tmp3399, I_m_t[2, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp3400, I_m_t[2, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp3401, I_m_t[2, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp3402, tmp3400, tmp3401, ord)
        TaylorSeries.add!(I_er_EM_2, tmp3399, tmp3402, ord)
        TaylorSeries.mul!(tmp3404, I_m_t[3, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp3405, I_m_t[3, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp3406, I_m_t[3, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp3407, tmp3405, tmp3406, ord)
        TaylorSeries.add!(I_er_EM_3, tmp3404, tmp3407, ord)
        TaylorSeries.mul!(tmp3409, I_m_t[1, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp3410, I_m_t[1, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp3411, I_m_t[1, 3], p_E_3, ord)
        TaylorSeries.add!(tmp3412, tmp3410, tmp3411, ord)
        TaylorSeries.add!(I_p_E_1, tmp3409, tmp3412, ord)
        TaylorSeries.mul!(tmp3414, I_m_t[2, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp3415, I_m_t[2, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp3416, I_m_t[2, 3], p_E_3, ord)
        TaylorSeries.add!(tmp3417, tmp3415, tmp3416, ord)
        TaylorSeries.add!(I_p_E_2, tmp3414, tmp3417, ord)
        TaylorSeries.mul!(tmp3419, I_m_t[3, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp3420, I_m_t[3, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp3421, I_m_t[3, 3], p_E_3, ord)
        TaylorSeries.add!(tmp3422, tmp3420, tmp3421, ord)
        TaylorSeries.add!(I_p_E_3, tmp3419, tmp3422, ord)
        TaylorSeries.mul!(tmp3424, er_EM_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp3425, er_EM_3, I_er_EM_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_1, tmp3424, tmp3425, ord)
        TaylorSeries.mul!(tmp3427, er_EM_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp3428, er_EM_1, I_er_EM_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_2, tmp3427, tmp3428, ord)
        TaylorSeries.mul!(tmp3430, er_EM_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp3431, er_EM_2, I_er_EM_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_3, tmp3430, tmp3431, ord)
        TaylorSeries.mul!(tmp3433, er_EM_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp3434, er_EM_3, I_p_E_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_1, tmp3433, tmp3434, ord)
        TaylorSeries.mul!(tmp3436, er_EM_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp3437, er_EM_1, I_p_E_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_2, tmp3436, tmp3437, ord)
        TaylorSeries.mul!(tmp3439, er_EM_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp3440, er_EM_2, I_p_E_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_3, tmp3439, tmp3440, ord)
        TaylorSeries.mul!(tmp3442, p_E_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp3443, p_E_3, I_er_EM_2, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_1, tmp3442, tmp3443, ord)
        TaylorSeries.mul!(tmp3445, p_E_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp3446, p_E_1, I_er_EM_3, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_2, tmp3445, tmp3446, ord)
        TaylorSeries.mul!(tmp3448, p_E_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp3449, p_E_2, I_er_EM_1, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_3, tmp3448, tmp3449, ord)
        TaylorSeries.mul!(tmp3451, p_E_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp3452, p_E_3, I_p_E_2, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_1, tmp3451, tmp3452, ord)
        TaylorSeries.mul!(tmp3454, p_E_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp3455, p_E_1, I_p_E_3, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_2, tmp3454, tmp3455, ord)
        TaylorSeries.mul!(tmp3457, p_E_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp3458, p_E_2, I_p_E_1, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_3, tmp3457, tmp3458, ord)
        TaylorSeries.pow!(tmp3462, sin_ϕ[ea, mo], 2, ord)
        TaylorSeries.mul!(tmp3463, 7, tmp3462, ord)
        TaylorSeries.subst!(one_minus_7sin2ϕEM, one_t, tmp3463, ord)
        TaylorSeries.mul!(two_sinϕEM, 2, sin_ϕ[ea, mo], ord)
        TaylorSeries.pow!(tmp3468, r_p1d2[mo, ea], 5, ord)
        TaylorSeries.div!(N_MfigM_figE_factor_div_rEMp5, N_MfigM_figE_factor, tmp3468, ord)
        TaylorSeries.mul!(tmp3470, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_1, ord)
        TaylorSeries.add!(tmp3471, er_EM_cross_I_p_E_1, p_E_cross_I_er_EM_1, ord)
        TaylorSeries.mul!(tmp3472, two_sinϕEM, tmp3471, ord)
        TaylorSeries.add!(tmp3473, tmp3470, tmp3472, ord)
        TaylorSeries.mul!(tmp3475, 0.4, p_E_cross_I_p_E_1, ord)
        TaylorSeries.subst!(tmp3476, tmp3473, tmp3475, ord)
        TaylorSeries.mul!(N_MfigM_figE_1, N_MfigM_figE_factor_div_rEMp5, tmp3476, ord)
        TaylorSeries.mul!(tmp3478, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_2, ord)
        TaylorSeries.add!(tmp3479, er_EM_cross_I_p_E_2, p_E_cross_I_er_EM_2, ord)
        TaylorSeries.mul!(tmp3480, two_sinϕEM, tmp3479, ord)
        TaylorSeries.add!(tmp3481, tmp3478, tmp3480, ord)
        TaylorSeries.mul!(tmp3483, 0.4, p_E_cross_I_p_E_2, ord)
        TaylorSeries.subst!(tmp3484, tmp3481, tmp3483, ord)
        TaylorSeries.mul!(N_MfigM_figE_2, N_MfigM_figE_factor_div_rEMp5, tmp3484, ord)
        TaylorSeries.mul!(tmp3486, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_3, ord)
        TaylorSeries.add!(tmp3487, er_EM_cross_I_p_E_3, p_E_cross_I_er_EM_3, ord)
        TaylorSeries.mul!(tmp3488, two_sinϕEM, tmp3487, ord)
        TaylorSeries.add!(tmp3489, tmp3486, tmp3488, ord)
        TaylorSeries.mul!(tmp3491, 0.4, p_E_cross_I_p_E_3, ord)
        TaylorSeries.subst!(tmp3492, tmp3489, tmp3491, ord)
        TaylorSeries.mul!(N_MfigM_figE_3, N_MfigM_figE_factor_div_rEMp5, tmp3492, ord)
        TaylorSeries.mul!(tmp3494, RotM[1, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp3495, RotM[1, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp3496, RotM[1, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp3497, tmp3495, tmp3496, ord)
        TaylorSeries.add!(N_1_LMF, tmp3494, tmp3497, ord)
        TaylorSeries.mul!(tmp3499, RotM[2, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp3500, RotM[2, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp3501, RotM[2, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp3502, tmp3500, tmp3501, ord)
        TaylorSeries.add!(N_2_LMF, tmp3499, tmp3502, ord)
        TaylorSeries.mul!(tmp3504, RotM[3, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp3505, RotM[3, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp3506, RotM[3, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp3507, tmp3505, tmp3506, ord)
        TaylorSeries.add!(N_3_LMF, tmp3504, tmp3507, ord)
        TaylorSeries.subst!(tmp3509, q[6N + 10], q[6N + 4], ord)
        TaylorSeries.mul!(tmp3510, k_ν, tmp3509, ord)
        TaylorSeries.mul!(tmp3511, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp3512, tmp3511, q[6N + 11], ord)
        TaylorSeries.subst!(N_cmb_1, tmp3510, tmp3512, ord)
        TaylorSeries.subst!(tmp3514, q[6N + 11], q[6N + 5], ord)
        TaylorSeries.mul!(tmp3515, k_ν, tmp3514, ord)
        TaylorSeries.mul!(tmp3516, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp3517, tmp3516, q[6N + 10], ord)
        TaylorSeries.add!(N_cmb_2, tmp3515, tmp3517, ord)
        TaylorSeries.subst!(tmp3519, q[6N + 12], q[6N + 6], ord)
        TaylorSeries.mul!(N_cmb_3, k_ν, tmp3519, ord)
        TaylorSeries.mul!(tmp3521, μ[mo], N_1_LMF, ord)
        TaylorSeries.add!(tmp3522, N_MfigM_figE_1, tmp3521, ord)
        TaylorSeries.add!(tmp3523, tmp3522, N_cmb_1, ord)
        TaylorSeries.add!(tmp3524, dIω_x, ωxIω_x, ord)
        TaylorSeries.subst!(I_dω_1, tmp3523, tmp3524, ord)
        TaylorSeries.mul!(tmp3526, μ[mo], N_2_LMF, ord)
        TaylorSeries.add!(tmp3527, N_MfigM_figE_2, tmp3526, ord)
        TaylorSeries.add!(tmp3528, tmp3527, N_cmb_2, ord)
        TaylorSeries.add!(tmp3529, dIω_y, ωxIω_y, ord)
        TaylorSeries.subst!(I_dω_2, tmp3528, tmp3529, ord)
        TaylorSeries.mul!(tmp3531, μ[mo], N_3_LMF, ord)
        TaylorSeries.add!(tmp3532, N_MfigM_figE_3, tmp3531, ord)
        TaylorSeries.add!(tmp3533, tmp3532, N_cmb_3, ord)
        TaylorSeries.add!(tmp3534, dIω_z, ωxIω_z, ord)
        TaylorSeries.subst!(I_dω_3, tmp3533, tmp3534, ord)
        TaylorSeries.mul!(Ic_ωc_1, I_c_t[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(Ic_ωc_2, I_c_t[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(Ic_ωc_3, I_c_t[3, 3], q[6N + 12], ord)
        TaylorSeries.mul!(tmp3539, q[6N + 6], Ic_ωc_2, ord)
        TaylorSeries.mul!(tmp3540, q[6N + 5], Ic_ωc_3, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_1, tmp3539, tmp3540, ord)
        TaylorSeries.mul!(tmp3542, q[6N + 4], Ic_ωc_3, ord)
        TaylorSeries.mul!(tmp3543, q[6N + 6], Ic_ωc_1, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_2, tmp3542, tmp3543, ord)
        TaylorSeries.mul!(tmp3545, q[6N + 5], Ic_ωc_1, ord)
        TaylorSeries.mul!(tmp3546, q[6N + 4], Ic_ωc_2, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_3, tmp3545, tmp3546, ord)
        TaylorSeries.subst!(Ic_dωc_1, m_ωm_x_Icωc_1, N_cmb_1, ord)
        TaylorSeries.subst!(Ic_dωc_2, m_ωm_x_Icωc_2, N_cmb_2, ord)
        TaylorSeries.subst!(Ic_dωc_3, m_ωm_x_Icωc_3, N_cmb_3, ord)
        TaylorSeries.sincos!(tmp3551, tmp3631, q[6N + 3], ord)
        TaylorSeries.mul!(tmp3552, q[6N + 4], tmp3551, ord)
        TaylorSeries.sincos!(tmp3632, tmp3553, q[6N + 3], ord)
        TaylorSeries.mul!(tmp3554, q[6N + 5], tmp3553, ord)
        TaylorSeries.add!(tmp3555, tmp3552, tmp3554, ord)
        TaylorSeries.sincos!(tmp3556, tmp3633, q[6N + 2], ord)
        TaylorSeries.div!(dq[6N + 1], tmp3555, tmp3556, ord)
        TaylorSeries.sincos!(tmp3634, tmp3558, q[6N + 3], ord)
        TaylorSeries.mul!(tmp3559, q[6N + 4], tmp3558, ord)
        TaylorSeries.sincos!(tmp3560, tmp3635, q[6N + 3], ord)
        TaylorSeries.mul!(tmp3561, q[6N + 5], tmp3560, ord)
        TaylorSeries.subst!(dq[6N + 2], tmp3559, tmp3561, ord)
        TaylorSeries.sincos!(tmp3636, tmp3563, q[6N + 2], ord)
        TaylorSeries.mul!(tmp3564, dq[6N + 1], tmp3563, ord)
        TaylorSeries.subst!(dq[6N + 3], q[6N + 6], tmp3564, ord)
        TaylorSeries.mul!(tmp3566, inv_I_m_t[1, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp3567, inv_I_m_t[1, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp3568, inv_I_m_t[1, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp3569, tmp3567, tmp3568, ord)
        TaylorSeries.add!(dq[6N + 4], tmp3566, tmp3569, ord)
        TaylorSeries.mul!(tmp3571, inv_I_m_t[2, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp3572, inv_I_m_t[2, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp3573, inv_I_m_t[2, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp3574, tmp3572, tmp3573, ord)
        TaylorSeries.add!(dq[6N + 5], tmp3571, tmp3574, ord)
        TaylorSeries.mul!(tmp3576, inv_I_m_t[3, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp3577, inv_I_m_t[3, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp3578, inv_I_m_t[3, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp3579, tmp3577, tmp3578, ord)
        TaylorSeries.add!(dq[6N + 6], tmp3576, tmp3579, ord)
        TaylorSeries.sincos!(tmp3581, tmp3637, q[6N + 8], ord)
        TaylorSeries.div!(tmp3582, ω_c_CE_2, tmp3581, ord)
        TaylorSeries.subst!(dq[6N + 9], tmp3582, ord)
        TaylorSeries.sincos!(tmp3638, tmp3584, q[6N + 8], ord)
        TaylorSeries.mul!(tmp3585, dq[6N + 9], tmp3584, ord)
        TaylorSeries.subst!(dq[6N + 7], ω_c_CE_3, tmp3585, ord)
        TaylorSeries.identity!(dq[6N + 8], ω_c_CE_1, ord)
        TaylorSeries.mul!(dq[6N + 10], inv_I_c_t[1, 1], Ic_dωc_1, ord)
        TaylorSeries.mul!(dq[6N + 11], inv_I_c_t[2, 2], Ic_dωc_2, ord)
        TaylorSeries.mul!(dq[6N + 12], inv_I_c_t[3, 3], Ic_dωc_3, ord)
        TaylorSeries.identity!(dq[6N + 13], zero_q_1, ord)
        for __idx = eachindex(q)
            (q[__idx]).coeffs[ordnext + 1] = (dq[__idx]).coeffs[ordnext] / ordnext
        end
    end
    return nothing
end

# TaylorIntegration.jetcoeffs! method for src/dynamical_model.jl: DE430!
function TaylorIntegration.jetcoeffs!(::Val{DE430!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params) where {_T <: Real, _S <: Number, _N}
    order = t.order
    local (N, jd0) = params
    local S = eltype(q)
    local N_ext = 11
    local N_bwd = 11
    local params_bwd = (N_bwd, jd0)
    local qq_bwd = Taylor1.(constant_term.(q[union(nbodyind(N, 1:N_bwd), 6N + 1:6N + 13)]), t.order)
    local dqq_bwd = similar(qq_bwd)
    local xaux_bwd = similar(qq_bwd)
    local jc = TaylorIntegration.jetcoeffs!(NBP_pN_A_J23E_J23M_J2S_threads!, t, qq_bwd, dqq_bwd, xaux_bwd, params_bwd)
    local __t = Taylor1(t.order)
    local q_del_τ_M = qq_bwd(__t - τ_M)
    local q_del_τ_0 = qq_bwd(__t - τ_0p)
    local q_del_τ_1 = qq_bwd(__t - τ_1p)
    local q_del_τ_2 = qq_bwd(__t - τ_2p)
    local eulang_del_τ_M = q_del_τ_M[6N_bwd + 1:6N_bwd + 3]
    local ω_m_del_τ_M = q_del_τ_M[6N_bwd + 4:6N_bwd + 6]
    local zero_q_1 = zero(q[1])
    local one_t = one(t)
    local dsj2k = t + (jd0 - J2000)
    local I_m_t = ITM(q_del_τ_M, eulang_del_τ_M, ω_m_del_τ_M)
    local dI_m_t = ordpres_differentiate.(I_m_t)
    local inv_I_m_t = inv(I_m_t)
    local I_c_t = I_c .* one_t
    local inv_I_c_t = inv(I_c_t)
    local I_M_t = I_m_t + I_c_t
    X = Array{S}(undef, N, N)
    Y = Array{S}(undef, N, N)
    Z = Array{S}(undef, N, N)
    r_p2 = Array{S}(undef, N, N)
    r_p1d2 = Array{S}(undef, N, N)
    r_p3d2 = Array{S}(undef, N, N)
    r_p7d2 = Array{S}(undef, N, N)
    newtonX = Array{S}(undef, N)
    newtonY = Array{S}(undef, N)
    newtonZ = Array{S}(undef, N)
    newtonianCoeff = Array{S}(undef, N, N)
    U = Array{S}(undef, N, N)
    V = Array{S}(undef, N, N)
    W = Array{S}(undef, N, N)
    _4U_m_3X = Array{S}(undef, N, N)
    _4V_m_3Y = Array{S}(undef, N, N)
    _4W_m_3Z = Array{S}(undef, N, N)
    UU = Array{S}(undef, N, N)
    VV = Array{S}(undef, N, N)
    WW = Array{S}(undef, N, N)
    newtonian1b_Potential = Array{S}(undef, N, N)
    newtonianNb_Potential = Array{S}(undef, N)
    newton_acc_X = Array{S}(undef, N, N)
    newton_acc_Y = Array{S}(undef, N, N)
    newton_acc_Z = Array{S}(undef, N, N)
    v2 = Array{S}(undef, N)
    _2v2 = Array{S}(undef, N, N)
    vi_dot_vj = Array{S}(undef, N, N)
    pn2 = Array{S}(undef, N, N)
    U_t_pn2 = Array{S}(undef, N, N)
    V_t_pn2 = Array{S}(undef, N, N)
    W_t_pn2 = Array{S}(undef, N, N)
    pn3 = Array{S}(undef, N, N)
    pNX_t_pn3 = Array{S}(undef, N, N)
    pNY_t_pn3 = Array{S}(undef, N, N)
    pNZ_t_pn3 = Array{S}(undef, N, N)
    _4ϕj = Array{S}(undef, N, N)
    ϕi_plus_4ϕj = Array{S}(undef, N, N)
    sj2_plus_2si2 = Array{S}(undef, N, N)
    sj2_plus_2si2_minus_4vivj = Array{S}(undef, N, N)
    ϕs_and_vs = Array{S}(undef, N, N)
    pn1t1_7 = Array{S}(undef, N, N)
    pNX_t_X = Array{S}(undef, N, N)
    pNY_t_Y = Array{S}(undef, N, N)
    pNZ_t_Z = Array{S}(undef, N, N)
    pn1 = Array{S}(undef, N, N)
    X_t_pn1 = Array{S}(undef, N, N)
    Y_t_pn1 = Array{S}(undef, N, N)
    Z_t_pn1 = Array{S}(undef, N, N)
    pntempX = Array{S}(undef, N)
    pntempY = Array{S}(undef, N)
    pntempZ = Array{S}(undef, N)
    postNewtonX = Array{S}(undef, N)
    postNewtonY = Array{S}(undef, N)
    postNewtonZ = Array{S}(undef, N)
    X_bf_1 = Array{S}(undef, N_ext, N_ext)
    Y_bf_1 = Array{S}(undef, N_ext, N_ext)
    Z_bf_1 = Array{S}(undef, N_ext, N_ext)
    X_bf_2 = Array{S}(undef, N_ext, N_ext)
    Y_bf_2 = Array{S}(undef, N_ext, N_ext)
    Z_bf_2 = Array{S}(undef, N_ext, N_ext)
    X_bf_3 = Array{S}(undef, N_ext, N_ext)
    Y_bf_3 = Array{S}(undef, N_ext, N_ext)
    Z_bf_3 = Array{S}(undef, N_ext, N_ext)
    X_bf = Array{S}(undef, N_ext, N_ext)
    Y_bf = Array{S}(undef, N_ext, N_ext)
    Z_bf = Array{S}(undef, N_ext, N_ext)
    F_JCS_x = Array{S}(undef, N_ext, N_ext)
    F_JCS_y = Array{S}(undef, N_ext, N_ext)
    F_JCS_z = Array{S}(undef, N_ext, N_ext)
    temp_accX_j = Array{S}(undef, N_ext, N_ext)
    temp_accY_j = Array{S}(undef, N_ext, N_ext)
    temp_accZ_j = Array{S}(undef, N_ext, N_ext)
    temp_accX_i = Array{S}(undef, N_ext, N_ext)
    temp_accY_i = Array{S}(undef, N_ext, N_ext)
    temp_accZ_i = Array{S}(undef, N_ext, N_ext)
    sin_ϕ = Array{S}(undef, N_ext, N_ext)
    cos_ϕ = Array{S}(undef, N_ext, N_ext)
    sin_λ = Array{S}(undef, N_ext, N_ext)
    cos_λ = Array{S}(undef, N_ext, N_ext)
    r_xy = Array{S}(undef, N_ext, N_ext)
    r_p4 = Array{S}(undef, N_ext, N_ext)
    P_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    dP_n = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjξ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_fjζ = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_rn = Array{S}(undef, N_ext, N_ext, maximum(n1SEM) + 1)
    temp_CS_ξ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_η = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    temp_CS_ζ = Array{S}(undef, N_ext, N_ext, n1SEM[mo], n1SEM[mo])
    F_CS_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_η_36 = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ξ_36 = Array{S}(undef, N_ext, N_ext)
    F_J_ζ_36 = Array{S}(undef, N_ext, N_ext)
    sin_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    cos_mλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo])
    Cnm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Cnm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_cosmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    Snm_sinmλ = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    secϕ_P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    P_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    cosϕ_dP_nm = Array{S}(undef, N_ext, N_ext, n1SEM[mo] + 1, n1SEM[mo] + 1)
    F_J_ξ = Array{S}(undef, N_ext, N_ext)
    F_J_η = Array{S}(undef, N_ext, N_ext)
    F_J_ζ = Array{S}(undef, N_ext, N_ext)
    F_CS_ξ = Array{S}(undef, N_ext, N_ext)
    F_CS_η = Array{S}(undef, N_ext, N_ext)
    F_CS_ζ = Array{S}(undef, N_ext, N_ext)
    F_JCS_ξ = Array{S}(undef, N_ext, N_ext)
    F_JCS_η = Array{S}(undef, N_ext, N_ext)
    F_JCS_ζ = Array{S}(undef, N_ext, N_ext)
    Rb2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    Gc2p = Array{S}(undef, N_ext, N_ext, 3, 3)
    accX = Array{S}(undef, N_ext)
    accY = Array{S}(undef, N_ext)
    accZ = Array{S}(undef, N_ext)
    N_MfigM_pmA_x = Array{S}(undef, N_ext)
    N_MfigM_pmA_y = Array{S}(undef, N_ext)
    N_MfigM_pmA_z = Array{S}(undef, N_ext)
    temp_N_M_x = Array{S}(undef, N_ext)
    temp_N_M_y = Array{S}(undef, N_ext)
    temp_N_M_z = Array{S}(undef, N_ext)
    N_MfigM = Array{S}(undef, 3)
    N_MfigM[1] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[2] = Taylor1(identity(constant_term(zero_q_1)), order)
    N_MfigM[3] = Taylor1(identity(constant_term(zero_q_1)), order)
    local αs = deg2rad(α_p_sun * one_t)
    local δs = deg2rad(δ_p_sun * one_t)
    RotM = Array{S}(undef, 3, 3, 5)
    local RotM[:, :, ea] = c2t_jpl_de430(dsj2k)
    local RotM[:, :, su] = pole_rotation(αs, δs)
    ϕ_m = Taylor1(identity(constant_term(q[6N + 1])), order)
    θ_m = Taylor1(identity(constant_term(q[6N + 2])), order)
    ψ_m = Taylor1(identity(constant_term(q[6N + 3])), order)
    tmp4665 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp5684 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp4666 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp5685 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp4667 = Taylor1(constant_term(tmp4665) * constant_term(tmp4666), order)
    tmp4668 = Taylor1(cos(constant_term(θ_m)), order)
    tmp5686 = Taylor1(sin(constant_term(θ_m)), order)
    tmp4669 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp5687 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp4670 = Taylor1(constant_term(tmp4668) * constant_term(tmp4669), order)
    tmp4671 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp5688 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp4672 = Taylor1(constant_term(tmp4670) * constant_term(tmp4671), order)
    RotM[1, 1, mo] = Taylor1(constant_term(tmp4667) - constant_term(tmp4672), order)
    tmp4674 = Taylor1(cos(constant_term(θ_m)), order)
    tmp5689 = Taylor1(sin(constant_term(θ_m)), order)
    tmp4675 = Taylor1(-(constant_term(tmp4674)), order)
    tmp4676 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp5690 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp4677 = Taylor1(constant_term(tmp4675) * constant_term(tmp4676), order)
    tmp4678 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp5691 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp4679 = Taylor1(constant_term(tmp4677) * constant_term(tmp4678), order)
    tmp4680 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp5692 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp4681 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp5693 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp4682 = Taylor1(constant_term(tmp4680) * constant_term(tmp4681), order)
    RotM[2, 1, mo] = Taylor1(constant_term(tmp4679) - constant_term(tmp4682), order)
    tmp4684 = Taylor1(sin(constant_term(θ_m)), order)
    tmp5694 = Taylor1(cos(constant_term(θ_m)), order)
    tmp4685 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp5695 = Taylor1(cos(constant_term(ϕ_m)), order)
    RotM[3, 1, mo] = Taylor1(constant_term(tmp4684) * constant_term(tmp4685), order)
    tmp4687 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp5696 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp4688 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp5697 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp4689 = Taylor1(constant_term(tmp4687) * constant_term(tmp4688), order)
    tmp4690 = Taylor1(cos(constant_term(θ_m)), order)
    tmp5698 = Taylor1(sin(constant_term(θ_m)), order)
    tmp4691 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp5699 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp4692 = Taylor1(constant_term(tmp4690) * constant_term(tmp4691), order)
    tmp4693 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp5700 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp4694 = Taylor1(constant_term(tmp4692) * constant_term(tmp4693), order)
    RotM[1, 2, mo] = Taylor1(constant_term(tmp4689) + constant_term(tmp4694), order)
    tmp4696 = Taylor1(cos(constant_term(θ_m)), order)
    tmp5701 = Taylor1(sin(constant_term(θ_m)), order)
    tmp4697 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp5702 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp4698 = Taylor1(constant_term(tmp4696) * constant_term(tmp4697), order)
    tmp4699 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp5703 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp4700 = Taylor1(constant_term(tmp4698) * constant_term(tmp4699), order)
    tmp4701 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp5704 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp4702 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp5705 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp4703 = Taylor1(constant_term(tmp4701) * constant_term(tmp4702), order)
    RotM[2, 2, mo] = Taylor1(constant_term(tmp4700) - constant_term(tmp4703), order)
    tmp4705 = Taylor1(cos(constant_term(ϕ_m)), order)
    tmp5706 = Taylor1(sin(constant_term(ϕ_m)), order)
    tmp4706 = Taylor1(-(constant_term(tmp4705)), order)
    tmp4707 = Taylor1(sin(constant_term(θ_m)), order)
    tmp5707 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[3, 2, mo] = Taylor1(constant_term(tmp4706) * constant_term(tmp4707), order)
    tmp4709 = Taylor1(sin(constant_term(θ_m)), order)
    tmp5708 = Taylor1(cos(constant_term(θ_m)), order)
    tmp4710 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp5709 = Taylor1(cos(constant_term(ψ_m)), order)
    RotM[1, 3, mo] = Taylor1(constant_term(tmp4709) * constant_term(tmp4710), order)
    tmp4712 = Taylor1(cos(constant_term(ψ_m)), order)
    tmp5710 = Taylor1(sin(constant_term(ψ_m)), order)
    tmp4713 = Taylor1(sin(constant_term(θ_m)), order)
    tmp5711 = Taylor1(cos(constant_term(θ_m)), order)
    RotM[2, 3, mo] = Taylor1(constant_term(tmp4712) * constant_term(tmp4713), order)
    RotM[3, 3, mo] = Taylor1(cos(constant_term(θ_m)), order)
    tmp5712 = Taylor1(sin(constant_term(θ_m)), order)
    mantlef2coref = Array{S}(undef, 3, 3)
    ϕ_c = Taylor1(identity(constant_term(q[6N + 7])), order)
    tmp4716 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp5713 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp4717 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(tmp4716), order)
    tmp4718 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp5714 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp4719 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp4718), order)
    mantlef2coref[1, 1] = Taylor1(constant_term(tmp4717) + constant_term(tmp4719), order)
    tmp4721 = Taylor1(-(constant_term(RotM[1, 1, mo])), order)
    tmp4722 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp5715 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp4723 = Taylor1(constant_term(tmp4721) * constant_term(tmp4722), order)
    tmp4724 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp5716 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp4725 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(tmp4724), order)
    mantlef2coref[2, 1] = Taylor1(constant_term(tmp4723) + constant_term(tmp4725), order)
    mantlef2coref[3, 1] = Taylor1(identity(constant_term(RotM[1, 3, mo])), order)
    tmp4727 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp5717 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp4728 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(tmp4727), order)
    tmp4729 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp5718 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp4730 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp4729), order)
    mantlef2coref[1, 2] = Taylor1(constant_term(tmp4728) + constant_term(tmp4730), order)
    tmp4732 = Taylor1(-(constant_term(RotM[2, 1, mo])), order)
    tmp4733 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp5719 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp4734 = Taylor1(constant_term(tmp4732) * constant_term(tmp4733), order)
    tmp4735 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp5720 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp4736 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(tmp4735), order)
    mantlef2coref[2, 2] = Taylor1(constant_term(tmp4734) + constant_term(tmp4736), order)
    mantlef2coref[3, 2] = Taylor1(identity(constant_term(RotM[2, 3, mo])), order)
    tmp4738 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp5721 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp4739 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(tmp4738), order)
    tmp4740 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp5722 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp4741 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp4740), order)
    mantlef2coref[1, 3] = Taylor1(constant_term(tmp4739) + constant_term(tmp4741), order)
    tmp4743 = Taylor1(-(constant_term(RotM[3, 1, mo])), order)
    tmp4744 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp5723 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp4745 = Taylor1(constant_term(tmp4743) * constant_term(tmp4744), order)
    tmp4746 = Taylor1(cos(constant_term(ϕ_c)), order)
    tmp5724 = Taylor1(sin(constant_term(ϕ_c)), order)
    tmp4747 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(tmp4746), order)
    mantlef2coref[2, 3] = Taylor1(constant_term(tmp4745) + constant_term(tmp4747), order)
    mantlef2coref[3, 3] = Taylor1(identity(constant_term(RotM[3, 3, mo])), order)
    tmp4749 = Taylor1(constant_term(mantlef2coref[1, 1]) * constant_term(q[6N + 10]), order)
    tmp4750 = Taylor1(constant_term(mantlef2coref[1, 2]) * constant_term(q[6N + 11]), order)
    tmp4751 = Taylor1(constant_term(mantlef2coref[1, 3]) * constant_term(q[6N + 12]), order)
    tmp4752 = Taylor1(constant_term(tmp4750) + constant_term(tmp4751), order)
    ω_c_CE_1 = Taylor1(constant_term(tmp4749) + constant_term(tmp4752), order)
    tmp4754 = Taylor1(constant_term(mantlef2coref[2, 1]) * constant_term(q[6N + 10]), order)
    tmp4755 = Taylor1(constant_term(mantlef2coref[2, 2]) * constant_term(q[6N + 11]), order)
    tmp4756 = Taylor1(constant_term(mantlef2coref[2, 3]) * constant_term(q[6N + 12]), order)
    tmp4757 = Taylor1(constant_term(tmp4755) + constant_term(tmp4756), order)
    ω_c_CE_2 = Taylor1(constant_term(tmp4754) + constant_term(tmp4757), order)
    tmp4759 = Taylor1(constant_term(mantlef2coref[3, 1]) * constant_term(q[6N + 10]), order)
    tmp4760 = Taylor1(constant_term(mantlef2coref[3, 2]) * constant_term(q[6N + 11]), order)
    tmp4761 = Taylor1(constant_term(mantlef2coref[3, 3]) * constant_term(q[6N + 12]), order)
    tmp4762 = Taylor1(constant_term(tmp4760) + constant_term(tmp4761), order)
    ω_c_CE_3 = Taylor1(constant_term(tmp4759) + constant_term(tmp4762), order)
    local J2E_t = (J2E + J2EDOT * (dsj2k / yr)) * RE_au ^ 2
    local J2S_t = JSEM[su, 2] * one_t
    J2_t = Array{S}(undef, 5)
    J2_t[su] = Taylor1(identity(constant_term(J2S_t)), order)
    J2_t[ea] = Taylor1(identity(constant_term(J2E_t)), order)
    local N_MfigM_figE_factor = 7.5 * μ[ea] * J2E_t
    local μ_mo_div_μ_ea = μ[mo] / μ[ea]
    local tid_num_coeff = 1.5 * (1.0 + μ_mo_div_μ_ea)
    local q_ME_τ_0 = q_del_τ_0[3mo - 2:3mo] .- q_del_τ_0[3 * ea - 2:3 * ea]
    local q_ME_τ_1 = q_del_τ_1[3mo - 2:3mo] .- q_del_τ_1[3 * ea - 2:3 * ea]
    local q_ME_τ_2 = q_del_τ_2[3mo - 2:3mo] .- q_del_τ_2[3 * ea - 2:3 * ea]
    local q_SE_τ_0 = q_del_τ_0[3su - 2:3su] .- q_del_τ_0[3 * ea - 2:3 * ea]
    local q_SE_τ_1 = q_del_τ_1[3su - 2:3su] .- q_del_τ_1[3 * ea - 2:3 * ea]
    local q_SE_τ_2 = q_del_τ_2[3su - 2:3su] .- q_del_τ_2[3 * ea - 2:3 * ea]
    local R30 = RotM[:, :, ea]
    local R31 = Rz(-ω_E * τ_1) * RotM[:, :, ea]
    local R32 = Rz(-ω_E * τ_2) * RotM[:, :, ea]
    local r_star_M_0 = R30 * q_ME_τ_0
    local r_star_M_1 = R31 * q_ME_τ_1
    local r_star_M_2 = R32 * q_ME_τ_2
    local r_star_S_0 = R30 * q_SE_τ_0
    local r_star_S_1 = R31 * q_SE_τ_1
    local r_star_S_2 = R32 * q_SE_τ_2
    for j = 1:N
        newtonX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        newtonY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        newtonZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        newtonianNb_Potential[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        dq[3j - 2] = Taylor1(identity(constant_term(q[3 * (N + j) - 2])), order)
        dq[3j - 1] = Taylor1(identity(constant_term(q[3 * (N + j) - 1])), order)
        dq[3j] = Taylor1(identity(constant_term(q[3 * (N + j)])), order)
    end
    for j = 1:N_ext
        accX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        accY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        accZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
    end
    tmp4771 = Array{Taylor1{_S}}(undef, size(dq))
    tmp4771 .= Taylor1(zero(_S), order)
    tmp4773 = Array{Taylor1{_S}}(undef, size(dq))
    tmp4773 .= Taylor1(zero(_S), order)
    tmp4776 = Array{Taylor1{_S}}(undef, size(dq))
    tmp4776 .= Taylor1(zero(_S), order)
    tmp4778 = Array{Taylor1{_S}}(undef, size(dq))
    tmp4778 .= Taylor1(zero(_S), order)
    tmp4781 = Array{Taylor1{_S}}(undef, size(dq))
    tmp4781 .= Taylor1(zero(_S), order)
    tmp4783 = Array{Taylor1{_S}}(undef, size(dq))
    tmp4783 .= Taylor1(zero(_S), order)
    pn2x = Array{Taylor1{_S}}(undef, size(X))
    pn2x .= Taylor1(zero(_S), order)
    pn2y = Array{Taylor1{_S}}(undef, size(Y))
    pn2y .= Taylor1(zero(_S), order)
    pn2z = Array{Taylor1{_S}}(undef, size(Z))
    pn2z .= Taylor1(zero(_S), order)
    tmp4791 = Array{Taylor1{_S}}(undef, size(UU))
    tmp4791 .= Taylor1(zero(_S), order)
    tmp4794 = Array{Taylor1{_S}}(undef, size(X))
    tmp4794 .= Taylor1(zero(_S), order)
    tmp4796 = Array{Taylor1{_S}}(undef, size(Y))
    tmp4796 .= Taylor1(zero(_S), order)
    tmp4797 = Array{Taylor1{_S}}(undef, size(tmp4794))
    tmp4797 .= Taylor1(zero(_S), order)
    tmp4799 = Array{Taylor1{_S}}(undef, size(Z))
    tmp4799 .= Taylor1(zero(_S), order)
    tmp4807 = Array{Taylor1{_S}}(undef, size(pn2x))
    tmp4807 .= Taylor1(zero(_S), order)
    tmp4808 = Array{Taylor1{_S}}(undef, size(tmp4807))
    tmp4808 .= Taylor1(zero(_S), order)
    tmp4819 = Array{Taylor1{_S}}(undef, size(X))
    tmp4819 .= Taylor1(zero(_S), order)
    temp_001 = Array{Taylor1{_S}}(undef, size(tmp4819))
    temp_001 .= Taylor1(zero(_S), order)
    tmp4821 = Array{Taylor1{_S}}(undef, size(Y))
    tmp4821 .= Taylor1(zero(_S), order)
    temp_002 = Array{Taylor1{_S}}(undef, size(tmp4821))
    temp_002 .= Taylor1(zero(_S), order)
    tmp4823 = Array{Taylor1{_S}}(undef, size(Z))
    tmp4823 .= Taylor1(zero(_S), order)
    temp_003 = Array{Taylor1{_S}}(undef, size(tmp4823))
    temp_003 .= Taylor1(zero(_S), order)
    temp_004 = Array{Taylor1{_S}}(undef, size(newtonian1b_Potential))
    temp_004 .= Taylor1(zero(_S), order)
    tmp4827 = Array{Taylor1{_S}}(undef, size(dq))
    tmp4827 .= Taylor1(zero(_S), order)
    tmp4829 = Array{Taylor1{_S}}(undef, size(dq))
    tmp4829 .= Taylor1(zero(_S), order)
    tmp4830 = Array{Taylor1{_S}}(undef, size(tmp4827))
    tmp4830 .= Taylor1(zero(_S), order)
    tmp4832 = Array{Taylor1{_S}}(undef, size(dq))
    tmp4832 .= Taylor1(zero(_S), order)
    #= REPL[19]:380 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    X[i, j] = Taylor1(constant_term(q[3i - 2]) - constant_term(q[3j - 2]), order)
                    Y[i, j] = Taylor1(constant_term(q[3i - 1]) - constant_term(q[3j - 1]), order)
                    Z[i, j] = Taylor1(constant_term(q[3i]) - constant_term(q[3j]), order)
                    U[i, j] = Taylor1(constant_term(dq[3i - 2]) - constant_term(dq[3j - 2]), order)
                    V[i, j] = Taylor1(constant_term(dq[3i - 1]) - constant_term(dq[3j - 1]), order)
                    W[i, j] = Taylor1(constant_term(dq[3i]) - constant_term(dq[3j]), order)
                    tmp4771[3j - 2] = Taylor1(constant_term(4) * constant_term(dq[3j - 2]), order)
                    tmp4773[3i - 2] = Taylor1(constant_term(3) * constant_term(dq[3i - 2]), order)
                    _4U_m_3X[i, j] = Taylor1(constant_term(tmp4771[3j - 2]) - constant_term(tmp4773[3i - 2]), order)
                    tmp4776[3j - 1] = Taylor1(constant_term(4) * constant_term(dq[3j - 1]), order)
                    tmp4778[3i - 1] = Taylor1(constant_term(3) * constant_term(dq[3i - 1]), order)
                    _4V_m_3Y[i, j] = Taylor1(constant_term(tmp4776[3j - 1]) - constant_term(tmp4778[3i - 1]), order)
                    tmp4781[3j] = Taylor1(constant_term(4) * constant_term(dq[3j]), order)
                    tmp4783[3i] = Taylor1(constant_term(3) * constant_term(dq[3i]), order)
                    _4W_m_3Z[i, j] = Taylor1(constant_term(tmp4781[3j]) - constant_term(tmp4783[3i]), order)
                    pn2x[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(_4U_m_3X[i, j]), order)
                    pn2y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(_4V_m_3Y[i, j]), order)
                    pn2z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(_4W_m_3Z[i, j]), order)
                    UU[i, j] = Taylor1(constant_term(dq[3i - 2]) * constant_term(dq[3j - 2]), order)
                    VV[i, j] = Taylor1(constant_term(dq[3i - 1]) * constant_term(dq[3j - 1]), order)
                    WW[i, j] = Taylor1(constant_term(dq[3i]) * constant_term(dq[3j]), order)
                    tmp4791[i, j] = Taylor1(constant_term(UU[i, j]) + constant_term(VV[i, j]), order)
                    vi_dot_vj[i, j] = Taylor1(constant_term(tmp4791[i, j]) + constant_term(WW[i, j]), order)
                    tmp4794[i, j] = Taylor1(constant_term(X[i, j]) ^ float(constant_term(2)), order)
                    tmp4796[i, j] = Taylor1(constant_term(Y[i, j]) ^ float(constant_term(2)), order)
                    tmp4797[i, j] = Taylor1(constant_term(tmp4794[i, j]) + constant_term(tmp4796[i, j]), order)
                    tmp4799[i, j] = Taylor1(constant_term(Z[i, j]) ^ float(constant_term(2)), order)
                    r_p2[i, j] = Taylor1(constant_term(tmp4797[i, j]) + constant_term(tmp4799[i, j]), order)
                    r_p1d2[i, j] = Taylor1(sqrt(constant_term(r_p2[i, j])), order)
                    r_p3d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(1.5)), order)
                    r_p7d2[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(3.5)), order)
                    newtonianCoeff[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p3d2[i, j]), order)
                    tmp4807[i, j] = Taylor1(constant_term(pn2x[i, j]) + constant_term(pn2y[i, j]), order)
                    tmp4808[i, j] = Taylor1(constant_term(tmp4807[i, j]) + constant_term(pn2z[i, j]), order)
                    pn2[i, j] = Taylor1(constant_term(newtonianCoeff[i, j]) * constant_term(tmp4808[i, j]), order)
                    newton_acc_X[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newton_acc_Y[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newton_acc_Z[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    newtonian1b_Potential[i, j] = Taylor1(constant_term(μ[i]) / constant_term(r_p1d2[i, j]), order)
                    pn3[i, j] = Taylor1(constant_term(3.5) * constant_term(newtonian1b_Potential[i, j]), order)
                    U_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(U[i, j]), order)
                    V_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(V[i, j]), order)
                    W_t_pn2[i, j] = Taylor1(constant_term(pn2[i, j]) * constant_term(W[i, j]), order)
                    tmp4819[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_001[i, j] = Taylor1(constant_term(newtonX[j]) + constant_term(tmp4819[i, j]), order)
                    newtonX[j] = Taylor1(identity(constant_term(temp_001[i, j])), order)
                    tmp4821[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_002[i, j] = Taylor1(constant_term(newtonY[j]) + constant_term(tmp4821[i, j]), order)
                    newtonY[j] = Taylor1(identity(constant_term(temp_002[i, j])), order)
                    tmp4823[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(newtonianCoeff[i, j]), order)
                    temp_003[i, j] = Taylor1(constant_term(newtonZ[j]) + constant_term(tmp4823[i, j]), order)
                    newtonZ[j] = Taylor1(identity(constant_term(temp_003[i, j])), order)
                    temp_004[i, j] = Taylor1(constant_term(newtonianNb_Potential[j]) + constant_term(newtonian1b_Potential[i, j]), order)
                    newtonianNb_Potential[j] = Taylor1(identity(constant_term(temp_004[i, j])), order)
                end
            end
            tmp4827[3j - 2] = Taylor1(constant_term(dq[3j - 2]) ^ float(constant_term(2)), order)
            tmp4829[3j - 1] = Taylor1(constant_term(dq[3j - 1]) ^ float(constant_term(2)), order)
            tmp4830[3j - 2] = Taylor1(constant_term(tmp4827[3j - 2]) + constant_term(tmp4829[3j - 1]), order)
            tmp4832[3j] = Taylor1(constant_term(dq[3j]) ^ float(constant_term(2)), order)
            v2[j] = Taylor1(constant_term(tmp4830[3j - 2]) + constant_term(tmp4832[3j]), order)
        end
    tmp4834 = Taylor1(constant_term(I_M_t[1, 1]) + constant_term(I_M_t[2, 2]), order)
    tmp4836 = Taylor1(constant_term(tmp4834) / constant_term(2), order)
    tmp4837 = Taylor1(constant_term(I_M_t[3, 3]) - constant_term(tmp4836), order)
    J2M_t = Taylor1(constant_term(tmp4837) / constant_term(μ[mo]), order)
    tmp4839 = Taylor1(constant_term(I_M_t[2, 2]) - constant_term(I_M_t[1, 1]), order)
    tmp4840 = Taylor1(constant_term(tmp4839) / constant_term(μ[mo]), order)
    C22M_t = Taylor1(constant_term(tmp4840) / constant_term(4), order)
    tmp4843 = Taylor1(-(constant_term(I_M_t[1, 3])), order)
    C21M_t = Taylor1(constant_term(tmp4843) / constant_term(μ[mo]), order)
    tmp4845 = Taylor1(-(constant_term(I_M_t[3, 2])), order)
    S21M_t = Taylor1(constant_term(tmp4845) / constant_term(μ[mo]), order)
    tmp4847 = Taylor1(-(constant_term(I_M_t[2, 1])), order)
    tmp4848 = Taylor1(constant_term(tmp4847) / constant_term(μ[mo]), order)
    S22M_t = Taylor1(constant_term(tmp4848) / constant_term(2), order)
    J2_t[mo] = Taylor1(identity(constant_term(J2M_t)), order)
    tmp4860 = Array{Taylor1{_S}}(undef, size(X_bf_1))
    tmp4860 .= Taylor1(zero(_S), order)
    tmp4862 = Array{Taylor1{_S}}(undef, size(Y_bf_1))
    tmp4862 .= Taylor1(zero(_S), order)
    tmp4864 = Array{Taylor1{_S}}(undef, size(Z_bf_1))
    tmp4864 .= Taylor1(zero(_S), order)
    tmp4868 = Array{Taylor1{_S}}(undef, size(X_bf))
    tmp4868 .= Taylor1(zero(_S), order)
    tmp4870 = Array{Taylor1{_S}}(undef, size(Y_bf))
    tmp4870 .= Taylor1(zero(_S), order)
    tmp4871 = Array{Taylor1{_S}}(undef, size(tmp4868))
    tmp4871 .= Taylor1(zero(_S), order)
    tmp4876 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp4876 .= Taylor1(zero(_S), order)
    tmp4877 = Array{Taylor1{_S}}(undef, size(tmp4876))
    tmp4877 .= Taylor1(zero(_S), order)
    tmp4878 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp4878 .= Taylor1(zero(_S), order)
    tmp4880 = Array{Taylor1{_S}}(undef, size(dP_n))
    tmp4880 .= Taylor1(zero(_S), order)
    tmp4881 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp4881 .= Taylor1(zero(_S), order)
    tmp4886 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp4886 .= Taylor1(zero(_S), order)
    tmp4887 = Array{Taylor1{_S}}(undef, size(tmp4886))
    tmp4887 .= Taylor1(zero(_S), order)
    tmp4889 = Array{Taylor1{_S}}(undef, size(dP_n))
    tmp4889 .= Taylor1(zero(_S), order)
    tmp4890 = Array{Taylor1{_S}}(undef, size(tmp4889))
    tmp4890 .= Taylor1(zero(_S), order)
    tmp4891 = Array{Taylor1{_S}}(undef, size(tmp4890))
    tmp4891 .= Taylor1(zero(_S), order)
    tmp4893 = Array{Taylor1{_S}}(undef, size(P_n))
    tmp4893 .= Taylor1(zero(_S), order)
    tmp4894 = Array{Taylor1{_S}}(undef, size(tmp4893))
    tmp4894 .= Taylor1(zero(_S), order)
    tmp4895 = Array{Taylor1{_S}}(undef, size(tmp4894))
    tmp4895 .= Taylor1(zero(_S), order)
    tmp4897 = Array{Taylor1{_S}}(undef, size(dP_n))
    tmp4897 .= Taylor1(zero(_S), order)
    tmp4898 = Array{Taylor1{_S}}(undef, size(tmp4897))
    tmp4898 .= Taylor1(zero(_S), order)
    tmp4899 = Array{Taylor1{_S}}(undef, size(tmp4898))
    tmp4899 .= Taylor1(zero(_S), order)
    tmp4900 = Array{Taylor1{_S}}(undef, size(tmp4899))
    tmp4900 .= Taylor1(zero(_S), order)
    tmp4903 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp4903 .= Taylor1(zero(_S), order)
    tmp4904 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp4904 .= Taylor1(zero(_S), order)
    tmp4906 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp4906 .= Taylor1(zero(_S), order)
    tmp4907 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp4907 .= Taylor1(zero(_S), order)
    tmp4909 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp4909 .= Taylor1(zero(_S), order)
    tmp4912 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp4912 .= Taylor1(zero(_S), order)
    tmp4914 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp4914 .= Taylor1(zero(_S), order)
    tmp4916 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp4916 .= Taylor1(zero(_S), order)
    tmp4917 = Array{Taylor1{_S}}(undef, size(tmp4916))
    tmp4917 .= Taylor1(zero(_S), order)
    tmp4918 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp4918 .= Taylor1(zero(_S), order)
    tmp4921 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp4921 .= Taylor1(zero(_S), order)
    tmp4922 = Array{Taylor1{_S}}(undef, size(tmp4921))
    tmp4922 .= Taylor1(zero(_S), order)
    tmp4923 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp4923 .= Taylor1(zero(_S), order)
    tmp4925 = Array{Taylor1{_S}}(undef, size(P_nm))
    tmp4925 .= Taylor1(zero(_S), order)
    tmp4926 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp4926 .= Taylor1(zero(_S), order)
    tmp4927 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp4927 .= Taylor1(zero(_S), order)
    tmp4928 = Array{Taylor1{_S}}(undef, size(tmp4926))
    tmp4928 .= Taylor1(zero(_S), order)
    tmp4929 = Array{Taylor1{_S}}(undef, size(tmp4925))
    tmp4929 .= Taylor1(zero(_S), order)
    tmp4930 = Array{Taylor1{_S}}(undef, size(P_nm))
    tmp4930 .= Taylor1(zero(_S), order)
    tmp4931 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp4931 .= Taylor1(zero(_S), order)
    tmp4932 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp4932 .= Taylor1(zero(_S), order)
    tmp4933 = Array{Taylor1{_S}}(undef, size(tmp4931))
    tmp4933 .= Taylor1(zero(_S), order)
    tmp4934 = Array{Taylor1{_S}}(undef, size(tmp4930))
    tmp4934 .= Taylor1(zero(_S), order)
    tmp4935 = Array{Taylor1{_S}}(undef, size(tmp4929))
    tmp4935 .= Taylor1(zero(_S), order)
    tmp4937 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp4937 .= Taylor1(zero(_S), order)
    tmp4938 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp4938 .= Taylor1(zero(_S), order)
    tmp4939 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp4939 .= Taylor1(zero(_S), order)
    tmp4940 = Array{Taylor1{_S}}(undef, size(tmp4938))
    tmp4940 .= Taylor1(zero(_S), order)
    tmp4941 = Array{Taylor1{_S}}(undef, size(tmp4937))
    tmp4941 .= Taylor1(zero(_S), order)
    tmp4942 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp4942 .= Taylor1(zero(_S), order)
    tmp4943 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp4943 .= Taylor1(zero(_S), order)
    tmp4944 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp4944 .= Taylor1(zero(_S), order)
    tmp4945 = Array{Taylor1{_S}}(undef, size(tmp4943))
    tmp4945 .= Taylor1(zero(_S), order)
    tmp4946 = Array{Taylor1{_S}}(undef, size(tmp4942))
    tmp4946 .= Taylor1(zero(_S), order)
    tmp4947 = Array{Taylor1{_S}}(undef, size(tmp4941))
    tmp4947 .= Taylor1(zero(_S), order)
    tmp4949 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp4949 .= Taylor1(zero(_S), order)
    tmp4950 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp4950 .= Taylor1(zero(_S), order)
    tmp4951 = Array{Taylor1{_S}}(undef, size(tmp4949))
    tmp4951 .= Taylor1(zero(_S), order)
    tmp4952 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    tmp4952 .= Taylor1(zero(_S), order)
    tmp4953 = Array{Taylor1{_S}}(undef, size(cos_mλ))
    tmp4953 .= Taylor1(zero(_S), order)
    tmp4954 = Array{Taylor1{_S}}(undef, size(sin_mλ))
    tmp4954 .= Taylor1(zero(_S), order)
    tmp4955 = Array{Taylor1{_S}}(undef, size(tmp4953))
    tmp4955 .= Taylor1(zero(_S), order)
    tmp4956 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    tmp4956 .= Taylor1(zero(_S), order)
    tmp4957 = Array{Taylor1{_S}}(undef, size(tmp4952))
    tmp4957 .= Taylor1(zero(_S), order)
    tmp4963 = Array{Taylor1{_S}}(undef, size(P_nm))
    tmp4963 .= Taylor1(zero(_S), order)
    tmp4964 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    tmp4964 .= Taylor1(zero(_S), order)
    tmp4965 = Array{Taylor1{_S}}(undef, size(tmp4963))
    tmp4965 .= Taylor1(zero(_S), order)
    tmp4966 = Array{Taylor1{_S}}(undef, size(tmp4965))
    tmp4966 .= Taylor1(zero(_S), order)
    tmp4968 = Array{Taylor1{_S}}(undef, size(secϕ_P_nm))
    tmp4968 .= Taylor1(zero(_S), order)
    tmp4969 = Array{Taylor1{_S}}(undef, size(Snm_cosmλ))
    tmp4969 .= Taylor1(zero(_S), order)
    tmp4970 = Array{Taylor1{_S}}(undef, size(tmp4968))
    tmp4970 .= Taylor1(zero(_S), order)
    tmp4971 = Array{Taylor1{_S}}(undef, size(tmp4970))
    tmp4971 .= Taylor1(zero(_S), order)
    tmp4973 = Array{Taylor1{_S}}(undef, size(Cnm_cosmλ))
    tmp4973 .= Taylor1(zero(_S), order)
    tmp4974 = Array{Taylor1{_S}}(undef, size(cosϕ_dP_nm))
    tmp4974 .= Taylor1(zero(_S), order)
    tmp4975 = Array{Taylor1{_S}}(undef, size(tmp4974))
    tmp4975 .= Taylor1(zero(_S), order)
    tmp4977 = Array{Taylor1{_S}}(undef, size(F_J_ξ))
    tmp4977 .= Taylor1(zero(_S), order)
    tmp4978 = Array{Taylor1{_S}}(undef, size(F_CS_ξ))
    tmp4978 .= Taylor1(zero(_S), order)
    tmp4981 = Array{Taylor1{_S}}(undef, size(F_J_ζ))
    tmp4981 .= Taylor1(zero(_S), order)
    tmp4982 = Array{Taylor1{_S}}(undef, size(F_CS_ζ))
    tmp4982 .= Taylor1(zero(_S), order)
    tmp4988 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp4988 .= Taylor1(zero(_S), order)
    tmp4991 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp4991 .= Taylor1(zero(_S), order)
    tmp4993 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp4993 .= Taylor1(zero(_S), order)
    tmp4994 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp4994 .= Taylor1(zero(_S), order)
    tmp4995 = Array{Taylor1{_S}}(undef, size(tmp4993))
    tmp4995 .= Taylor1(zero(_S), order)
    tmp4996 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp4996 .= Taylor1(zero(_S), order)
    tmp4998 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp4998 .= Taylor1(zero(_S), order)
    tmp4999 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp4999 .= Taylor1(zero(_S), order)
    tmp5000 = Array{Taylor1{_S}}(undef, size(tmp4998))
    tmp5000 .= Taylor1(zero(_S), order)
    tmp5001 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5001 .= Taylor1(zero(_S), order)
    tmp5003 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5003 .= Taylor1(zero(_S), order)
    tmp5004 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5004 .= Taylor1(zero(_S), order)
    tmp5005 = Array{Taylor1{_S}}(undef, size(tmp5003))
    tmp5005 .= Taylor1(zero(_S), order)
    tmp5006 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5006 .= Taylor1(zero(_S), order)
    tmp5008 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5008 .= Taylor1(zero(_S), order)
    tmp5009 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5009 .= Taylor1(zero(_S), order)
    tmp5010 = Array{Taylor1{_S}}(undef, size(tmp5008))
    tmp5010 .= Taylor1(zero(_S), order)
    tmp5011 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5011 .= Taylor1(zero(_S), order)
    tmp5013 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5013 .= Taylor1(zero(_S), order)
    tmp5014 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5014 .= Taylor1(zero(_S), order)
    tmp5015 = Array{Taylor1{_S}}(undef, size(tmp5013))
    tmp5015 .= Taylor1(zero(_S), order)
    tmp5016 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5016 .= Taylor1(zero(_S), order)
    tmp5018 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5018 .= Taylor1(zero(_S), order)
    tmp5019 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5019 .= Taylor1(zero(_S), order)
    tmp5020 = Array{Taylor1{_S}}(undef, size(tmp5018))
    tmp5020 .= Taylor1(zero(_S), order)
    tmp5021 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5021 .= Taylor1(zero(_S), order)
    tmp5023 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5023 .= Taylor1(zero(_S), order)
    tmp5024 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5024 .= Taylor1(zero(_S), order)
    tmp5025 = Array{Taylor1{_S}}(undef, size(tmp5023))
    tmp5025 .= Taylor1(zero(_S), order)
    tmp5026 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5026 .= Taylor1(zero(_S), order)
    tmp5028 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5028 .= Taylor1(zero(_S), order)
    tmp5029 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5029 .= Taylor1(zero(_S), order)
    tmp5030 = Array{Taylor1{_S}}(undef, size(tmp5028))
    tmp5030 .= Taylor1(zero(_S), order)
    tmp5031 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5031 .= Taylor1(zero(_S), order)
    tmp5033 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5033 .= Taylor1(zero(_S), order)
    tmp5034 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5034 .= Taylor1(zero(_S), order)
    tmp5035 = Array{Taylor1{_S}}(undef, size(tmp5033))
    tmp5035 .= Taylor1(zero(_S), order)
    tmp5036 = Array{Taylor1{_S}}(undef, size(Rb2p))
    tmp5036 .= Taylor1(zero(_S), order)
    tmp5038 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp5038 .= Taylor1(zero(_S), order)
    tmp5039 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp5039 .= Taylor1(zero(_S), order)
    tmp5040 = Array{Taylor1{_S}}(undef, size(tmp5038))
    tmp5040 .= Taylor1(zero(_S), order)
    tmp5041 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp5041 .= Taylor1(zero(_S), order)
    tmp5043 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp5043 .= Taylor1(zero(_S), order)
    tmp5044 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp5044 .= Taylor1(zero(_S), order)
    tmp5045 = Array{Taylor1{_S}}(undef, size(tmp5043))
    tmp5045 .= Taylor1(zero(_S), order)
    tmp5046 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp5046 .= Taylor1(zero(_S), order)
    tmp5048 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp5048 .= Taylor1(zero(_S), order)
    tmp5049 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp5049 .= Taylor1(zero(_S), order)
    tmp5050 = Array{Taylor1{_S}}(undef, size(tmp5048))
    tmp5050 .= Taylor1(zero(_S), order)
    tmp5051 = Array{Taylor1{_S}}(undef, size(Gc2p))
    tmp5051 .= Taylor1(zero(_S), order)
    #= REPL[19]:474 =# Threads.@threads for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        X_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[1, 1, j]), order)
                        X_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[1, 2, j]), order)
                        X_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[1, 3, j]), order)
                        Y_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[2, 1, j]), order)
                        Y_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[2, 2, j]), order)
                        Y_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[2, 3, j]), order)
                        Z_bf_1[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(RotM[3, 1, j]), order)
                        Z_bf_2[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(RotM[3, 2, j]), order)
                        Z_bf_3[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(RotM[3, 3, j]), order)
                        tmp4860[i, j] = Taylor1(constant_term(X_bf_1[i, j]) + constant_term(X_bf_2[i, j]), order)
                        X_bf[i, j] = Taylor1(constant_term(tmp4860[i, j]) + constant_term(X_bf_3[i, j]), order)
                        tmp4862[i, j] = Taylor1(constant_term(Y_bf_1[i, j]) + constant_term(Y_bf_2[i, j]), order)
                        Y_bf[i, j] = Taylor1(constant_term(tmp4862[i, j]) + constant_term(Y_bf_3[i, j]), order)
                        tmp4864[i, j] = Taylor1(constant_term(Z_bf_1[i, j]) + constant_term(Z_bf_2[i, j]), order)
                        Z_bf[i, j] = Taylor1(constant_term(tmp4864[i, j]) + constant_term(Z_bf_3[i, j]), order)
                        sin_ϕ[i, j] = Taylor1(constant_term(Z_bf[i, j]) / constant_term(r_p1d2[i, j]), order)
                        tmp4868[i, j] = Taylor1(constant_term(X_bf[i, j]) ^ float(constant_term(2)), order)
                        tmp4870[i, j] = Taylor1(constant_term(Y_bf[i, j]) ^ float(constant_term(2)), order)
                        tmp4871[i, j] = Taylor1(constant_term(tmp4868[i, j]) + constant_term(tmp4870[i, j]), order)
                        r_xy[i, j] = Taylor1(sqrt(constant_term(tmp4871[i, j])), order)
                        cos_ϕ[i, j] = Taylor1(constant_term(r_xy[i, j]) / constant_term(r_p1d2[i, j]), order)
                        sin_λ[i, j] = Taylor1(constant_term(Y_bf[i, j]) / constant_term(r_xy[i, j]), order)
                        cos_λ[i, j] = Taylor1(constant_term(X_bf[i, j]) / constant_term(r_xy[i, j]), order)
                        P_n[i, j, 1] = Taylor1(identity(constant_term(one_t)), order)
                        P_n[i, j, 2] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                        dP_n[i, j, 1] = Taylor1(identity(constant_term(zero_q_1)), order)
                        dP_n[i, j, 2] = Taylor1(identity(constant_term(one_t)), order)
                        for n = 2:n1SEM[j]
                            tmp4876[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                            tmp4877[i, j, n] = Taylor1(constant_term(tmp4876[i, j, n]) * constant_term(fact1_jsem[n]), order)
                            tmp4878[i, j, n - 1] = Taylor1(constant_term(P_n[i, j, n - 1]) * constant_term(fact2_jsem[n]), order)
                            P_n[i, j, n + 1] = Taylor1(constant_term(tmp4877[i, j, n]) - constant_term(tmp4878[i, j, n - 1]), order)
                            tmp4880[i, j, n] = Taylor1(constant_term(dP_n[i, j, n]) * constant_term(sin_ϕ[i, j]), order)
                            tmp4881[i, j, n] = Taylor1(constant_term(P_n[i, j, n]) * constant_term(fact3_jsem[n]), order)
                            dP_n[i, j, n + 1] = Taylor1(constant_term(tmp4880[i, j, n]) + constant_term(tmp4881[i, j, n]), order)
                            temp_rn[i, j, n] = Taylor1(constant_term(r_p1d2[i, j]) ^ float(constant_term(fact5_jsem[n])), order)
                        end
                        r_p4[i, j] = Taylor1(constant_term(r_p2[i, j]) ^ float(constant_term(2)), order)
                        tmp4886[i, j, 3] = Taylor1(constant_term(P_n[i, j, 3]) * constant_term(fact4_jsem[2]), order)
                        tmp4887[i, j, 3] = Taylor1(constant_term(tmp4886[i, j, 3]) * constant_term(J2_t[j]), order)
                        F_J_ξ[i, j] = Taylor1(constant_term(tmp4887[i, j, 3]) / constant_term(r_p4[i, j]), order)
                        tmp4889[i, j, 3] = Taylor1(-(constant_term(dP_n[i, j, 3])), order)
                        tmp4890[i, j, 3] = Taylor1(constant_term(tmp4889[i, j, 3]) * constant_term(cos_ϕ[i, j]), order)
                        tmp4891[i, j, 3] = Taylor1(constant_term(tmp4890[i, j, 3]) * constant_term(J2_t[j]), order)
                        F_J_ζ[i, j] = Taylor1(constant_term(tmp4891[i, j, 3]) / constant_term(r_p4[i, j]), order)
                        F_J_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        F_J_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                        for n = 3:n1SEM[j]
                            tmp4893[i, j, n + 1] = Taylor1(constant_term(P_n[i, j, n + 1]) * constant_term(fact4_jsem[n]), order)
                            tmp4894[i, j, n + 1] = Taylor1(constant_term(tmp4893[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                            tmp4895[i, j, n + 1] = Taylor1(constant_term(tmp4894[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                            temp_fjξ[i, j, n] = Taylor1(constant_term(tmp4895[i, j, n + 1]) + constant_term(F_J_ξ_36[i, j]), order)
                            tmp4897[i, j, n + 1] = Taylor1(-(constant_term(dP_n[i, j, n + 1])), order)
                            tmp4898[i, j, n + 1] = Taylor1(constant_term(tmp4897[i, j, n + 1]) * constant_term(cos_ϕ[i, j]), order)
                            tmp4899[i, j, n + 1] = Taylor1(constant_term(tmp4898[i, j, n + 1]) * constant_term(JSEM[j, n]), order)
                            tmp4900[i, j, n + 1] = Taylor1(constant_term(tmp4899[i, j, n + 1]) / constant_term(temp_rn[i, j, n]), order)
                            temp_fjζ[i, j, n] = Taylor1(constant_term(tmp4900[i, j, n + 1]) + constant_term(F_J_ζ_36[i, j]), order)
                            F_J_ξ_36[i, j] = Taylor1(identity(constant_term(temp_fjξ[i, j, n])), order)
                            F_J_ζ_36[i, j] = Taylor1(identity(constant_term(temp_fjζ[i, j, n])), order)
                        end
                        if j == mo
                            for m = 1:n1SEM[mo]
                                if m == 1
                                    sin_mλ[i, j, 1] = Taylor1(identity(constant_term(sin_λ[i, j])), order)
                                    cos_mλ[i, j, 1] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                                    secϕ_P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(one_t)), order)
                                    P_nm[i, j, 1, 1] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                                    cosϕ_dP_nm[i, j, 1, 1] = Taylor1(constant_term(sin_ϕ[i, j]) * constant_term(lnm3[1]), order)
                                else
                                    tmp4903[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                    tmp4904[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                    sin_mλ[i, j, m] = Taylor1(constant_term(tmp4903[i, j, m - 1]) + constant_term(tmp4904[i, j, m - 1]), order)
                                    tmp4906[i, j, m - 1] = Taylor1(constant_term(cos_mλ[i, j, m - 1]) * constant_term(cos_mλ[i, j, 1]), order)
                                    tmp4907[i, j, m - 1] = Taylor1(constant_term(sin_mλ[i, j, m - 1]) * constant_term(sin_mλ[i, j, 1]), order)
                                    cos_mλ[i, j, m] = Taylor1(constant_term(tmp4906[i, j, m - 1]) - constant_term(tmp4907[i, j, m - 1]), order)
                                    tmp4909[i, j, m - 1, m - 1] = Taylor1(constant_term(secϕ_P_nm[i, j, m - 1, m - 1]) * constant_term(cos_ϕ[i, j]), order)
                                    secϕ_P_nm[i, j, m, m] = Taylor1(constant_term(tmp4909[i, j, m - 1, m - 1]) * constant_term(lnm5[m]), order)
                                    P_nm[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(cos_ϕ[i, j]), order)
                                    tmp4912[i, j, m, m] = Taylor1(constant_term(secϕ_P_nm[i, j, m, m]) * constant_term(sin_ϕ[i, j]), order)
                                    cosϕ_dP_nm[i, j, m, m] = Taylor1(constant_term(tmp4912[i, j, m, m]) * constant_term(lnm3[m]), order)
                                end
                                for n = m + 1:n1SEM[mo]
                                    if n == m + 1
                                        tmp4914[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                        secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp4914[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                    else
                                        tmp4916[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(sin_ϕ[i, j]), order)
                                        tmp4917[i, j, n - 1, m] = Taylor1(constant_term(tmp4916[i, j, n - 1, m]) * constant_term(lnm1[n, m]), order)
                                        tmp4918[i, j, n - 2, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 2, m]) * constant_term(lnm2[n, m]), order)
                                        secϕ_P_nm[i, j, n, m] = Taylor1(constant_term(tmp4917[i, j, n - 1, m]) + constant_term(tmp4918[i, j, n - 2, m]), order)
                                    end
                                    P_nm[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(cos_ϕ[i, j]), order)
                                    tmp4921[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(sin_ϕ[i, j]), order)
                                    tmp4922[i, j, n, m] = Taylor1(constant_term(tmp4921[i, j, n, m]) * constant_term(lnm3[n]), order)
                                    tmp4923[i, j, n - 1, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n - 1, m]) * constant_term(lnm4[n, m]), order)
                                    cosϕ_dP_nm[i, j, n, m] = Taylor1(constant_term(tmp4922[i, j, n, m]) + constant_term(tmp4923[i, j, n - 1, m]), order)
                                end
                            end
                            tmp4925[i, j, 2, 1] = Taylor1(constant_term(P_nm[i, j, 2, 1]) * constant_term(lnm6[2]), order)
                            tmp4926[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp4927[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp4928[i, j, 1] = Taylor1(constant_term(tmp4926[i, j, 1]) + constant_term(tmp4927[i, j, 1]), order)
                            tmp4929[i, j, 2, 1] = Taylor1(constant_term(tmp4925[i, j, 2, 1]) * constant_term(tmp4928[i, j, 1]), order)
                            tmp4930[i, j, 2, 2] = Taylor1(constant_term(P_nm[i, j, 2, 2]) * constant_term(lnm6[2]), order)
                            tmp4931[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp4932[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp4933[i, j, 2] = Taylor1(constant_term(tmp4931[i, j, 2]) + constant_term(tmp4932[i, j, 2]), order)
                            tmp4934[i, j, 2, 2] = Taylor1(constant_term(tmp4930[i, j, 2, 2]) * constant_term(tmp4933[i, j, 2]), order)
                            tmp4935[i, j, 2, 1] = Taylor1(constant_term(tmp4929[i, j, 2, 1]) + constant_term(tmp4934[i, j, 2, 2]), order)
                            F_CS_ξ[i, j] = Taylor1(constant_term(tmp4935[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            tmp4937[i, j, 2, 1] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 1]) * constant_term(lnm7[1]), order)
                            tmp4938[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp4939[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp4940[i, j, 1] = Taylor1(constant_term(tmp4938[i, j, 1]) - constant_term(tmp4939[i, j, 1]), order)
                            tmp4941[i, j, 2, 1] = Taylor1(constant_term(tmp4937[i, j, 2, 1]) * constant_term(tmp4940[i, j, 1]), order)
                            tmp4942[i, j, 2, 2] = Taylor1(constant_term(secϕ_P_nm[i, j, 2, 2]) * constant_term(lnm7[2]), order)
                            tmp4943[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp4944[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp4945[i, j, 2] = Taylor1(constant_term(tmp4943[i, j, 2]) - constant_term(tmp4944[i, j, 2]), order)
                            tmp4946[i, j, 2, 2] = Taylor1(constant_term(tmp4942[i, j, 2, 2]) * constant_term(tmp4945[i, j, 2]), order)
                            tmp4947[i, j, 2, 1] = Taylor1(constant_term(tmp4941[i, j, 2, 1]) + constant_term(tmp4946[i, j, 2, 2]), order)
                            F_CS_η[i, j] = Taylor1(constant_term(tmp4947[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            tmp4949[i, j, 1] = Taylor1(constant_term(C21M_t) * constant_term(cos_mλ[i, j, 1]), order)
                            tmp4950[i, j, 1] = Taylor1(constant_term(S21M_t) * constant_term(sin_mλ[i, j, 1]), order)
                            tmp4951[i, j, 1] = Taylor1(constant_term(tmp4949[i, j, 1]) + constant_term(tmp4950[i, j, 1]), order)
                            tmp4952[i, j, 2, 1] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 1]) * constant_term(tmp4951[i, j, 1]), order)
                            tmp4953[i, j, 2] = Taylor1(constant_term(C22M_t) * constant_term(cos_mλ[i, j, 2]), order)
                            tmp4954[i, j, 2] = Taylor1(constant_term(S22M_t) * constant_term(sin_mλ[i, j, 2]), order)
                            tmp4955[i, j, 2] = Taylor1(constant_term(tmp4953[i, j, 2]) + constant_term(tmp4954[i, j, 2]), order)
                            tmp4956[i, j, 2, 2] = Taylor1(constant_term(cosϕ_dP_nm[i, j, 2, 2]) * constant_term(tmp4955[i, j, 2]), order)
                            tmp4957[i, j, 2, 1] = Taylor1(constant_term(tmp4952[i, j, 2, 1]) + constant_term(tmp4956[i, j, 2, 2]), order)
                            F_CS_ζ[i, j] = Taylor1(constant_term(tmp4957[i, j, 2, 1]) / constant_term(r_p4[i, j]), order)
                            F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_CS_η_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            for n = 3:n2M
                                for m = 1:n
                                    Cnm_cosmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                    Cnm_sinmλ[i, j, n, m] = Taylor1(constant_term(CM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                    Snm_cosmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(cos_mλ[i, j, m]), order)
                                    Snm_sinmλ[i, j, n, m] = Taylor1(constant_term(SM[n, m]) * constant_term(sin_mλ[i, j, m]), order)
                                    tmp4963[i, j, n, m] = Taylor1(constant_term(P_nm[i, j, n, m]) * constant_term(lnm6[n]), order)
                                    tmp4964[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                    tmp4965[i, j, n, m] = Taylor1(constant_term(tmp4963[i, j, n, m]) * constant_term(tmp4964[i, j, n, m]), order)
                                    tmp4966[i, j, n, m] = Taylor1(constant_term(tmp4965[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_ξ[i, j, n, m] = Taylor1(constant_term(tmp4966[i, j, n, m]) + constant_term(F_CS_ξ_36[i, j]), order)
                                    tmp4968[i, j, n, m] = Taylor1(constant_term(secϕ_P_nm[i, j, n, m]) * constant_term(lnm7[m]), order)
                                    tmp4969[i, j, n, m] = Taylor1(constant_term(Snm_cosmλ[i, j, n, m]) - constant_term(Cnm_sinmλ[i, j, n, m]), order)
                                    tmp4970[i, j, n, m] = Taylor1(constant_term(tmp4968[i, j, n, m]) * constant_term(tmp4969[i, j, n, m]), order)
                                    tmp4971[i, j, n, m] = Taylor1(constant_term(tmp4970[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_η[i, j, n, m] = Taylor1(constant_term(tmp4971[i, j, n, m]) + constant_term(F_CS_η_36[i, j]), order)
                                    tmp4973[i, j, n, m] = Taylor1(constant_term(Cnm_cosmλ[i, j, n, m]) + constant_term(Snm_sinmλ[i, j, n, m]), order)
                                    tmp4974[i, j, n, m] = Taylor1(constant_term(cosϕ_dP_nm[i, j, n, m]) * constant_term(tmp4973[i, j, n, m]), order)
                                    tmp4975[i, j, n, m] = Taylor1(constant_term(tmp4974[i, j, n, m]) / constant_term(temp_rn[i, j, n]), order)
                                    temp_CS_ζ[i, j, n, m] = Taylor1(constant_term(tmp4975[i, j, n, m]) + constant_term(F_CS_ζ_36[i, j]), order)
                                    F_CS_ξ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ξ[i, j, n, m])), order)
                                    F_CS_η_36[i, j] = Taylor1(identity(constant_term(temp_CS_η[i, j, n, m])), order)
                                    F_CS_ζ_36[i, j] = Taylor1(identity(constant_term(temp_CS_ζ[i, j, n, m])), order)
                                end
                            end
                            tmp4977[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                            tmp4978[i, j] = Taylor1(constant_term(F_CS_ξ[i, j]) + constant_term(F_CS_ξ_36[i, j]), order)
                            F_JCS_ξ[i, j] = Taylor1(constant_term(tmp4977[i, j]) + constant_term(tmp4978[i, j]), order)
                            F_JCS_η[i, j] = Taylor1(constant_term(F_CS_η[i, j]) + constant_term(F_CS_η_36[i, j]), order)
                            tmp4981[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                            tmp4982[i, j] = Taylor1(constant_term(F_CS_ζ[i, j]) + constant_term(F_CS_ζ_36[i, j]), order)
                            F_JCS_ζ[i, j] = Taylor1(constant_term(tmp4981[i, j]) + constant_term(tmp4982[i, j]), order)
                        else
                            F_JCS_ξ[i, j] = Taylor1(constant_term(F_J_ξ[i, j]) + constant_term(F_J_ξ_36[i, j]), order)
                            F_JCS_η[i, j] = Taylor1(identity(constant_term(zero_q_1)), order)
                            F_JCS_ζ[i, j] = Taylor1(constant_term(F_J_ζ[i, j]) + constant_term(F_J_ζ_36[i, j]), order)
                        end
                        Rb2p[i, j, 1, 1] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(cos_λ[i, j]), order)
                        Rb2p[i, j, 2, 1] = Taylor1(-(constant_term(sin_λ[i, j])), order)
                        tmp4988[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 3, 1] = Taylor1(constant_term(tmp4988[i, j]) * constant_term(cos_λ[i, j]), order)
                        Rb2p[i, j, 1, 2] = Taylor1(constant_term(cos_ϕ[i, j]) * constant_term(sin_λ[i, j]), order)
                        Rb2p[i, j, 2, 2] = Taylor1(identity(constant_term(cos_λ[i, j])), order)
                        tmp4991[i, j] = Taylor1(-(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 3, 2] = Taylor1(constant_term(tmp4991[i, j]) * constant_term(sin_λ[i, j]), order)
                        Rb2p[i, j, 1, 3] = Taylor1(identity(constant_term(sin_ϕ[i, j])), order)
                        Rb2p[i, j, 2, 3] = Taylor1(identity(constant_term(zero_q_1)), order)
                        Rb2p[i, j, 3, 3] = Taylor1(identity(constant_term(cos_ϕ[i, j])), order)
                        tmp4993[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp4994[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp4995[i, j, 1, 1] = Taylor1(constant_term(tmp4993[i, j, 1, 1]) + constant_term(tmp4994[i, j, 1, 2]), order)
                        tmp4996[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 1, 1] = Taylor1(constant_term(tmp4995[i, j, 1, 1]) + constant_term(tmp4996[i, j, 1, 3]), order)
                        tmp4998[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp4999[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp5000[i, j, 2, 1] = Taylor1(constant_term(tmp4998[i, j, 2, 1]) + constant_term(tmp4999[i, j, 2, 2]), order)
                        tmp5001[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 2, 1] = Taylor1(constant_term(tmp5000[i, j, 2, 1]) + constant_term(tmp5001[i, j, 2, 3]), order)
                        tmp5003[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 1, j]), order)
                        tmp5004[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 1, j]), order)
                        tmp5005[i, j, 3, 1] = Taylor1(constant_term(tmp5003[i, j, 3, 1]) + constant_term(tmp5004[i, j, 3, 2]), order)
                        tmp5006[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 1, j]), order)
                        Gc2p[i, j, 3, 1] = Taylor1(constant_term(tmp5005[i, j, 3, 1]) + constant_term(tmp5006[i, j, 3, 3]), order)
                        tmp5008[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp5009[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp5010[i, j, 1, 1] = Taylor1(constant_term(tmp5008[i, j, 1, 1]) + constant_term(tmp5009[i, j, 1, 2]), order)
                        tmp5011[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 1, 2] = Taylor1(constant_term(tmp5010[i, j, 1, 1]) + constant_term(tmp5011[i, j, 1, 3]), order)
                        tmp5013[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp5014[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp5015[i, j, 2, 1] = Taylor1(constant_term(tmp5013[i, j, 2, 1]) + constant_term(tmp5014[i, j, 2, 2]), order)
                        tmp5016[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 2, 2] = Taylor1(constant_term(tmp5015[i, j, 2, 1]) + constant_term(tmp5016[i, j, 2, 3]), order)
                        tmp5018[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 2, j]), order)
                        tmp5019[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 2, j]), order)
                        tmp5020[i, j, 3, 1] = Taylor1(constant_term(tmp5018[i, j, 3, 1]) + constant_term(tmp5019[i, j, 3, 2]), order)
                        tmp5021[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 2, j]), order)
                        Gc2p[i, j, 3, 2] = Taylor1(constant_term(tmp5020[i, j, 3, 1]) + constant_term(tmp5021[i, j, 3, 3]), order)
                        tmp5023[i, j, 1, 1] = Taylor1(constant_term(Rb2p[i, j, 1, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp5024[i, j, 1, 2] = Taylor1(constant_term(Rb2p[i, j, 1, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp5025[i, j, 1, 1] = Taylor1(constant_term(tmp5023[i, j, 1, 1]) + constant_term(tmp5024[i, j, 1, 2]), order)
                        tmp5026[i, j, 1, 3] = Taylor1(constant_term(Rb2p[i, j, 1, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 1, 3] = Taylor1(constant_term(tmp5025[i, j, 1, 1]) + constant_term(tmp5026[i, j, 1, 3]), order)
                        tmp5028[i, j, 2, 1] = Taylor1(constant_term(Rb2p[i, j, 2, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp5029[i, j, 2, 2] = Taylor1(constant_term(Rb2p[i, j, 2, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp5030[i, j, 2, 1] = Taylor1(constant_term(tmp5028[i, j, 2, 1]) + constant_term(tmp5029[i, j, 2, 2]), order)
                        tmp5031[i, j, 2, 3] = Taylor1(constant_term(Rb2p[i, j, 2, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 2, 3] = Taylor1(constant_term(tmp5030[i, j, 2, 1]) + constant_term(tmp5031[i, j, 2, 3]), order)
                        tmp5033[i, j, 3, 1] = Taylor1(constant_term(Rb2p[i, j, 3, 1]) * constant_term(RotM[1, 3, j]), order)
                        tmp5034[i, j, 3, 2] = Taylor1(constant_term(Rb2p[i, j, 3, 2]) * constant_term(RotM[2, 3, j]), order)
                        tmp5035[i, j, 3, 1] = Taylor1(constant_term(tmp5033[i, j, 3, 1]) + constant_term(tmp5034[i, j, 3, 2]), order)
                        tmp5036[i, j, 3, 3] = Taylor1(constant_term(Rb2p[i, j, 3, 3]) * constant_term(RotM[3, 3, j]), order)
                        Gc2p[i, j, 3, 3] = Taylor1(constant_term(tmp5035[i, j, 3, 1]) + constant_term(tmp5036[i, j, 3, 3]), order)
                        tmp5038[i, j, 1, 1] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 1]), order)
                        tmp5039[i, j, 2, 1] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 1]), order)
                        tmp5040[i, j, 1, 1] = Taylor1(constant_term(tmp5038[i, j, 1, 1]) + constant_term(tmp5039[i, j, 2, 1]), order)
                        tmp5041[i, j, 3, 1] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 1]), order)
                        F_JCS_x[i, j] = Taylor1(constant_term(tmp5040[i, j, 1, 1]) + constant_term(tmp5041[i, j, 3, 1]), order)
                        tmp5043[i, j, 1, 2] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 2]), order)
                        tmp5044[i, j, 2, 2] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 2]), order)
                        tmp5045[i, j, 1, 2] = Taylor1(constant_term(tmp5043[i, j, 1, 2]) + constant_term(tmp5044[i, j, 2, 2]), order)
                        tmp5046[i, j, 3, 2] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 2]), order)
                        F_JCS_y[i, j] = Taylor1(constant_term(tmp5045[i, j, 1, 2]) + constant_term(tmp5046[i, j, 3, 2]), order)
                        tmp5048[i, j, 1, 3] = Taylor1(constant_term(F_JCS_ξ[i, j]) * constant_term(Gc2p[i, j, 1, 3]), order)
                        tmp5049[i, j, 2, 3] = Taylor1(constant_term(F_JCS_η[i, j]) * constant_term(Gc2p[i, j, 2, 3]), order)
                        tmp5050[i, j, 1, 3] = Taylor1(constant_term(tmp5048[i, j, 1, 3]) + constant_term(tmp5049[i, j, 2, 3]), order)
                        tmp5051[i, j, 3, 3] = Taylor1(constant_term(F_JCS_ζ[i, j]) * constant_term(Gc2p[i, j, 3, 3]), order)
                        F_JCS_z[i, j] = Taylor1(constant_term(tmp5050[i, j, 1, 3]) + constant_term(tmp5051[i, j, 3, 3]), order)
                    end
                end
            end
        end
    tmp5053 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    tmp5053 .= Taylor1(zero(_S), order)
    tmp5055 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    tmp5055 .= Taylor1(zero(_S), order)
    tmp5057 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    tmp5057 .= Taylor1(zero(_S), order)
    tmp5059 = Array{Taylor1{_S}}(undef, size(F_JCS_x))
    tmp5059 .= Taylor1(zero(_S), order)
    tmp5061 = Array{Taylor1{_S}}(undef, size(F_JCS_y))
    tmp5061 .= Taylor1(zero(_S), order)
    tmp5063 = Array{Taylor1{_S}}(undef, size(F_JCS_z))
    tmp5063 .= Taylor1(zero(_S), order)
    tmp5065 = Array{Taylor1{_S}}(undef, size(Y))
    tmp5065 .= Taylor1(zero(_S), order)
    tmp5066 = Array{Taylor1{_S}}(undef, size(Z))
    tmp5066 .= Taylor1(zero(_S), order)
    tmp5067 = Array{Taylor1{_S}}(undef, size(tmp5065))
    tmp5067 .= Taylor1(zero(_S), order)
    tmp5069 = Array{Taylor1{_S}}(undef, size(Z))
    tmp5069 .= Taylor1(zero(_S), order)
    tmp5070 = Array{Taylor1{_S}}(undef, size(X))
    tmp5070 .= Taylor1(zero(_S), order)
    tmp5071 = Array{Taylor1{_S}}(undef, size(tmp5069))
    tmp5071 .= Taylor1(zero(_S), order)
    tmp5073 = Array{Taylor1{_S}}(undef, size(X))
    tmp5073 .= Taylor1(zero(_S), order)
    tmp5074 = Array{Taylor1{_S}}(undef, size(Y))
    tmp5074 .= Taylor1(zero(_S), order)
    tmp5075 = Array{Taylor1{_S}}(undef, size(tmp5073))
    tmp5075 .= Taylor1(zero(_S), order)
    for j = 1:N_ext
        for i = 1:N_ext
            if i == j
                continue
            else
                if UJ_interaction[i, j]
                    tmp5053[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_j[i, j] = Taylor1(constant_term(accX[j]) - constant_term(tmp5053[i, j]), order)
                    accX[j] = Taylor1(identity(constant_term(temp_accX_j[i, j])), order)
                    tmp5055[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_j[i, j] = Taylor1(constant_term(accY[j]) - constant_term(tmp5055[i, j]), order)
                    accY[j] = Taylor1(identity(constant_term(temp_accY_j[i, j])), order)
                    tmp5057[i, j] = Taylor1(constant_term(μ[i]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_j[i, j] = Taylor1(constant_term(accZ[j]) - constant_term(tmp5057[i, j]), order)
                    accZ[j] = Taylor1(identity(constant_term(temp_accZ_j[i, j])), order)
                    tmp5059[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_x[i, j]), order)
                    temp_accX_i[i, j] = Taylor1(constant_term(accX[i]) + constant_term(tmp5059[i, j]), order)
                    accX[i] = Taylor1(identity(constant_term(temp_accX_i[i, j])), order)
                    tmp5061[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_y[i, j]), order)
                    temp_accY_i[i, j] = Taylor1(constant_term(accY[i]) + constant_term(tmp5061[i, j]), order)
                    accY[i] = Taylor1(identity(constant_term(temp_accY_i[i, j])), order)
                    tmp5063[i, j] = Taylor1(constant_term(μ[j]) * constant_term(F_JCS_z[i, j]), order)
                    temp_accZ_i[i, j] = Taylor1(constant_term(accZ[i]) + constant_term(tmp5063[i, j]), order)
                    accZ[i] = Taylor1(identity(constant_term(temp_accZ_i[i, j])), order)
                    if j == mo
                        tmp5065[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp5066[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp5067[i, j] = Taylor1(constant_term(tmp5065[i, j]) - constant_term(tmp5066[i, j]), order)
                        N_MfigM_pmA_x[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp5067[i, j]), order)
                        tmp5069[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp5070[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_z[i, j]), order)
                        tmp5071[i, j] = Taylor1(constant_term(tmp5069[i, j]) - constant_term(tmp5070[i, j]), order)
                        N_MfigM_pmA_y[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp5071[i, j]), order)
                        tmp5073[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(F_JCS_y[i, j]), order)
                        tmp5074[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(F_JCS_x[i, j]), order)
                        tmp5075[i, j] = Taylor1(constant_term(tmp5073[i, j]) - constant_term(tmp5074[i, j]), order)
                        N_MfigM_pmA_z[i] = Taylor1(constant_term(μ[i]) * constant_term(tmp5075[i, j]), order)
                        temp_N_M_x[i] = Taylor1(constant_term(N_MfigM[1]) - constant_term(N_MfigM_pmA_x[i]), order)
                        N_MfigM[1] = Taylor1(identity(constant_term(temp_N_M_x[i])), order)
                        temp_N_M_y[i] = Taylor1(constant_term(N_MfigM[2]) - constant_term(N_MfigM_pmA_y[i]), order)
                        N_MfigM[2] = Taylor1(identity(constant_term(temp_N_M_y[i])), order)
                        temp_N_M_z[i] = Taylor1(constant_term(N_MfigM[3]) - constant_term(N_MfigM_pmA_z[i]), order)
                        N_MfigM[3] = Taylor1(identity(constant_term(temp_N_M_z[i])), order)
                    end
                end
            end
        end
    end
    tmp5087 = Array{Taylor1{_S}}(undef, size(vi_dot_vj))
    tmp5087 .= Taylor1(zero(_S), order)
    Xij_t_Ui = Array{Taylor1{_S}}(undef, size(X))
    Xij_t_Ui .= Taylor1(zero(_S), order)
    Yij_t_Vi = Array{Taylor1{_S}}(undef, size(Y))
    Yij_t_Vi .= Taylor1(zero(_S), order)
    Zij_t_Wi = Array{Taylor1{_S}}(undef, size(Z))
    Zij_t_Wi .= Taylor1(zero(_S), order)
    tmp5093 = Array{Taylor1{_S}}(undef, size(Xij_t_Ui))
    tmp5093 .= Taylor1(zero(_S), order)
    Rij_dot_Vi = Array{Taylor1{_S}}(undef, size(tmp5093))
    Rij_dot_Vi .= Taylor1(zero(_S), order)
    tmp5096 = Array{Taylor1{_S}}(undef, size(Rij_dot_Vi))
    tmp5096 .= Taylor1(zero(_S), order)
    pn1t7 = Array{Taylor1{_S}}(undef, size(tmp5096))
    pn1t7 .= Taylor1(zero(_S), order)
    tmp5099 = Array{Taylor1{_S}}(undef, size(pn1t7))
    tmp5099 .= Taylor1(zero(_S), order)
    pn1t2_7 = Array{Taylor1{_S}}(undef, size(ϕs_and_vs))
    pn1t2_7 .= Taylor1(zero(_S), order)
    #= REPL[19]:713 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    _4ϕj[i, j] = Taylor1(constant_term(4) * constant_term(newtonianNb_Potential[j]), order)
                    ϕi_plus_4ϕj[i, j] = Taylor1(constant_term(newtonianNb_Potential[i]) + constant_term(_4ϕj[i, j]), order)
                    _2v2[i, j] = Taylor1(constant_term(2) * constant_term(v2[i]), order)
                    sj2_plus_2si2[i, j] = Taylor1(constant_term(v2[j]) + constant_term(_2v2[i, j]), order)
                    tmp5087[i, j] = Taylor1(constant_term(4) * constant_term(vi_dot_vj[i, j]), order)
                    sj2_plus_2si2_minus_4vivj[i, j] = Taylor1(constant_term(sj2_plus_2si2[i, j]) - constant_term(tmp5087[i, j]), order)
                    ϕs_and_vs[i, j] = Taylor1(constant_term(sj2_plus_2si2_minus_4vivj[i, j]) - constant_term(ϕi_plus_4ϕj[i, j]), order)
                    Xij_t_Ui[i, j] = Taylor1(constant_term(X[i, j]) * constant_term(dq[3i - 2]), order)
                    Yij_t_Vi[i, j] = Taylor1(constant_term(Y[i, j]) * constant_term(dq[3i - 1]), order)
                    Zij_t_Wi[i, j] = Taylor1(constant_term(Z[i, j]) * constant_term(dq[3i]), order)
                    tmp5093[i, j] = Taylor1(constant_term(Xij_t_Ui[i, j]) + constant_term(Yij_t_Vi[i, j]), order)
                    Rij_dot_Vi[i, j] = Taylor1(constant_term(tmp5093[i, j]) + constant_term(Zij_t_Wi[i, j]), order)
                    tmp5096[i, j] = Taylor1(constant_term(Rij_dot_Vi[i, j]) ^ float(constant_term(2)), order)
                    pn1t7[i, j] = Taylor1(constant_term(tmp5096[i, j]) / constant_term(r_p2[i, j]), order)
                    tmp5099[i, j] = Taylor1(constant_term(1.5) * constant_term(pn1t7[i, j]), order)
                    pn1t2_7[i, j] = Taylor1(constant_term(ϕs_and_vs[i, j]) - constant_term(tmp5099[i, j]), order)
                    pn1t1_7[i, j] = Taylor1(constant_term(c_p2) + constant_term(pn1t2_7[i, j]), order)
                end
            end
            pntempX[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            pntempY[j] = Taylor1(identity(constant_term(zero_q_1)), order)
            pntempZ[j] = Taylor1(identity(constant_term(zero_q_1)), order)
        end
    tmp5106 = Array{Taylor1{_S}}(undef, size(pNX_t_X))
    tmp5106 .= Taylor1(zero(_S), order)
    tmp5107 = Array{Taylor1{_S}}(undef, size(tmp5106))
    tmp5107 .= Taylor1(zero(_S), order)
    tmp5108 = Array{Taylor1{_S}}(undef, size(tmp5107))
    tmp5108 .= Taylor1(zero(_S), order)
    tmp5116 = Array{Taylor1{_S}}(undef, size(U_t_pn2))
    tmp5116 .= Taylor1(zero(_S), order)
    termpnx = Array{Taylor1{_S}}(undef, size(X_t_pn1))
    termpnx .= Taylor1(zero(_S), order)
    sumpnx = Array{Taylor1{_S}}(undef, size(termpnx))
    sumpnx .= Taylor1(zero(_S), order)
    tmp5119 = Array{Taylor1{_S}}(undef, size(V_t_pn2))
    tmp5119 .= Taylor1(zero(_S), order)
    termpny = Array{Taylor1{_S}}(undef, size(Y_t_pn1))
    termpny .= Taylor1(zero(_S), order)
    sumpny = Array{Taylor1{_S}}(undef, size(termpny))
    sumpny .= Taylor1(zero(_S), order)
    tmp5122 = Array{Taylor1{_S}}(undef, size(W_t_pn2))
    tmp5122 .= Taylor1(zero(_S), order)
    termpnz = Array{Taylor1{_S}}(undef, size(Z_t_pn1))
    termpnz .= Taylor1(zero(_S), order)
    sumpnz = Array{Taylor1{_S}}(undef, size(termpnz))
    sumpnz .= Taylor1(zero(_S), order)
    #= REPL[19]:752 =# Threads.@threads for j = 1:N
            for i = 1:N
                if i == j
                    continue
                else
                    pNX_t_X[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(X[i, j]), order)
                    pNY_t_Y[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(Y[i, j]), order)
                    pNZ_t_Z[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(Z[i, j]), order)
                    tmp5106[i, j] = Taylor1(constant_term(pNX_t_X[i, j]) + constant_term(pNY_t_Y[i, j]), order)
                    tmp5107[i, j] = Taylor1(constant_term(tmp5106[i, j]) + constant_term(pNZ_t_Z[i, j]), order)
                    tmp5108[i, j] = Taylor1(constant_term(0.5) * constant_term(tmp5107[i, j]), order)
                    pn1[i, j] = Taylor1(constant_term(pn1t1_7[i, j]) + constant_term(tmp5108[i, j]), order)
                    X_t_pn1[i, j] = Taylor1(constant_term(newton_acc_X[i, j]) * constant_term(pn1[i, j]), order)
                    Y_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Y[i, j]) * constant_term(pn1[i, j]), order)
                    Z_t_pn1[i, j] = Taylor1(constant_term(newton_acc_Z[i, j]) * constant_term(pn1[i, j]), order)
                    pNX_t_pn3[i, j] = Taylor1(constant_term(newtonX[i]) * constant_term(pn3[i, j]), order)
                    pNY_t_pn3[i, j] = Taylor1(constant_term(newtonY[i]) * constant_term(pn3[i, j]), order)
                    pNZ_t_pn3[i, j] = Taylor1(constant_term(newtonZ[i]) * constant_term(pn3[i, j]), order)
                    tmp5116[i, j] = Taylor1(constant_term(U_t_pn2[i, j]) + constant_term(pNX_t_pn3[i, j]), order)
                    termpnx[i, j] = Taylor1(constant_term(X_t_pn1[i, j]) + constant_term(tmp5116[i, j]), order)
                    sumpnx[i, j] = Taylor1(constant_term(pntempX[j]) + constant_term(termpnx[i, j]), order)
                    pntempX[j] = Taylor1(identity(constant_term(sumpnx[i, j])), order)
                    tmp5119[i, j] = Taylor1(constant_term(V_t_pn2[i, j]) + constant_term(pNY_t_pn3[i, j]), order)
                    termpny[i, j] = Taylor1(constant_term(Y_t_pn1[i, j]) + constant_term(tmp5119[i, j]), order)
                    sumpny[i, j] = Taylor1(constant_term(pntempY[j]) + constant_term(termpny[i, j]), order)
                    pntempY[j] = Taylor1(identity(constant_term(sumpny[i, j])), order)
                    tmp5122[i, j] = Taylor1(constant_term(W_t_pn2[i, j]) + constant_term(pNZ_t_pn3[i, j]), order)
                    termpnz[i, j] = Taylor1(constant_term(Z_t_pn1[i, j]) + constant_term(tmp5122[i, j]), order)
                    sumpnz[i, j] = Taylor1(constant_term(pntempZ[j]) + constant_term(termpnz[i, j]), order)
                    pntempZ[j] = Taylor1(identity(constant_term(sumpnz[i, j])), order)
                end
            end
            postNewtonX[j] = Taylor1(constant_term(pntempX[j]) * constant_term(c_m2), order)
            postNewtonY[j] = Taylor1(constant_term(pntempY[j]) * constant_term(c_m2), order)
            postNewtonZ[j] = Taylor1(constant_term(pntempZ[j]) * constant_term(c_m2), order)
        end
    x0s_M = Taylor1(identity(constant_term(r_star_M_0[1])), order)
    y0s_M = Taylor1(identity(constant_term(r_star_M_0[2])), order)
    z0s_M = Taylor1(identity(constant_term(r_star_M_0[3])), order)
    tmp5129 = Taylor1(constant_term(x0s_M) ^ float(constant_term(2)), order)
    tmp5131 = Taylor1(constant_term(y0s_M) ^ float(constant_term(2)), order)
    ρ0s2_M = Taylor1(constant_term(tmp5129) + constant_term(tmp5131), order)
    ρ0s_M = Taylor1(sqrt(constant_term(ρ0s2_M)), order)
    z0s2_M = Taylor1(constant_term(z0s_M) ^ float(constant_term(2)), order)
    r0s2_M = Taylor1(constant_term(ρ0s2_M) + constant_term(z0s2_M), order)
    r0s_M = Taylor1(sqrt(constant_term(r0s2_M)), order)
    r0s5_M = Taylor1(constant_term(r0s_M) ^ float(constant_term(5)), order)
    x0s_S = Taylor1(identity(constant_term(r_star_S_0[1])), order)
    y0s_S = Taylor1(identity(constant_term(r_star_S_0[2])), order)
    z0s_S = Taylor1(identity(constant_term(r_star_S_0[3])), order)
    tmp5141 = Taylor1(constant_term(x0s_S) ^ float(constant_term(2)), order)
    tmp5143 = Taylor1(constant_term(y0s_S) ^ float(constant_term(2)), order)
    ρ0s2_S = Taylor1(constant_term(tmp5141) + constant_term(tmp5143), order)
    ρ0s_S = Taylor1(sqrt(constant_term(ρ0s2_S)), order)
    z0s2_S = Taylor1(constant_term(z0s_S) ^ float(constant_term(2)), order)
    r0s2_S = Taylor1(constant_term(ρ0s2_S) + constant_term(z0s2_S), order)
    r0s_S = Taylor1(sqrt(constant_term(r0s2_S)), order)
    r0s5_S = Taylor1(constant_term(r0s_S) ^ float(constant_term(5)), order)
    tmp5153 = Taylor1(constant_term(Z_bf[mo, ea]) * constant_term(r_star_M_0[3]), order)
    tmp5155 = Taylor1(constant_term(tmp5153) ^ float(constant_term(2)), order)
    tmp5157 = Taylor1(constant_term(r_xy[mo, ea]) * constant_term(ρ0s_M), order)
    tmp5159 = Taylor1(constant_term(tmp5157) ^ float(constant_term(2)), order)
    tmp5160 = Taylor1(constant_term(0.5) * constant_term(tmp5159), order)
    tmp5161 = Taylor1(constant_term(tmp5155) + constant_term(tmp5160), order)
    tmp5162 = Taylor1(constant_term(tmp5161) / constant_term(r_p2[mo, ea]), order)
    tmp5163 = Taylor1(constant_term(5) * constant_term(tmp5162), order)
    coeff0_M = Taylor1(constant_term(r0s2_M) - constant_term(tmp5163), order)
    tmp5166 = Taylor1(constant_term(Z_bf[mo, ea]) * constant_term(r_star_S_0[3]), order)
    tmp5168 = Taylor1(constant_term(tmp5166) ^ float(constant_term(2)), order)
    tmp5170 = Taylor1(constant_term(r_xy[mo, ea]) * constant_term(ρ0s_S), order)
    tmp5172 = Taylor1(constant_term(tmp5170) ^ float(constant_term(2)), order)
    tmp5173 = Taylor1(constant_term(0.5) * constant_term(tmp5172), order)
    tmp5174 = Taylor1(constant_term(tmp5168) + constant_term(tmp5173), order)
    tmp5175 = Taylor1(constant_term(tmp5174) / constant_term(r_p2[mo, ea]), order)
    tmp5176 = Taylor1(constant_term(5) * constant_term(tmp5175), order)
    coeff0_S = Taylor1(constant_term(r0s2_S) - constant_term(tmp5176), order)
    k_20E_div_r0s5_M = Taylor1(constant_term(k_20E) / constant_term(r0s5_M), order)
    k_20E_div_r0s5_S = Taylor1(constant_term(k_20E) / constant_term(r0s5_S), order)
    tmp5180 = Taylor1(constant_term(ρ0s2_M) + constant_term(coeff0_M), order)
    tmp5181 = Taylor1(constant_term(k_20E_div_r0s5_M) * constant_term(tmp5180), order)
    a_tid_0_M_x = Taylor1(constant_term(tmp5181) * constant_term(X_bf[mo, ea]), order)
    tmp5183 = Taylor1(constant_term(ρ0s2_M) + constant_term(coeff0_M), order)
    tmp5184 = Taylor1(constant_term(k_20E_div_r0s5_M) * constant_term(tmp5183), order)
    a_tid_0_M_y = Taylor1(constant_term(tmp5184) * constant_term(Y_bf[mo, ea]), order)
    tmp5187 = Taylor1(constant_term(2) * constant_term(z0s2_M), order)
    tmp5188 = Taylor1(constant_term(tmp5187) + constant_term(coeff0_M), order)
    tmp5189 = Taylor1(constant_term(k_20E_div_r0s5_M) * constant_term(tmp5188), order)
    a_tid_0_M_z = Taylor1(constant_term(tmp5189) * constant_term(Z_bf[mo, ea]), order)
    tmp5191 = Taylor1(constant_term(ρ0s2_S) + constant_term(coeff0_S), order)
    tmp5192 = Taylor1(constant_term(k_20E_div_r0s5_S) * constant_term(tmp5191), order)
    a_tid_0_S_x = Taylor1(constant_term(tmp5192) * constant_term(X_bf[mo, ea]), order)
    tmp5194 = Taylor1(constant_term(ρ0s2_S) + constant_term(coeff0_S), order)
    tmp5195 = Taylor1(constant_term(k_20E_div_r0s5_S) * constant_term(tmp5194), order)
    a_tid_0_S_y = Taylor1(constant_term(tmp5195) * constant_term(Y_bf[mo, ea]), order)
    tmp5198 = Taylor1(constant_term(2) * constant_term(z0s2_S), order)
    tmp5199 = Taylor1(constant_term(tmp5198) + constant_term(coeff0_S), order)
    tmp5200 = Taylor1(constant_term(k_20E_div_r0s5_S) * constant_term(tmp5199), order)
    a_tid_0_S_z = Taylor1(constant_term(tmp5200) * constant_term(Z_bf[mo, ea]), order)
    x1s_M = Taylor1(identity(constant_term(r_star_M_1[1])), order)
    y1s_M = Taylor1(identity(constant_term(r_star_M_1[2])), order)
    z1s_M = Taylor1(identity(constant_term(r_star_M_1[3])), order)
    tmp5203 = Taylor1(constant_term(x1s_M) ^ float(constant_term(2)), order)
    tmp5205 = Taylor1(constant_term(y1s_M) ^ float(constant_term(2)), order)
    ρ1s2_M = Taylor1(constant_term(tmp5203) + constant_term(tmp5205), order)
    ρ1s_M = Taylor1(sqrt(constant_term(ρ1s2_M)), order)
    z1s2_M = Taylor1(constant_term(z1s_M) ^ float(constant_term(2)), order)
    r1s2_M = Taylor1(constant_term(ρ1s2_M) + constant_term(z1s2_M), order)
    r1s_M = Taylor1(sqrt(constant_term(r1s2_M)), order)
    r1s5_M = Taylor1(constant_term(r1s_M) ^ float(constant_term(5)), order)
    x1s_S = Taylor1(identity(constant_term(r_star_S_1[1])), order)
    y1s_S = Taylor1(identity(constant_term(r_star_S_1[2])), order)
    z1s_S = Taylor1(identity(constant_term(r_star_S_1[3])), order)
    tmp5215 = Taylor1(constant_term(x1s_S) ^ float(constant_term(2)), order)
    tmp5217 = Taylor1(constant_term(y1s_S) ^ float(constant_term(2)), order)
    ρ1s2_S = Taylor1(constant_term(tmp5215) + constant_term(tmp5217), order)
    ρ1s_S = Taylor1(sqrt(constant_term(ρ1s2_S)), order)
    z1s2_S = Taylor1(constant_term(z1s_S) ^ float(constant_term(2)), order)
    r1s2_S = Taylor1(constant_term(ρ1s2_S) + constant_term(z1s2_S), order)
    r1s_S = Taylor1(sqrt(constant_term(r1s2_S)), order)
    r1s5_S = Taylor1(constant_term(r1s_S) ^ float(constant_term(5)), order)
    tmp5226 = Taylor1(constant_term(X_bf[mo, ea]) * constant_term(r_star_M_1[1]), order)
    tmp5227 = Taylor1(constant_term(Y_bf[mo, ea]) * constant_term(r_star_M_1[2]), order)
    coeff1_1_M = Taylor1(constant_term(tmp5226) + constant_term(tmp5227), order)
    tmp5229 = Taylor1(constant_term(X_bf[mo, ea]) * constant_term(r_star_S_1[1]), order)
    tmp5230 = Taylor1(constant_term(Y_bf[mo, ea]) * constant_term(r_star_S_1[2]), order)
    coeff1_1_S = Taylor1(constant_term(tmp5229) + constant_term(tmp5230), order)
    coeff2_1_M = Taylor1(constant_term(Z_bf[mo, ea]) * constant_term(r_star_M_1[3]), order)
    coeff2_1_S = Taylor1(constant_term(Z_bf[mo, ea]) * constant_term(r_star_S_1[3]), order)
    tmp5235 = Taylor1(constant_term(10) * constant_term(coeff1_1_M), order)
    tmp5236 = Taylor1(constant_term(tmp5235) * constant_term(coeff2_1_M), order)
    coeff3_1_M = Taylor1(constant_term(tmp5236) / constant_term(r_p2[mo, ea]), order)
    tmp5239 = Taylor1(constant_term(10) * constant_term(coeff1_1_S), order)
    tmp5240 = Taylor1(constant_term(tmp5239) * constant_term(coeff2_1_S), order)
    coeff3_1_S = Taylor1(constant_term(tmp5240) / constant_term(r_p2[mo, ea]), order)
    k_21E_div_r1s5_M = Taylor1(constant_term(k_21E) / constant_term(r1s5_M), order)
    k_21E_div_r1s5_S = Taylor1(constant_term(k_21E) / constant_term(r1s5_S), order)
    tmp5245 = Taylor1(constant_term(2) * constant_term(coeff2_1_M), order)
    tmp5246 = Taylor1(constant_term(tmp5245) * constant_term(r_star_M_1[1]), order)
    tmp5247 = Taylor1(constant_term(coeff3_1_M) * constant_term(X_bf[mo, ea]), order)
    tmp5248 = Taylor1(constant_term(tmp5246) - constant_term(tmp5247), order)
    a_tid_1_M_x = Taylor1(constant_term(k_21E_div_r1s5_M) * constant_term(tmp5248), order)
    tmp5251 = Taylor1(constant_term(2) * constant_term(coeff2_1_M), order)
    tmp5252 = Taylor1(constant_term(tmp5251) * constant_term(r_star_M_1[2]), order)
    tmp5253 = Taylor1(constant_term(coeff3_1_M) * constant_term(Y_bf[mo, ea]), order)
    tmp5254 = Taylor1(constant_term(tmp5252) - constant_term(tmp5253), order)
    a_tid_1_M_y = Taylor1(constant_term(k_21E_div_r1s5_M) * constant_term(tmp5254), order)
    tmp5257 = Taylor1(constant_term(2) * constant_term(coeff1_1_M), order)
    tmp5258 = Taylor1(constant_term(tmp5257) * constant_term(r_star_M_1[3]), order)
    tmp5259 = Taylor1(constant_term(coeff3_1_M) * constant_term(Z_bf[mo, ea]), order)
    tmp5260 = Taylor1(constant_term(tmp5258) - constant_term(tmp5259), order)
    a_tid_1_M_z = Taylor1(constant_term(k_21E_div_r1s5_M) * constant_term(tmp5260), order)
    tmp5263 = Taylor1(constant_term(2) * constant_term(coeff2_1_S), order)
    tmp5264 = Taylor1(constant_term(tmp5263) * constant_term(r_star_S_1[1]), order)
    tmp5265 = Taylor1(constant_term(coeff3_1_S) * constant_term(X_bf[mo, ea]), order)
    tmp5266 = Taylor1(constant_term(tmp5264) - constant_term(tmp5265), order)
    a_tid_1_S_x = Taylor1(constant_term(k_21E_div_r1s5_S) * constant_term(tmp5266), order)
    tmp5269 = Taylor1(constant_term(2) * constant_term(coeff2_1_S), order)
    tmp5270 = Taylor1(constant_term(tmp5269) * constant_term(r_star_S_1[2]), order)
    tmp5271 = Taylor1(constant_term(coeff3_1_S) * constant_term(Y_bf[mo, ea]), order)
    tmp5272 = Taylor1(constant_term(tmp5270) - constant_term(tmp5271), order)
    a_tid_1_S_y = Taylor1(constant_term(k_21E_div_r1s5_S) * constant_term(tmp5272), order)
    tmp5275 = Taylor1(constant_term(2) * constant_term(coeff1_1_S), order)
    tmp5276 = Taylor1(constant_term(tmp5275) * constant_term(r_star_S_1[3]), order)
    tmp5277 = Taylor1(constant_term(coeff3_1_S) * constant_term(Z_bf[mo, ea]), order)
    tmp5278 = Taylor1(constant_term(tmp5276) - constant_term(tmp5277), order)
    a_tid_1_S_z = Taylor1(constant_term(k_21E_div_r1s5_S) * constant_term(tmp5278), order)
    x2s_M = Taylor1(identity(constant_term(r_star_M_2[1])), order)
    y2s_M = Taylor1(identity(constant_term(r_star_M_2[2])), order)
    z2s_M = Taylor1(identity(constant_term(r_star_M_2[3])), order)
    tmp5281 = Taylor1(constant_term(x2s_M) ^ float(constant_term(2)), order)
    tmp5283 = Taylor1(constant_term(y2s_M) ^ float(constant_term(2)), order)
    ρ2s2_M = Taylor1(constant_term(tmp5281) + constant_term(tmp5283), order)
    ρ2s_M = Taylor1(sqrt(constant_term(ρ2s2_M)), order)
    z2s2_M = Taylor1(constant_term(z2s_M) ^ float(constant_term(2)), order)
    r2s2_M = Taylor1(constant_term(ρ2s2_M) + constant_term(z2s2_M), order)
    r2s_M = Taylor1(sqrt(constant_term(r2s2_M)), order)
    r2s5_M = Taylor1(constant_term(r2s_M) ^ float(constant_term(5)), order)
    x2s_S = Taylor1(identity(constant_term(r_star_S_2[1])), order)
    y2s_S = Taylor1(identity(constant_term(r_star_S_2[2])), order)
    z2s_S = Taylor1(identity(constant_term(r_star_S_2[3])), order)
    tmp5293 = Taylor1(constant_term(x2s_S) ^ float(constant_term(2)), order)
    tmp5295 = Taylor1(constant_term(y2s_S) ^ float(constant_term(2)), order)
    ρ2s2_S = Taylor1(constant_term(tmp5293) + constant_term(tmp5295), order)
    ρ2s_S = Taylor1(sqrt(constant_term(ρ2s2_S)), order)
    z2s2_S = Taylor1(constant_term(z2s_S) ^ float(constant_term(2)), order)
    r2s2_S = Taylor1(constant_term(ρ2s2_S) + constant_term(z2s2_S), order)
    r2s_S = Taylor1(sqrt(constant_term(r2s2_S)), order)
    r2s5_S = Taylor1(constant_term(r2s_S) ^ float(constant_term(5)), order)
    tmp5304 = Taylor1(constant_term(X_bf[mo, ea]) * constant_term(r_star_M_2[1]), order)
    tmp5305 = Taylor1(constant_term(Y_bf[mo, ea]) * constant_term(r_star_M_2[2]), order)
    coeff1_2_M = Taylor1(constant_term(tmp5304) + constant_term(tmp5305), order)
    tmp5307 = Taylor1(constant_term(X_bf[mo, ea]) * constant_term(r_star_S_2[1]), order)
    tmp5308 = Taylor1(constant_term(Y_bf[mo, ea]) * constant_term(r_star_S_2[2]), order)
    coeff1_2_S = Taylor1(constant_term(tmp5307) + constant_term(tmp5308), order)
    tmp5312 = Taylor1(constant_term(coeff1_2_M) ^ float(constant_term(2)), order)
    tmp5315 = Taylor1(constant_term(r_xy[mo, ea]) ^ float(constant_term(2)), order)
    tmp5316 = Taylor1(constant_term(0.5) * constant_term(tmp5315), order)
    tmp5317 = Taylor1(constant_term(tmp5316) * constant_term(ρ2s2_M), order)
    tmp5318 = Taylor1(constant_term(tmp5312) - constant_term(tmp5317), order)
    tmp5319 = Taylor1(constant_term(5) * constant_term(tmp5318), order)
    coeff3_2_M = Taylor1(constant_term(tmp5319) / constant_term(r_p2[mo, ea]), order)
    tmp5323 = Taylor1(constant_term(coeff1_2_S) ^ float(constant_term(2)), order)
    tmp5326 = Taylor1(constant_term(r_xy[mo, ea]) ^ float(constant_term(2)), order)
    tmp5327 = Taylor1(constant_term(0.5) * constant_term(tmp5326), order)
    tmp5328 = Taylor1(constant_term(tmp5327) * constant_term(ρ2s2_S), order)
    tmp5329 = Taylor1(constant_term(tmp5323) - constant_term(tmp5328), order)
    tmp5330 = Taylor1(constant_term(5) * constant_term(tmp5329), order)
    coeff3_2_S = Taylor1(constant_term(tmp5330) / constant_term(r_p2[mo, ea]), order)
    k_22E_div_r2s5_M = Taylor1(constant_term(k_22E) / constant_term(r2s5_M), order)
    k_22E_div_r2s5_S = Taylor1(constant_term(k_22E) / constant_term(r2s5_S), order)
    tmp5335 = Taylor1(constant_term(2) * constant_term(coeff1_2_M), order)
    tmp5336 = Taylor1(constant_term(tmp5335) * constant_term(r_star_M_2[1]), order)
    tmp5337 = Taylor1(constant_term(ρ2s2_M) + constant_term(coeff3_2_M), order)
    tmp5338 = Taylor1(constant_term(tmp5337) * constant_term(X_bf[mo, ea]), order)
    tmp5339 = Taylor1(constant_term(tmp5336) - constant_term(tmp5338), order)
    a_tid_2_M_x = Taylor1(constant_term(k_22E_div_r2s5_M) * constant_term(tmp5339), order)
    tmp5342 = Taylor1(constant_term(2) * constant_term(coeff1_2_M), order)
    tmp5343 = Taylor1(constant_term(tmp5342) * constant_term(r_star_M_2[2]), order)
    tmp5344 = Taylor1(constant_term(ρ2s2_M) + constant_term(coeff3_2_M), order)
    tmp5345 = Taylor1(constant_term(tmp5344) * constant_term(Y_bf[mo, ea]), order)
    tmp5346 = Taylor1(constant_term(tmp5343) - constant_term(tmp5345), order)
    a_tid_2_M_y = Taylor1(constant_term(k_22E_div_r2s5_M) * constant_term(tmp5346), order)
    tmp5348 = Taylor1(-(constant_term(coeff3_2_M)), order)
    tmp5349 = Taylor1(constant_term(k_22E_div_r2s5_M) * constant_term(tmp5348), order)
    a_tid_2_M_z = Taylor1(constant_term(tmp5349) * constant_term(Z_bf[mo, ea]), order)
    tmp5352 = Taylor1(constant_term(2) * constant_term(coeff1_2_S), order)
    tmp5353 = Taylor1(constant_term(tmp5352) * constant_term(r_star_S_2[1]), order)
    tmp5354 = Taylor1(constant_term(ρ2s2_S) + constant_term(coeff3_2_S), order)
    tmp5355 = Taylor1(constant_term(tmp5354) * constant_term(X_bf[mo, ea]), order)
    tmp5356 = Taylor1(constant_term(tmp5353) - constant_term(tmp5355), order)
    a_tid_2_S_x = Taylor1(constant_term(k_22E_div_r2s5_S) * constant_term(tmp5356), order)
    tmp5359 = Taylor1(constant_term(2) * constant_term(coeff1_2_S), order)
    tmp5360 = Taylor1(constant_term(tmp5359) * constant_term(r_star_S_2[2]), order)
    tmp5361 = Taylor1(constant_term(ρ2s2_S) + constant_term(coeff3_2_S), order)
    tmp5362 = Taylor1(constant_term(tmp5361) * constant_term(Y_bf[mo, ea]), order)
    tmp5363 = Taylor1(constant_term(tmp5360) - constant_term(tmp5362), order)
    a_tid_2_S_y = Taylor1(constant_term(k_22E_div_r2s5_S) * constant_term(tmp5363), order)
    tmp5365 = Taylor1(-(constant_term(coeff3_2_S)), order)
    tmp5366 = Taylor1(constant_term(k_22E_div_r2s5_S) * constant_term(tmp5365), order)
    a_tid_2_S_z = Taylor1(constant_term(tmp5366) * constant_term(Z_bf[mo, ea]), order)
    tmp5368 = Taylor1(constant_term(RE_au) / constant_term(r_p1d2[mo, ea]), order)
    RE_div_r_p5 = Taylor1(constant_term(tmp5368) ^ float(constant_term(5)), order)
    aux_tidacc = Taylor1(constant_term(tid_num_coeff) * constant_term(RE_div_r_p5), order)
    a_tidal_coeff_M = Taylor1(constant_term(μ[mo]) * constant_term(aux_tidacc), order)
    a_tidal_coeff_S = Taylor1(constant_term(μ[su]) * constant_term(aux_tidacc), order)
    tmp5374 = Taylor1(constant_term(a_tid_0_M_x) + constant_term(a_tid_1_M_x), order)
    tmp5375 = Taylor1(constant_term(tmp5374) + constant_term(a_tid_2_M_x), order)
    tmp5376 = Taylor1(constant_term(a_tidal_coeff_M) * constant_term(tmp5375), order)
    tmp5377 = Taylor1(constant_term(a_tid_0_S_x) + constant_term(a_tid_1_S_x), order)
    tmp5378 = Taylor1(constant_term(tmp5377) + constant_term(a_tid_2_S_x), order)
    tmp5379 = Taylor1(constant_term(a_tidal_coeff_S) * constant_term(tmp5378), order)
    a_tidal_tod_x = Taylor1(constant_term(tmp5376) + constant_term(tmp5379), order)
    tmp5381 = Taylor1(constant_term(a_tid_0_M_y) + constant_term(a_tid_1_M_y), order)
    tmp5382 = Taylor1(constant_term(tmp5381) + constant_term(a_tid_2_M_y), order)
    tmp5383 = Taylor1(constant_term(a_tidal_coeff_M) * constant_term(tmp5382), order)
    tmp5384 = Taylor1(constant_term(a_tid_0_S_y) + constant_term(a_tid_1_S_y), order)
    tmp5385 = Taylor1(constant_term(tmp5384) + constant_term(a_tid_2_S_y), order)
    tmp5386 = Taylor1(constant_term(a_tidal_coeff_S) * constant_term(tmp5385), order)
    a_tidal_tod_y = Taylor1(constant_term(tmp5383) + constant_term(tmp5386), order)
    tmp5388 = Taylor1(constant_term(a_tid_0_M_z) + constant_term(a_tid_1_M_z), order)
    tmp5389 = Taylor1(constant_term(tmp5388) + constant_term(a_tid_2_M_z), order)
    tmp5390 = Taylor1(constant_term(a_tidal_coeff_M) * constant_term(tmp5389), order)
    tmp5391 = Taylor1(constant_term(a_tid_0_S_z) + constant_term(a_tid_1_S_z), order)
    tmp5392 = Taylor1(constant_term(tmp5391) + constant_term(a_tid_2_S_z), order)
    tmp5393 = Taylor1(constant_term(a_tidal_coeff_S) * constant_term(tmp5392), order)
    a_tidal_tod_z = Taylor1(constant_term(tmp5390) + constant_term(tmp5393), order)
    tmp5395 = Taylor1(constant_term(RotM[1, 1, ea]) * constant_term(a_tidal_tod_x), order)
    tmp5396 = Taylor1(constant_term(RotM[2, 1, ea]) * constant_term(a_tidal_tod_y), order)
    tmp5397 = Taylor1(constant_term(tmp5395) + constant_term(tmp5396), order)
    tmp5398 = Taylor1(constant_term(RotM[3, 1, ea]) * constant_term(a_tidal_tod_z), order)
    a_tidal_x = Taylor1(constant_term(tmp5397) + constant_term(tmp5398), order)
    tmp5400 = Taylor1(constant_term(RotM[1, 2, ea]) * constant_term(a_tidal_tod_x), order)
    tmp5401 = Taylor1(constant_term(RotM[2, 2, ea]) * constant_term(a_tidal_tod_y), order)
    tmp5402 = Taylor1(constant_term(tmp5400) + constant_term(tmp5401), order)
    tmp5403 = Taylor1(constant_term(RotM[3, 2, ea]) * constant_term(a_tidal_tod_z), order)
    a_tidal_y = Taylor1(constant_term(tmp5402) + constant_term(tmp5403), order)
    tmp5405 = Taylor1(constant_term(RotM[1, 3, ea]) * constant_term(a_tidal_tod_x), order)
    tmp5406 = Taylor1(constant_term(RotM[2, 3, ea]) * constant_term(a_tidal_tod_y), order)
    tmp5407 = Taylor1(constant_term(tmp5405) + constant_term(tmp5406), order)
    tmp5408 = Taylor1(constant_term(RotM[3, 3, ea]) * constant_term(a_tidal_tod_z), order)
    a_tidal_z = Taylor1(constant_term(tmp5407) + constant_term(tmp5408), order)
    accX_mo_tides = Taylor1(constant_term(accX[mo]) + constant_term(a_tidal_x), order)
    accY_mo_tides = Taylor1(constant_term(accY[mo]) + constant_term(a_tidal_y), order)
    accZ_mo_tides = Taylor1(constant_term(accZ[mo]) + constant_term(a_tidal_z), order)
    accX[mo] = Taylor1(identity(constant_term(accX_mo_tides)), order)
    accY[mo] = Taylor1(identity(constant_term(accY_mo_tides)), order)
    accZ[mo] = Taylor1(identity(constant_term(accZ_mo_tides)), order)
    #= REPL[19]:991 =# Threads.@threads for i = 1:N_ext
            dq[3 * (N + i) - 2] = Taylor1(constant_term(postNewtonX[i]) + constant_term(accX[i]), order)
            dq[3 * (N + i) - 1] = Taylor1(constant_term(postNewtonY[i]) + constant_term(accY[i]), order)
            dq[3 * (N + i)] = Taylor1(constant_term(postNewtonZ[i]) + constant_term(accZ[i]), order)
        end
    #= REPL[19]:996 =# Threads.@threads for i = N_ext + 1:N
            dq[3 * (N + i) - 2] = Taylor1(identity(constant_term(postNewtonX[i])), order)
            dq[3 * (N + i) - 1] = Taylor1(identity(constant_term(postNewtonY[i])), order)
            dq[3 * (N + i)] = Taylor1(identity(constant_term(postNewtonZ[i])), order)
        end
    tmp5416 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp5417 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp5418 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp5419 = Taylor1(constant_term(tmp5417) + constant_term(tmp5418), order)
    Iω_x = Taylor1(constant_term(tmp5416) + constant_term(tmp5419), order)
    tmp5421 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp5422 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp5423 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp5424 = Taylor1(constant_term(tmp5422) + constant_term(tmp5423), order)
    Iω_y = Taylor1(constant_term(tmp5421) + constant_term(tmp5424), order)
    tmp5426 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp5427 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp5428 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp5429 = Taylor1(constant_term(tmp5427) + constant_term(tmp5428), order)
    Iω_z = Taylor1(constant_term(tmp5426) + constant_term(tmp5429), order)
    tmp5431 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_z), order)
    tmp5432 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_y), order)
    ωxIω_x = Taylor1(constant_term(tmp5431) - constant_term(tmp5432), order)
    tmp5434 = Taylor1(constant_term(q[6N + 6]) * constant_term(Iω_x), order)
    tmp5435 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_z), order)
    ωxIω_y = Taylor1(constant_term(tmp5434) - constant_term(tmp5435), order)
    tmp5437 = Taylor1(constant_term(q[6N + 4]) * constant_term(Iω_y), order)
    tmp5438 = Taylor1(constant_term(q[6N + 5]) * constant_term(Iω_x), order)
    ωxIω_z = Taylor1(constant_term(tmp5437) - constant_term(tmp5438), order)
    tmp5440 = Taylor1(constant_term(dI_m_t[1, 1]) * constant_term(q[6N + 4]), order)
    tmp5441 = Taylor1(constant_term(dI_m_t[1, 2]) * constant_term(q[6N + 5]), order)
    tmp5442 = Taylor1(constant_term(dI_m_t[1, 3]) * constant_term(q[6N + 6]), order)
    tmp5443 = Taylor1(constant_term(tmp5441) + constant_term(tmp5442), order)
    dIω_x = Taylor1(constant_term(tmp5440) + constant_term(tmp5443), order)
    tmp5445 = Taylor1(constant_term(dI_m_t[2, 1]) * constant_term(q[6N + 4]), order)
    tmp5446 = Taylor1(constant_term(dI_m_t[2, 2]) * constant_term(q[6N + 5]), order)
    tmp5447 = Taylor1(constant_term(dI_m_t[2, 3]) * constant_term(q[6N + 6]), order)
    tmp5448 = Taylor1(constant_term(tmp5446) + constant_term(tmp5447), order)
    dIω_y = Taylor1(constant_term(tmp5445) + constant_term(tmp5448), order)
    tmp5450 = Taylor1(constant_term(dI_m_t[3, 1]) * constant_term(q[6N + 4]), order)
    tmp5451 = Taylor1(constant_term(dI_m_t[3, 2]) * constant_term(q[6N + 5]), order)
    tmp5452 = Taylor1(constant_term(dI_m_t[3, 3]) * constant_term(q[6N + 6]), order)
    tmp5453 = Taylor1(constant_term(tmp5451) + constant_term(tmp5452), order)
    dIω_z = Taylor1(constant_term(tmp5450) + constant_term(tmp5453), order)
    er_EM_I_1 = Taylor1(constant_term(X[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_2 = Taylor1(constant_term(Y[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    er_EM_I_3 = Taylor1(constant_term(Z[ea, mo]) / constant_term(r_p1d2[ea, mo]), order)
    p_E_I_1 = Taylor1(identity(constant_term(RotM[3, 1, ea])), order)
    p_E_I_2 = Taylor1(identity(constant_term(RotM[3, 2, ea])), order)
    p_E_I_3 = Taylor1(identity(constant_term(RotM[3, 3, ea])), order)
    tmp5458 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp5459 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp5460 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp5461 = Taylor1(constant_term(tmp5459) + constant_term(tmp5460), order)
    er_EM_1 = Taylor1(constant_term(tmp5458) + constant_term(tmp5461), order)
    tmp5463 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp5464 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp5465 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp5466 = Taylor1(constant_term(tmp5464) + constant_term(tmp5465), order)
    er_EM_2 = Taylor1(constant_term(tmp5463) + constant_term(tmp5466), order)
    tmp5468 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(er_EM_I_1), order)
    tmp5469 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(er_EM_I_2), order)
    tmp5470 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(er_EM_I_3), order)
    tmp5471 = Taylor1(constant_term(tmp5469) + constant_term(tmp5470), order)
    er_EM_3 = Taylor1(constant_term(tmp5468) + constant_term(tmp5471), order)
    tmp5473 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(p_E_I_1), order)
    tmp5474 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(p_E_I_2), order)
    tmp5475 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(p_E_I_3), order)
    tmp5476 = Taylor1(constant_term(tmp5474) + constant_term(tmp5475), order)
    p_E_1 = Taylor1(constant_term(tmp5473) + constant_term(tmp5476), order)
    tmp5478 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(p_E_I_1), order)
    tmp5479 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(p_E_I_2), order)
    tmp5480 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(p_E_I_3), order)
    tmp5481 = Taylor1(constant_term(tmp5479) + constant_term(tmp5480), order)
    p_E_2 = Taylor1(constant_term(tmp5478) + constant_term(tmp5481), order)
    tmp5483 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(p_E_I_1), order)
    tmp5484 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(p_E_I_2), order)
    tmp5485 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(p_E_I_3), order)
    tmp5486 = Taylor1(constant_term(tmp5484) + constant_term(tmp5485), order)
    p_E_3 = Taylor1(constant_term(tmp5483) + constant_term(tmp5486), order)
    tmp5488 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(er_EM_1), order)
    tmp5489 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(er_EM_2), order)
    tmp5490 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(er_EM_3), order)
    tmp5491 = Taylor1(constant_term(tmp5489) + constant_term(tmp5490), order)
    I_er_EM_1 = Taylor1(constant_term(tmp5488) + constant_term(tmp5491), order)
    tmp5493 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(er_EM_1), order)
    tmp5494 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(er_EM_2), order)
    tmp5495 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(er_EM_3), order)
    tmp5496 = Taylor1(constant_term(tmp5494) + constant_term(tmp5495), order)
    I_er_EM_2 = Taylor1(constant_term(tmp5493) + constant_term(tmp5496), order)
    tmp5498 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(er_EM_1), order)
    tmp5499 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(er_EM_2), order)
    tmp5500 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(er_EM_3), order)
    tmp5501 = Taylor1(constant_term(tmp5499) + constant_term(tmp5500), order)
    I_er_EM_3 = Taylor1(constant_term(tmp5498) + constant_term(tmp5501), order)
    tmp5503 = Taylor1(constant_term(I_m_t[1, 1]) * constant_term(p_E_1), order)
    tmp5504 = Taylor1(constant_term(I_m_t[1, 2]) * constant_term(p_E_2), order)
    tmp5505 = Taylor1(constant_term(I_m_t[1, 3]) * constant_term(p_E_3), order)
    tmp5506 = Taylor1(constant_term(tmp5504) + constant_term(tmp5505), order)
    I_p_E_1 = Taylor1(constant_term(tmp5503) + constant_term(tmp5506), order)
    tmp5508 = Taylor1(constant_term(I_m_t[2, 1]) * constant_term(p_E_1), order)
    tmp5509 = Taylor1(constant_term(I_m_t[2, 2]) * constant_term(p_E_2), order)
    tmp5510 = Taylor1(constant_term(I_m_t[2, 3]) * constant_term(p_E_3), order)
    tmp5511 = Taylor1(constant_term(tmp5509) + constant_term(tmp5510), order)
    I_p_E_2 = Taylor1(constant_term(tmp5508) + constant_term(tmp5511), order)
    tmp5513 = Taylor1(constant_term(I_m_t[3, 1]) * constant_term(p_E_1), order)
    tmp5514 = Taylor1(constant_term(I_m_t[3, 2]) * constant_term(p_E_2), order)
    tmp5515 = Taylor1(constant_term(I_m_t[3, 3]) * constant_term(p_E_3), order)
    tmp5516 = Taylor1(constant_term(tmp5514) + constant_term(tmp5515), order)
    I_p_E_3 = Taylor1(constant_term(tmp5513) + constant_term(tmp5516), order)
    tmp5518 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_3), order)
    tmp5519 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_2), order)
    er_EM_cross_I_er_EM_1 = Taylor1(constant_term(tmp5518) - constant_term(tmp5519), order)
    tmp5521 = Taylor1(constant_term(er_EM_3) * constant_term(I_er_EM_1), order)
    tmp5522 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_3), order)
    er_EM_cross_I_er_EM_2 = Taylor1(constant_term(tmp5521) - constant_term(tmp5522), order)
    tmp5524 = Taylor1(constant_term(er_EM_1) * constant_term(I_er_EM_2), order)
    tmp5525 = Taylor1(constant_term(er_EM_2) * constant_term(I_er_EM_1), order)
    er_EM_cross_I_er_EM_3 = Taylor1(constant_term(tmp5524) - constant_term(tmp5525), order)
    tmp5527 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_3), order)
    tmp5528 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_2), order)
    er_EM_cross_I_p_E_1 = Taylor1(constant_term(tmp5527) - constant_term(tmp5528), order)
    tmp5530 = Taylor1(constant_term(er_EM_3) * constant_term(I_p_E_1), order)
    tmp5531 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_3), order)
    er_EM_cross_I_p_E_2 = Taylor1(constant_term(tmp5530) - constant_term(tmp5531), order)
    tmp5533 = Taylor1(constant_term(er_EM_1) * constant_term(I_p_E_2), order)
    tmp5534 = Taylor1(constant_term(er_EM_2) * constant_term(I_p_E_1), order)
    er_EM_cross_I_p_E_3 = Taylor1(constant_term(tmp5533) - constant_term(tmp5534), order)
    tmp5536 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_3), order)
    tmp5537 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_2), order)
    p_E_cross_I_er_EM_1 = Taylor1(constant_term(tmp5536) - constant_term(tmp5537), order)
    tmp5539 = Taylor1(constant_term(p_E_3) * constant_term(I_er_EM_1), order)
    tmp5540 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_3), order)
    p_E_cross_I_er_EM_2 = Taylor1(constant_term(tmp5539) - constant_term(tmp5540), order)
    tmp5542 = Taylor1(constant_term(p_E_1) * constant_term(I_er_EM_2), order)
    tmp5543 = Taylor1(constant_term(p_E_2) * constant_term(I_er_EM_1), order)
    p_E_cross_I_er_EM_3 = Taylor1(constant_term(tmp5542) - constant_term(tmp5543), order)
    tmp5545 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_3), order)
    tmp5546 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_2), order)
    p_E_cross_I_p_E_1 = Taylor1(constant_term(tmp5545) - constant_term(tmp5546), order)
    tmp5548 = Taylor1(constant_term(p_E_3) * constant_term(I_p_E_1), order)
    tmp5549 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_3), order)
    p_E_cross_I_p_E_2 = Taylor1(constant_term(tmp5548) - constant_term(tmp5549), order)
    tmp5551 = Taylor1(constant_term(p_E_1) * constant_term(I_p_E_2), order)
    tmp5552 = Taylor1(constant_term(p_E_2) * constant_term(I_p_E_1), order)
    p_E_cross_I_p_E_3 = Taylor1(constant_term(tmp5551) - constant_term(tmp5552), order)
    tmp5556 = Taylor1(constant_term(sin_ϕ[ea, mo]) ^ float(constant_term(2)), order)
    tmp5557 = Taylor1(constant_term(7) * constant_term(tmp5556), order)
    one_minus_7sin2ϕEM = Taylor1(constant_term(one_t) - constant_term(tmp5557), order)
    two_sinϕEM = Taylor1(constant_term(2) * constant_term(sin_ϕ[ea, mo]), order)
    tmp5562 = Taylor1(constant_term(r_p1d2[mo, ea]) ^ float(constant_term(5)), order)
    N_MfigM_figE_factor_div_rEMp5 = Taylor1(constant_term(N_MfigM_figE_factor) / constant_term(tmp5562), order)
    tmp5564 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_1), order)
    tmp5565 = Taylor1(constant_term(er_EM_cross_I_p_E_1) + constant_term(p_E_cross_I_er_EM_1), order)
    tmp5566 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp5565), order)
    tmp5567 = Taylor1(constant_term(tmp5564) + constant_term(tmp5566), order)
    tmp5569 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_1), order)
    tmp5570 = Taylor1(constant_term(tmp5567) - constant_term(tmp5569), order)
    N_MfigM_figE_1 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp5570), order)
    tmp5572 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_2), order)
    tmp5573 = Taylor1(constant_term(er_EM_cross_I_p_E_2) + constant_term(p_E_cross_I_er_EM_2), order)
    tmp5574 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp5573), order)
    tmp5575 = Taylor1(constant_term(tmp5572) + constant_term(tmp5574), order)
    tmp5577 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_2), order)
    tmp5578 = Taylor1(constant_term(tmp5575) - constant_term(tmp5577), order)
    N_MfigM_figE_2 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp5578), order)
    tmp5580 = Taylor1(constant_term(one_minus_7sin2ϕEM) * constant_term(er_EM_cross_I_er_EM_3), order)
    tmp5581 = Taylor1(constant_term(er_EM_cross_I_p_E_3) + constant_term(p_E_cross_I_er_EM_3), order)
    tmp5582 = Taylor1(constant_term(two_sinϕEM) * constant_term(tmp5581), order)
    tmp5583 = Taylor1(constant_term(tmp5580) + constant_term(tmp5582), order)
    tmp5585 = Taylor1(constant_term(0.4) * constant_term(p_E_cross_I_p_E_3), order)
    tmp5586 = Taylor1(constant_term(tmp5583) - constant_term(tmp5585), order)
    N_MfigM_figE_3 = Taylor1(constant_term(N_MfigM_figE_factor_div_rEMp5) * constant_term(tmp5586), order)
    tmp5588 = Taylor1(constant_term(RotM[1, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp5589 = Taylor1(constant_term(RotM[1, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp5590 = Taylor1(constant_term(RotM[1, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp5591 = Taylor1(constant_term(tmp5589) + constant_term(tmp5590), order)
    N_1_LMF = Taylor1(constant_term(tmp5588) + constant_term(tmp5591), order)
    tmp5593 = Taylor1(constant_term(RotM[2, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp5594 = Taylor1(constant_term(RotM[2, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp5595 = Taylor1(constant_term(RotM[2, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp5596 = Taylor1(constant_term(tmp5594) + constant_term(tmp5595), order)
    N_2_LMF = Taylor1(constant_term(tmp5593) + constant_term(tmp5596), order)
    tmp5598 = Taylor1(constant_term(RotM[3, 1, mo]) * constant_term(N_MfigM[1]), order)
    tmp5599 = Taylor1(constant_term(RotM[3, 2, mo]) * constant_term(N_MfigM[2]), order)
    tmp5600 = Taylor1(constant_term(RotM[3, 3, mo]) * constant_term(N_MfigM[3]), order)
    tmp5601 = Taylor1(constant_term(tmp5599) + constant_term(tmp5600), order)
    N_3_LMF = Taylor1(constant_term(tmp5598) + constant_term(tmp5601), order)
    tmp5603 = Taylor1(constant_term(q[6N + 10]) - constant_term(q[6N + 4]), order)
    tmp5604 = Taylor1(constant_term(k_ν) * constant_term(tmp5603), order)
    tmp5605 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp5606 = Taylor1(constant_term(tmp5605) * constant_term(q[6N + 11]), order)
    N_cmb_1 = Taylor1(constant_term(tmp5604) - constant_term(tmp5606), order)
    tmp5608 = Taylor1(constant_term(q[6N + 11]) - constant_term(q[6N + 5]), order)
    tmp5609 = Taylor1(constant_term(k_ν) * constant_term(tmp5608), order)
    tmp5610 = Taylor1(constant_term(C_c_m_A_c) * constant_term(q[6N + 12]), order)
    tmp5611 = Taylor1(constant_term(tmp5610) * constant_term(q[6N + 10]), order)
    N_cmb_2 = Taylor1(constant_term(tmp5609) + constant_term(tmp5611), order)
    tmp5613 = Taylor1(constant_term(q[6N + 12]) - constant_term(q[6N + 6]), order)
    N_cmb_3 = Taylor1(constant_term(k_ν) * constant_term(tmp5613), order)
    tmp5615 = Taylor1(constant_term(μ[mo]) * constant_term(N_1_LMF), order)
    tmp5616 = Taylor1(constant_term(N_MfigM_figE_1) + constant_term(tmp5615), order)
    tmp5617 = Taylor1(constant_term(tmp5616) + constant_term(N_cmb_1), order)
    tmp5618 = Taylor1(constant_term(dIω_x) + constant_term(ωxIω_x), order)
    I_dω_1 = Taylor1(constant_term(tmp5617) - constant_term(tmp5618), order)
    tmp5620 = Taylor1(constant_term(μ[mo]) * constant_term(N_2_LMF), order)
    tmp5621 = Taylor1(constant_term(N_MfigM_figE_2) + constant_term(tmp5620), order)
    tmp5622 = Taylor1(constant_term(tmp5621) + constant_term(N_cmb_2), order)
    tmp5623 = Taylor1(constant_term(dIω_y) + constant_term(ωxIω_y), order)
    I_dω_2 = Taylor1(constant_term(tmp5622) - constant_term(tmp5623), order)
    tmp5625 = Taylor1(constant_term(μ[mo]) * constant_term(N_3_LMF), order)
    tmp5626 = Taylor1(constant_term(N_MfigM_figE_3) + constant_term(tmp5625), order)
    tmp5627 = Taylor1(constant_term(tmp5626) + constant_term(N_cmb_3), order)
    tmp5628 = Taylor1(constant_term(dIω_z) + constant_term(ωxIω_z), order)
    I_dω_3 = Taylor1(constant_term(tmp5627) - constant_term(tmp5628), order)
    Ic_ωc_1 = Taylor1(constant_term(I_c_t[1, 1]) * constant_term(q[6N + 10]), order)
    Ic_ωc_2 = Taylor1(constant_term(I_c_t[2, 2]) * constant_term(q[6N + 11]), order)
    Ic_ωc_3 = Taylor1(constant_term(I_c_t[3, 3]) * constant_term(q[6N + 12]), order)
    tmp5633 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_2), order)
    tmp5634 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_3), order)
    m_ωm_x_Icωc_1 = Taylor1(constant_term(tmp5633) - constant_term(tmp5634), order)
    tmp5636 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_3), order)
    tmp5637 = Taylor1(constant_term(q[6N + 6]) * constant_term(Ic_ωc_1), order)
    m_ωm_x_Icωc_2 = Taylor1(constant_term(tmp5636) - constant_term(tmp5637), order)
    tmp5639 = Taylor1(constant_term(q[6N + 5]) * constant_term(Ic_ωc_1), order)
    tmp5640 = Taylor1(constant_term(q[6N + 4]) * constant_term(Ic_ωc_2), order)
    m_ωm_x_Icωc_3 = Taylor1(constant_term(tmp5639) - constant_term(tmp5640), order)
    Ic_dωc_1 = Taylor1(constant_term(m_ωm_x_Icωc_1) - constant_term(N_cmb_1), order)
    Ic_dωc_2 = Taylor1(constant_term(m_ωm_x_Icωc_2) - constant_term(N_cmb_2), order)
    Ic_dωc_3 = Taylor1(constant_term(m_ωm_x_Icωc_3) - constant_term(N_cmb_3), order)
    tmp5645 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp5725 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp5646 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp5645), order)
    tmp5647 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp5726 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp5648 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp5647), order)
    tmp5649 = Taylor1(constant_term(tmp5646) + constant_term(tmp5648), order)
    tmp5650 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp5727 = Taylor1(cos(constant_term(q[6N + 2])), order)
    dq[6N + 1] = Taylor1(constant_term(tmp5649) / constant_term(tmp5650), order)
    tmp5652 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp5728 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp5653 = Taylor1(constant_term(q[6N + 4]) * constant_term(tmp5652), order)
    tmp5654 = Taylor1(sin(constant_term(q[6N + 3])), order)
    tmp5729 = Taylor1(cos(constant_term(q[6N + 3])), order)
    tmp5655 = Taylor1(constant_term(q[6N + 5]) * constant_term(tmp5654), order)
    dq[6N + 2] = Taylor1(constant_term(tmp5653) - constant_term(tmp5655), order)
    tmp5657 = Taylor1(cos(constant_term(q[6N + 2])), order)
    tmp5730 = Taylor1(sin(constant_term(q[6N + 2])), order)
    tmp5658 = Taylor1(constant_term(dq[6N + 1]) * constant_term(tmp5657), order)
    dq[6N + 3] = Taylor1(constant_term(q[6N + 6]) - constant_term(tmp5658), order)
    tmp5660 = Taylor1(constant_term(inv_I_m_t[1, 1]) * constant_term(I_dω_1), order)
    tmp5661 = Taylor1(constant_term(inv_I_m_t[1, 2]) * constant_term(I_dω_2), order)
    tmp5662 = Taylor1(constant_term(inv_I_m_t[1, 3]) * constant_term(I_dω_3), order)
    tmp5663 = Taylor1(constant_term(tmp5661) + constant_term(tmp5662), order)
    dq[6N + 4] = Taylor1(constant_term(tmp5660) + constant_term(tmp5663), order)
    tmp5665 = Taylor1(constant_term(inv_I_m_t[2, 1]) * constant_term(I_dω_1), order)
    tmp5666 = Taylor1(constant_term(inv_I_m_t[2, 2]) * constant_term(I_dω_2), order)
    tmp5667 = Taylor1(constant_term(inv_I_m_t[2, 3]) * constant_term(I_dω_3), order)
    tmp5668 = Taylor1(constant_term(tmp5666) + constant_term(tmp5667), order)
    dq[6N + 5] = Taylor1(constant_term(tmp5665) + constant_term(tmp5668), order)
    tmp5670 = Taylor1(constant_term(inv_I_m_t[3, 1]) * constant_term(I_dω_1), order)
    tmp5671 = Taylor1(constant_term(inv_I_m_t[3, 2]) * constant_term(I_dω_2), order)
    tmp5672 = Taylor1(constant_term(inv_I_m_t[3, 3]) * constant_term(I_dω_3), order)
    tmp5673 = Taylor1(constant_term(tmp5671) + constant_term(tmp5672), order)
    dq[6N + 6] = Taylor1(constant_term(tmp5670) + constant_term(tmp5673), order)
    tmp5675 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp5731 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp5676 = Taylor1(constant_term(ω_c_CE_2) / constant_term(tmp5675), order)
    dq[6N + 9] = Taylor1(-(constant_term(tmp5676)), order)
    tmp5678 = Taylor1(cos(constant_term(q[6N + 8])), order)
    tmp5732 = Taylor1(sin(constant_term(q[6N + 8])), order)
    tmp5679 = Taylor1(constant_term(dq[6N + 9]) * constant_term(tmp5678), order)
    dq[6N + 7] = Taylor1(constant_term(ω_c_CE_3) - constant_term(tmp5679), order)
    dq[6N + 8] = Taylor1(identity(constant_term(ω_c_CE_1)), order)
    dq[6N + 10] = Taylor1(constant_term(inv_I_c_t[1, 1]) * constant_term(Ic_dωc_1), order)
    dq[6N + 11] = Taylor1(constant_term(inv_I_c_t[2, 2]) * constant_term(Ic_dωc_2), order)
    dq[6N + 12] = Taylor1(constant_term(inv_I_c_t[3, 3]) * constant_term(Ic_dωc_3), order)
    dq[6N + 13] = Taylor1(identity(constant_term(zero_q_1)), order)
    for __idx = eachindex(q)
        (q[__idx]).coeffs[2] = (dq[__idx]).coeffs[1]
    end
    for ord = 1:order - 1
        ordnext = ord + 1
        TaylorSeries.identity!(N_MfigM[1], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[2], zero_q_1, ord)
        TaylorSeries.identity!(N_MfigM[3], zero_q_1, ord)
        TaylorSeries.identity!(ϕ_m, q[6N + 1], ord)
        TaylorSeries.identity!(θ_m, q[6N + 2], ord)
        TaylorSeries.identity!(ψ_m, q[6N + 3], ord)
        TaylorSeries.sincos!(tmp5684, tmp4665, ϕ_m, ord)
        TaylorSeries.sincos!(tmp5685, tmp4666, ψ_m, ord)
        TaylorSeries.mul!(tmp4667, tmp4665, tmp4666, ord)
        TaylorSeries.sincos!(tmp5686, tmp4668, θ_m, ord)
        TaylorSeries.sincos!(tmp4669, tmp5687, ϕ_m, ord)
        TaylorSeries.mul!(tmp4670, tmp4668, tmp4669, ord)
        TaylorSeries.sincos!(tmp4671, tmp5688, ψ_m, ord)
        TaylorSeries.mul!(tmp4672, tmp4670, tmp4671, ord)
        TaylorSeries.subst!(RotM[1, 1, mo], tmp4667, tmp4672, ord)
        TaylorSeries.sincos!(tmp5689, tmp4674, θ_m, ord)
        TaylorSeries.subst!(tmp4675, tmp4674, ord)
        TaylorSeries.sincos!(tmp5690, tmp4676, ψ_m, ord)
        TaylorSeries.mul!(tmp4677, tmp4675, tmp4676, ord)
        TaylorSeries.sincos!(tmp4678, tmp5691, ϕ_m, ord)
        TaylorSeries.mul!(tmp4679, tmp4677, tmp4678, ord)
        TaylorSeries.sincos!(tmp5692, tmp4680, ϕ_m, ord)
        TaylorSeries.sincos!(tmp4681, tmp5693, ψ_m, ord)
        TaylorSeries.mul!(tmp4682, tmp4680, tmp4681, ord)
        TaylorSeries.subst!(RotM[2, 1, mo], tmp4679, tmp4682, ord)
        TaylorSeries.sincos!(tmp4684, tmp5694, θ_m, ord)
        TaylorSeries.sincos!(tmp4685, tmp5695, ϕ_m, ord)
        TaylorSeries.mul!(RotM[3, 1, mo], tmp4684, tmp4685, ord)
        TaylorSeries.sincos!(tmp5696, tmp4687, ψ_m, ord)
        TaylorSeries.sincos!(tmp4688, tmp5697, ϕ_m, ord)
        TaylorSeries.mul!(tmp4689, tmp4687, tmp4688, ord)
        TaylorSeries.sincos!(tmp5698, tmp4690, θ_m, ord)
        TaylorSeries.sincos!(tmp5699, tmp4691, ϕ_m, ord)
        TaylorSeries.mul!(tmp4692, tmp4690, tmp4691, ord)
        TaylorSeries.sincos!(tmp4693, tmp5700, ψ_m, ord)
        TaylorSeries.mul!(tmp4694, tmp4692, tmp4693, ord)
        TaylorSeries.add!(RotM[1, 2, mo], tmp4689, tmp4694, ord)
        TaylorSeries.sincos!(tmp5701, tmp4696, θ_m, ord)
        TaylorSeries.sincos!(tmp5702, tmp4697, ϕ_m, ord)
        TaylorSeries.mul!(tmp4698, tmp4696, tmp4697, ord)
        TaylorSeries.sincos!(tmp5703, tmp4699, ψ_m, ord)
        TaylorSeries.mul!(tmp4700, tmp4698, tmp4699, ord)
        TaylorSeries.sincos!(tmp4701, tmp5704, ϕ_m, ord)
        TaylorSeries.sincos!(tmp4702, tmp5705, ψ_m, ord)
        TaylorSeries.mul!(tmp4703, tmp4701, tmp4702, ord)
        TaylorSeries.subst!(RotM[2, 2, mo], tmp4700, tmp4703, ord)
        TaylorSeries.sincos!(tmp5706, tmp4705, ϕ_m, ord)
        TaylorSeries.subst!(tmp4706, tmp4705, ord)
        TaylorSeries.sincos!(tmp4707, tmp5707, θ_m, ord)
        TaylorSeries.mul!(RotM[3, 2, mo], tmp4706, tmp4707, ord)
        TaylorSeries.sincos!(tmp4709, tmp5708, θ_m, ord)
        TaylorSeries.sincos!(tmp4710, tmp5709, ψ_m, ord)
        TaylorSeries.mul!(RotM[1, 3, mo], tmp4709, tmp4710, ord)
        TaylorSeries.sincos!(tmp5710, tmp4712, ψ_m, ord)
        TaylorSeries.sincos!(tmp4713, tmp5711, θ_m, ord)
        TaylorSeries.mul!(RotM[2, 3, mo], tmp4712, tmp4713, ord)
        TaylorSeries.sincos!(tmp5712, RotM[3, 3, mo], θ_m, ord)
        TaylorSeries.identity!(ϕ_c, q[6N + 7], ord)
        TaylorSeries.sincos!(tmp5713, tmp4716, ϕ_c, ord)
        TaylorSeries.mul!(tmp4717, RotM[1, 1, mo], tmp4716, ord)
        TaylorSeries.sincos!(tmp4718, tmp5714, ϕ_c, ord)
        TaylorSeries.mul!(tmp4719, RotM[1, 2, mo], tmp4718, ord)
        TaylorSeries.add!(mantlef2coref[1, 1], tmp4717, tmp4719, ord)
        TaylorSeries.subst!(tmp4721, RotM[1, 1, mo], ord)
        TaylorSeries.sincos!(tmp4722, tmp5715, ϕ_c, ord)
        TaylorSeries.mul!(tmp4723, tmp4721, tmp4722, ord)
        TaylorSeries.sincos!(tmp5716, tmp4724, ϕ_c, ord)
        TaylorSeries.mul!(tmp4725, RotM[1, 2, mo], tmp4724, ord)
        TaylorSeries.add!(mantlef2coref[2, 1], tmp4723, tmp4725, ord)
        TaylorSeries.identity!(mantlef2coref[3, 1], RotM[1, 3, mo], ord)
        TaylorSeries.sincos!(tmp5717, tmp4727, ϕ_c, ord)
        TaylorSeries.mul!(tmp4728, RotM[2, 1, mo], tmp4727, ord)
        TaylorSeries.sincos!(tmp4729, tmp5718, ϕ_c, ord)
        TaylorSeries.mul!(tmp4730, RotM[2, 2, mo], tmp4729, ord)
        TaylorSeries.add!(mantlef2coref[1, 2], tmp4728, tmp4730, ord)
        TaylorSeries.subst!(tmp4732, RotM[2, 1, mo], ord)
        TaylorSeries.sincos!(tmp4733, tmp5719, ϕ_c, ord)
        TaylorSeries.mul!(tmp4734, tmp4732, tmp4733, ord)
        TaylorSeries.sincos!(tmp5720, tmp4735, ϕ_c, ord)
        TaylorSeries.mul!(tmp4736, RotM[2, 2, mo], tmp4735, ord)
        TaylorSeries.add!(mantlef2coref[2, 2], tmp4734, tmp4736, ord)
        TaylorSeries.identity!(mantlef2coref[3, 2], RotM[2, 3, mo], ord)
        TaylorSeries.sincos!(tmp5721, tmp4738, ϕ_c, ord)
        TaylorSeries.mul!(tmp4739, RotM[3, 1, mo], tmp4738, ord)
        TaylorSeries.sincos!(tmp4740, tmp5722, ϕ_c, ord)
        TaylorSeries.mul!(tmp4741, RotM[3, 2, mo], tmp4740, ord)
        TaylorSeries.add!(mantlef2coref[1, 3], tmp4739, tmp4741, ord)
        TaylorSeries.subst!(tmp4743, RotM[3, 1, mo], ord)
        TaylorSeries.sincos!(tmp4744, tmp5723, ϕ_c, ord)
        TaylorSeries.mul!(tmp4745, tmp4743, tmp4744, ord)
        TaylorSeries.sincos!(tmp5724, tmp4746, ϕ_c, ord)
        TaylorSeries.mul!(tmp4747, RotM[3, 2, mo], tmp4746, ord)
        TaylorSeries.add!(mantlef2coref[2, 3], tmp4745, tmp4747, ord)
        TaylorSeries.identity!(mantlef2coref[3, 3], RotM[3, 3, mo], ord)
        TaylorSeries.mul!(tmp4749, mantlef2coref[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp4750, mantlef2coref[1, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp4751, mantlef2coref[1, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp4752, tmp4750, tmp4751, ord)
        TaylorSeries.add!(ω_c_CE_1, tmp4749, tmp4752, ord)
        TaylorSeries.mul!(tmp4754, mantlef2coref[2, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp4755, mantlef2coref[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp4756, mantlef2coref[2, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp4757, tmp4755, tmp4756, ord)
        TaylorSeries.add!(ω_c_CE_2, tmp4754, tmp4757, ord)
        TaylorSeries.mul!(tmp4759, mantlef2coref[3, 1], q[6N + 10], ord)
        TaylorSeries.mul!(tmp4760, mantlef2coref[3, 2], q[6N + 11], ord)
        TaylorSeries.mul!(tmp4761, mantlef2coref[3, 3], q[6N + 12], ord)
        TaylorSeries.add!(tmp4762, tmp4760, tmp4761, ord)
        TaylorSeries.add!(ω_c_CE_3, tmp4759, tmp4762, ord)
        TaylorSeries.identity!(J2_t[su], J2S_t, ord)
        TaylorSeries.identity!(J2_t[ea], J2E_t, ord)
        for j = 1:N
            TaylorSeries.identity!(newtonX[j], zero_q_1, ord)
            TaylorSeries.identity!(newtonY[j], zero_q_1, ord)
            TaylorSeries.identity!(newtonZ[j], zero_q_1, ord)
            TaylorSeries.identity!(newtonianNb_Potential[j], zero_q_1, ord)
            TaylorSeries.identity!(dq[3j - 2], q[3 * (N + j) - 2], ord)
            TaylorSeries.identity!(dq[3j - 1], q[3 * (N + j) - 1], ord)
            TaylorSeries.identity!(dq[3j], q[3 * (N + j)], ord)
        end
        for j = 1:N_ext
            TaylorSeries.identity!(accX[j], zero_q_1, ord)
            TaylorSeries.identity!(accY[j], zero_q_1, ord)
            TaylorSeries.identity!(accZ[j], zero_q_1, ord)
        end
        #= REPL[19]:380 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.subst!(X[i, j], q[3i - 2], q[3j - 2], ord)
                        TaylorSeries.subst!(Y[i, j], q[3i - 1], q[3j - 1], ord)
                        TaylorSeries.subst!(Z[i, j], q[3i], q[3j], ord)
                        TaylorSeries.subst!(U[i, j], dq[3i - 2], dq[3j - 2], ord)
                        TaylorSeries.subst!(V[i, j], dq[3i - 1], dq[3j - 1], ord)
                        TaylorSeries.subst!(W[i, j], dq[3i], dq[3j], ord)
                        TaylorSeries.mul!(tmp4771[3j - 2], 4, dq[3j - 2], ord)
                        TaylorSeries.mul!(tmp4773[3i - 2], 3, dq[3i - 2], ord)
                        TaylorSeries.subst!(_4U_m_3X[i, j], tmp4771[3j - 2], tmp4773[3i - 2], ord)
                        TaylorSeries.mul!(tmp4776[3j - 1], 4, dq[3j - 1], ord)
                        TaylorSeries.mul!(tmp4778[3i - 1], 3, dq[3i - 1], ord)
                        TaylorSeries.subst!(_4V_m_3Y[i, j], tmp4776[3j - 1], tmp4778[3i - 1], ord)
                        TaylorSeries.mul!(tmp4781[3j], 4, dq[3j], ord)
                        TaylorSeries.mul!(tmp4783[3i], 3, dq[3i], ord)
                        TaylorSeries.subst!(_4W_m_3Z[i, j], tmp4781[3j], tmp4783[3i], ord)
                        TaylorSeries.mul!(pn2x[i, j], X[i, j], _4U_m_3X[i, j], ord)
                        TaylorSeries.mul!(pn2y[i, j], Y[i, j], _4V_m_3Y[i, j], ord)
                        TaylorSeries.mul!(pn2z[i, j], Z[i, j], _4W_m_3Z[i, j], ord)
                        TaylorSeries.mul!(UU[i, j], dq[3i - 2], dq[3j - 2], ord)
                        TaylorSeries.mul!(VV[i, j], dq[3i - 1], dq[3j - 1], ord)
                        TaylorSeries.mul!(WW[i, j], dq[3i], dq[3j], ord)
                        TaylorSeries.add!(tmp4791[i, j], UU[i, j], VV[i, j], ord)
                        TaylorSeries.add!(vi_dot_vj[i, j], tmp4791[i, j], WW[i, j], ord)
                        TaylorSeries.pow!(tmp4794[i, j], X[i, j], 2, ord)
                        TaylorSeries.pow!(tmp4796[i, j], Y[i, j], 2, ord)
                        TaylorSeries.add!(tmp4797[i, j], tmp4794[i, j], tmp4796[i, j], ord)
                        TaylorSeries.pow!(tmp4799[i, j], Z[i, j], 2, ord)
                        TaylorSeries.add!(r_p2[i, j], tmp4797[i, j], tmp4799[i, j], ord)
                        TaylorSeries.sqrt!(r_p1d2[i, j], r_p2[i, j], ord)
                        TaylorSeries.pow!(r_p3d2[i, j], r_p2[i, j], 1.5, ord)
                        TaylorSeries.pow!(r_p7d2[i, j], r_p2[i, j], 3.5, ord)
                        TaylorSeries.div!(newtonianCoeff[i, j], μ[i], r_p3d2[i, j], ord)
                        TaylorSeries.add!(tmp4807[i, j], pn2x[i, j], pn2y[i, j], ord)
                        TaylorSeries.add!(tmp4808[i, j], tmp4807[i, j], pn2z[i, j], ord)
                        TaylorSeries.mul!(pn2[i, j], newtonianCoeff[i, j], tmp4808[i, j], ord)
                        TaylorSeries.mul!(newton_acc_X[i, j], X[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.mul!(newton_acc_Y[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.mul!(newton_acc_Z[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.div!(newtonian1b_Potential[i, j], μ[i], r_p1d2[i, j], ord)
                        TaylorSeries.mul!(pn3[i, j], 3.5, newtonian1b_Potential[i, j], ord)
                        TaylorSeries.mul!(U_t_pn2[i, j], pn2[i, j], U[i, j], ord)
                        TaylorSeries.mul!(V_t_pn2[i, j], pn2[i, j], V[i, j], ord)
                        TaylorSeries.mul!(W_t_pn2[i, j], pn2[i, j], W[i, j], ord)
                        TaylorSeries.mul!(tmp4819[i, j], X[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_001[i, j], newtonX[j], tmp4819[i, j], ord)
                        TaylorSeries.identity!(newtonX[j], temp_001[i, j], ord)
                        TaylorSeries.mul!(tmp4821[i, j], Y[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_002[i, j], newtonY[j], tmp4821[i, j], ord)
                        TaylorSeries.identity!(newtonY[j], temp_002[i, j], ord)
                        TaylorSeries.mul!(tmp4823[i, j], Z[i, j], newtonianCoeff[i, j], ord)
                        TaylorSeries.add!(temp_003[i, j], newtonZ[j], tmp4823[i, j], ord)
                        TaylorSeries.identity!(newtonZ[j], temp_003[i, j], ord)
                        TaylorSeries.add!(temp_004[i, j], newtonianNb_Potential[j], newtonian1b_Potential[i, j], ord)
                        TaylorSeries.identity!(newtonianNb_Potential[j], temp_004[i, j], ord)
                    end
                end
                TaylorSeries.pow!(tmp4827[3j - 2], dq[3j - 2], 2, ord)
                TaylorSeries.pow!(tmp4829[3j - 1], dq[3j - 1], 2, ord)
                TaylorSeries.add!(tmp4830[3j - 2], tmp4827[3j - 2], tmp4829[3j - 1], ord)
                TaylorSeries.pow!(tmp4832[3j], dq[3j], 2, ord)
                TaylorSeries.add!(v2[j], tmp4830[3j - 2], tmp4832[3j], ord)
            end
        TaylorSeries.add!(tmp4834, I_M_t[1, 1], I_M_t[2, 2], ord)
        TaylorSeries.div!(tmp4836, tmp4834, 2, ord)
        TaylorSeries.subst!(tmp4837, I_M_t[3, 3], tmp4836, ord)
        TaylorSeries.div!(J2M_t, tmp4837, μ[mo], ord)
        TaylorSeries.subst!(tmp4839, I_M_t[2, 2], I_M_t[1, 1], ord)
        TaylorSeries.div!(tmp4840, tmp4839, μ[mo], ord)
        TaylorSeries.div!(C22M_t, tmp4840, 4, ord)
        TaylorSeries.subst!(tmp4843, I_M_t[1, 3], ord)
        TaylorSeries.div!(C21M_t, tmp4843, μ[mo], ord)
        TaylorSeries.subst!(tmp4845, I_M_t[3, 2], ord)
        TaylorSeries.div!(S21M_t, tmp4845, μ[mo], ord)
        TaylorSeries.subst!(tmp4847, I_M_t[2, 1], ord)
        TaylorSeries.div!(tmp4848, tmp4847, μ[mo], ord)
        TaylorSeries.div!(S22M_t, tmp4848, 2, ord)
        TaylorSeries.identity!(J2_t[mo], J2M_t, ord)
        #= REPL[19]:474 =# Threads.@threads for j = 1:N_ext
                for i = 1:N_ext
                    if i == j
                        continue
                    else
                        if UJ_interaction[i, j]
                            TaylorSeries.mul!(X_bf_1[i, j], X[i, j], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(X_bf_2[i, j], Y[i, j], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(X_bf_3[i, j], Z[i, j], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(Y_bf_1[i, j], X[i, j], RotM[2, 1, j], ord)
                            TaylorSeries.mul!(Y_bf_2[i, j], Y[i, j], RotM[2, 2, j], ord)
                            TaylorSeries.mul!(Y_bf_3[i, j], Z[i, j], RotM[2, 3, j], ord)
                            TaylorSeries.mul!(Z_bf_1[i, j], X[i, j], RotM[3, 1, j], ord)
                            TaylorSeries.mul!(Z_bf_2[i, j], Y[i, j], RotM[3, 2, j], ord)
                            TaylorSeries.mul!(Z_bf_3[i, j], Z[i, j], RotM[3, 3, j], ord)
                            TaylorSeries.add!(tmp4860[i, j], X_bf_1[i, j], X_bf_2[i, j], ord)
                            TaylorSeries.add!(X_bf[i, j], tmp4860[i, j], X_bf_3[i, j], ord)
                            TaylorSeries.add!(tmp4862[i, j], Y_bf_1[i, j], Y_bf_2[i, j], ord)
                            TaylorSeries.add!(Y_bf[i, j], tmp4862[i, j], Y_bf_3[i, j], ord)
                            TaylorSeries.add!(tmp4864[i, j], Z_bf_1[i, j], Z_bf_2[i, j], ord)
                            TaylorSeries.add!(Z_bf[i, j], tmp4864[i, j], Z_bf_3[i, j], ord)
                            TaylorSeries.div!(sin_ϕ[i, j], Z_bf[i, j], r_p1d2[i, j], ord)
                            TaylorSeries.pow!(tmp4868[i, j], X_bf[i, j], 2, ord)
                            TaylorSeries.pow!(tmp4870[i, j], Y_bf[i, j], 2, ord)
                            TaylorSeries.add!(tmp4871[i, j], tmp4868[i, j], tmp4870[i, j], ord)
                            TaylorSeries.sqrt!(r_xy[i, j], tmp4871[i, j], ord)
                            TaylorSeries.div!(cos_ϕ[i, j], r_xy[i, j], r_p1d2[i, j], ord)
                            TaylorSeries.div!(sin_λ[i, j], Y_bf[i, j], r_xy[i, j], ord)
                            TaylorSeries.div!(cos_λ[i, j], X_bf[i, j], r_xy[i, j], ord)
                            TaylorSeries.identity!(P_n[i, j, 1], one_t, ord)
                            TaylorSeries.identity!(P_n[i, j, 2], sin_ϕ[i, j], ord)
                            TaylorSeries.identity!(dP_n[i, j, 1], zero_q_1, ord)
                            TaylorSeries.identity!(dP_n[i, j, 2], one_t, ord)
                            for n = 2:n1SEM[j]
                                TaylorSeries.mul!(tmp4876[i, j, n], P_n[i, j, n], sin_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp4877[i, j, n], tmp4876[i, j, n], fact1_jsem[n], ord)
                                TaylorSeries.mul!(tmp4878[i, j, n - 1], P_n[i, j, n - 1], fact2_jsem[n], ord)
                                TaylorSeries.subst!(P_n[i, j, n + 1], tmp4877[i, j, n], tmp4878[i, j, n - 1], ord)
                                TaylorSeries.mul!(tmp4880[i, j, n], dP_n[i, j, n], sin_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp4881[i, j, n], P_n[i, j, n], fact3_jsem[n], ord)
                                TaylorSeries.add!(dP_n[i, j, n + 1], tmp4880[i, j, n], tmp4881[i, j, n], ord)
                                TaylorSeries.pow!(temp_rn[i, j, n], r_p1d2[i, j], fact5_jsem[n], ord)
                            end
                            TaylorSeries.pow!(r_p4[i, j], r_p2[i, j], 2, ord)
                            TaylorSeries.mul!(tmp4886[i, j, 3], P_n[i, j, 3], fact4_jsem[2], ord)
                            TaylorSeries.mul!(tmp4887[i, j, 3], tmp4886[i, j, 3], J2_t[j], ord)
                            TaylorSeries.div!(F_J_ξ[i, j], tmp4887[i, j, 3], r_p4[i, j], ord)
                            TaylorSeries.subst!(tmp4889[i, j, 3], dP_n[i, j, 3], ord)
                            TaylorSeries.mul!(tmp4890[i, j, 3], tmp4889[i, j, 3], cos_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp4891[i, j, 3], tmp4890[i, j, 3], J2_t[j], ord)
                            TaylorSeries.div!(F_J_ζ[i, j], tmp4891[i, j, 3], r_p4[i, j], ord)
                            TaylorSeries.identity!(F_J_ξ_36[i, j], zero_q_1, ord)
                            TaylorSeries.identity!(F_J_ζ_36[i, j], zero_q_1, ord)
                            for n = 3:n1SEM[j]
                                TaylorSeries.mul!(tmp4893[i, j, n + 1], P_n[i, j, n + 1], fact4_jsem[n], ord)
                                TaylorSeries.mul!(tmp4894[i, j, n + 1], tmp4893[i, j, n + 1], JSEM[j, n], ord)
                                TaylorSeries.div!(tmp4895[i, j, n + 1], tmp4894[i, j, n + 1], temp_rn[i, j, n], ord)
                                TaylorSeries.add!(temp_fjξ[i, j, n], tmp4895[i, j, n + 1], F_J_ξ_36[i, j], ord)
                                TaylorSeries.subst!(tmp4897[i, j, n + 1], dP_n[i, j, n + 1], ord)
                                TaylorSeries.mul!(tmp4898[i, j, n + 1], tmp4897[i, j, n + 1], cos_ϕ[i, j], ord)
                                TaylorSeries.mul!(tmp4899[i, j, n + 1], tmp4898[i, j, n + 1], JSEM[j, n], ord)
                                TaylorSeries.div!(tmp4900[i, j, n + 1], tmp4899[i, j, n + 1], temp_rn[i, j, n], ord)
                                TaylorSeries.add!(temp_fjζ[i, j, n], tmp4900[i, j, n + 1], F_J_ζ_36[i, j], ord)
                                TaylorSeries.identity!(F_J_ξ_36[i, j], temp_fjξ[i, j, n], ord)
                                TaylorSeries.identity!(F_J_ζ_36[i, j], temp_fjζ[i, j, n], ord)
                            end
                            if j == mo
                                for m = 1:n1SEM[mo]
                                    if m == 1
                                        TaylorSeries.identity!(sin_mλ[i, j, 1], sin_λ[i, j], ord)
                                        TaylorSeries.identity!(cos_mλ[i, j, 1], cos_λ[i, j], ord)
                                        TaylorSeries.identity!(secϕ_P_nm[i, j, 1, 1], one_t, ord)
                                        TaylorSeries.identity!(P_nm[i, j, 1, 1], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(cosϕ_dP_nm[i, j, 1, 1], sin_ϕ[i, j], lnm3[1], ord)
                                    else
                                        TaylorSeries.mul!(tmp4903[i, j, m - 1], cos_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                        TaylorSeries.mul!(tmp4904[i, j, m - 1], sin_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                        TaylorSeries.add!(sin_mλ[i, j, m], tmp4903[i, j, m - 1], tmp4904[i, j, m - 1], ord)
                                        TaylorSeries.mul!(tmp4906[i, j, m - 1], cos_mλ[i, j, m - 1], cos_mλ[i, j, 1], ord)
                                        TaylorSeries.mul!(tmp4907[i, j, m - 1], sin_mλ[i, j, m - 1], sin_mλ[i, j, 1], ord)
                                        TaylorSeries.subst!(cos_mλ[i, j, m], tmp4906[i, j, m - 1], tmp4907[i, j, m - 1], ord)
                                        TaylorSeries.mul!(tmp4909[i, j, m - 1, m - 1], secϕ_P_nm[i, j, m - 1, m - 1], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(secϕ_P_nm[i, j, m, m], tmp4909[i, j, m - 1, m - 1], lnm5[m], ord)
                                        TaylorSeries.mul!(P_nm[i, j, m, m], secϕ_P_nm[i, j, m, m], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp4912[i, j, m, m], secϕ_P_nm[i, j, m, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(cosϕ_dP_nm[i, j, m, m], tmp4912[i, j, m, m], lnm3[m], ord)
                                    end
                                    for n = m + 1:n1SEM[mo]
                                        if n == m + 1
                                            TaylorSeries.mul!(tmp4914[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                            TaylorSeries.mul!(secϕ_P_nm[i, j, n, m], tmp4914[i, j, n - 1, m], lnm1[n, m], ord)
                                        else
                                            TaylorSeries.mul!(tmp4916[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], sin_ϕ[i, j], ord)
                                            TaylorSeries.mul!(tmp4917[i, j, n - 1, m], tmp4916[i, j, n - 1, m], lnm1[n, m], ord)
                                            TaylorSeries.mul!(tmp4918[i, j, n - 2, m], secϕ_P_nm[i, j, n - 2, m], lnm2[n, m], ord)
                                            TaylorSeries.add!(secϕ_P_nm[i, j, n, m], tmp4917[i, j, n - 1, m], tmp4918[i, j, n - 2, m], ord)
                                        end
                                        TaylorSeries.mul!(P_nm[i, j, n, m], secϕ_P_nm[i, j, n, m], cos_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp4921[i, j, n, m], secϕ_P_nm[i, j, n, m], sin_ϕ[i, j], ord)
                                        TaylorSeries.mul!(tmp4922[i, j, n, m], tmp4921[i, j, n, m], lnm3[n], ord)
                                        TaylorSeries.mul!(tmp4923[i, j, n - 1, m], secϕ_P_nm[i, j, n - 1, m], lnm4[n, m], ord)
                                        TaylorSeries.add!(cosϕ_dP_nm[i, j, n, m], tmp4922[i, j, n, m], tmp4923[i, j, n - 1, m], ord)
                                    end
                                end
                                TaylorSeries.mul!(tmp4925[i, j, 2, 1], P_nm[i, j, 2, 1], lnm6[2], ord)
                                TaylorSeries.mul!(tmp4926[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp4927[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.add!(tmp4928[i, j, 1], tmp4926[i, j, 1], tmp4927[i, j, 1], ord)
                                TaylorSeries.mul!(tmp4929[i, j, 2, 1], tmp4925[i, j, 2, 1], tmp4928[i, j, 1], ord)
                                TaylorSeries.mul!(tmp4930[i, j, 2, 2], P_nm[i, j, 2, 2], lnm6[2], ord)
                                TaylorSeries.mul!(tmp4931[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp4932[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.add!(tmp4933[i, j, 2], tmp4931[i, j, 2], tmp4932[i, j, 2], ord)
                                TaylorSeries.mul!(tmp4934[i, j, 2, 2], tmp4930[i, j, 2, 2], tmp4933[i, j, 2], ord)
                                TaylorSeries.add!(tmp4935[i, j, 2, 1], tmp4929[i, j, 2, 1], tmp4934[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_ξ[i, j], tmp4935[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.mul!(tmp4937[i, j, 2, 1], secϕ_P_nm[i, j, 2, 1], lnm7[1], ord)
                                TaylorSeries.mul!(tmp4938[i, j, 1], S21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp4939[i, j, 1], C21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.subst!(tmp4940[i, j, 1], tmp4938[i, j, 1], tmp4939[i, j, 1], ord)
                                TaylorSeries.mul!(tmp4941[i, j, 2, 1], tmp4937[i, j, 2, 1], tmp4940[i, j, 1], ord)
                                TaylorSeries.mul!(tmp4942[i, j, 2, 2], secϕ_P_nm[i, j, 2, 2], lnm7[2], ord)
                                TaylorSeries.mul!(tmp4943[i, j, 2], S22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp4944[i, j, 2], C22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.subst!(tmp4945[i, j, 2], tmp4943[i, j, 2], tmp4944[i, j, 2], ord)
                                TaylorSeries.mul!(tmp4946[i, j, 2, 2], tmp4942[i, j, 2, 2], tmp4945[i, j, 2], ord)
                                TaylorSeries.add!(tmp4947[i, j, 2, 1], tmp4941[i, j, 2, 1], tmp4946[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_η[i, j], tmp4947[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.mul!(tmp4949[i, j, 1], C21M_t, cos_mλ[i, j, 1], ord)
                                TaylorSeries.mul!(tmp4950[i, j, 1], S21M_t, sin_mλ[i, j, 1], ord)
                                TaylorSeries.add!(tmp4951[i, j, 1], tmp4949[i, j, 1], tmp4950[i, j, 1], ord)
                                TaylorSeries.mul!(tmp4952[i, j, 2, 1], cosϕ_dP_nm[i, j, 2, 1], tmp4951[i, j, 1], ord)
                                TaylorSeries.mul!(tmp4953[i, j, 2], C22M_t, cos_mλ[i, j, 2], ord)
                                TaylorSeries.mul!(tmp4954[i, j, 2], S22M_t, sin_mλ[i, j, 2], ord)
                                TaylorSeries.add!(tmp4955[i, j, 2], tmp4953[i, j, 2], tmp4954[i, j, 2], ord)
                                TaylorSeries.mul!(tmp4956[i, j, 2, 2], cosϕ_dP_nm[i, j, 2, 2], tmp4955[i, j, 2], ord)
                                TaylorSeries.add!(tmp4957[i, j, 2, 1], tmp4952[i, j, 2, 1], tmp4956[i, j, 2, 2], ord)
                                TaylorSeries.div!(F_CS_ζ[i, j], tmp4957[i, j, 2, 1], r_p4[i, j], ord)
                                TaylorSeries.identity!(F_CS_ξ_36[i, j], zero_q_1, ord)
                                TaylorSeries.identity!(F_CS_η_36[i, j], zero_q_1, ord)
                                TaylorSeries.identity!(F_CS_ζ_36[i, j], zero_q_1, ord)
                                for n = 3:n2M
                                    for m = 1:n
                                        TaylorSeries.mul!(Cnm_cosmλ[i, j, n, m], CM[n, m], cos_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Cnm_sinmλ[i, j, n, m], CM[n, m], sin_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Snm_cosmλ[i, j, n, m], SM[n, m], cos_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(Snm_sinmλ[i, j, n, m], SM[n, m], sin_mλ[i, j, m], ord)
                                        TaylorSeries.mul!(tmp4963[i, j, n, m], P_nm[i, j, n, m], lnm6[n], ord)
                                        TaylorSeries.add!(tmp4964[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp4965[i, j, n, m], tmp4963[i, j, n, m], tmp4964[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp4966[i, j, n, m], tmp4965[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_ξ[i, j, n, m], tmp4966[i, j, n, m], F_CS_ξ_36[i, j], ord)
                                        TaylorSeries.mul!(tmp4968[i, j, n, m], secϕ_P_nm[i, j, n, m], lnm7[m], ord)
                                        TaylorSeries.subst!(tmp4969[i, j, n, m], Snm_cosmλ[i, j, n, m], Cnm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp4970[i, j, n, m], tmp4968[i, j, n, m], tmp4969[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp4971[i, j, n, m], tmp4970[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_η[i, j, n, m], tmp4971[i, j, n, m], F_CS_η_36[i, j], ord)
                                        TaylorSeries.add!(tmp4973[i, j, n, m], Cnm_cosmλ[i, j, n, m], Snm_sinmλ[i, j, n, m], ord)
                                        TaylorSeries.mul!(tmp4974[i, j, n, m], cosϕ_dP_nm[i, j, n, m], tmp4973[i, j, n, m], ord)
                                        TaylorSeries.div!(tmp4975[i, j, n, m], tmp4974[i, j, n, m], temp_rn[i, j, n], ord)
                                        TaylorSeries.add!(temp_CS_ζ[i, j, n, m], tmp4975[i, j, n, m], F_CS_ζ_36[i, j], ord)
                                        TaylorSeries.identity!(F_CS_ξ_36[i, j], temp_CS_ξ[i, j, n, m], ord)
                                        TaylorSeries.identity!(F_CS_η_36[i, j], temp_CS_η[i, j, n, m], ord)
                                        TaylorSeries.identity!(F_CS_ζ_36[i, j], temp_CS_ζ[i, j, n, m], ord)
                                    end
                                end
                                TaylorSeries.add!(tmp4977[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                                TaylorSeries.add!(tmp4978[i, j], F_CS_ξ[i, j], F_CS_ξ_36[i, j], ord)
                                TaylorSeries.add!(F_JCS_ξ[i, j], tmp4977[i, j], tmp4978[i, j], ord)
                                TaylorSeries.add!(F_JCS_η[i, j], F_CS_η[i, j], F_CS_η_36[i, j], ord)
                                TaylorSeries.add!(tmp4981[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                                TaylorSeries.add!(tmp4982[i, j], F_CS_ζ[i, j], F_CS_ζ_36[i, j], ord)
                                TaylorSeries.add!(F_JCS_ζ[i, j], tmp4981[i, j], tmp4982[i, j], ord)
                            else
                                TaylorSeries.add!(F_JCS_ξ[i, j], F_J_ξ[i, j], F_J_ξ_36[i, j], ord)
                                TaylorSeries.identity!(F_JCS_η[i, j], zero_q_1, ord)
                                TaylorSeries.add!(F_JCS_ζ[i, j], F_J_ζ[i, j], F_J_ζ_36[i, j], ord)
                            end
                            TaylorSeries.mul!(Rb2p[i, j, 1, 1], cos_ϕ[i, j], cos_λ[i, j], ord)
                            TaylorSeries.subst!(Rb2p[i, j, 2, 1], sin_λ[i, j], ord)
                            TaylorSeries.subst!(tmp4988[i, j], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 3, 1], tmp4988[i, j], cos_λ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 1, 2], cos_ϕ[i, j], sin_λ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 2, 2], cos_λ[i, j], ord)
                            TaylorSeries.subst!(tmp4991[i, j], sin_ϕ[i, j], ord)
                            TaylorSeries.mul!(Rb2p[i, j, 3, 2], tmp4991[i, j], sin_λ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 1, 3], sin_ϕ[i, j], ord)
                            TaylorSeries.identity!(Rb2p[i, j, 2, 3], zero_q_1, ord)
                            TaylorSeries.identity!(Rb2p[i, j, 3, 3], cos_ϕ[i, j], ord)
                            TaylorSeries.mul!(tmp4993[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp4994[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp4995[i, j, 1, 1], tmp4993[i, j, 1, 1], tmp4994[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp4996[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 1], tmp4995[i, j, 1, 1], tmp4996[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp4998[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp4999[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp5000[i, j, 2, 1], tmp4998[i, j, 2, 1], tmp4999[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp5001[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 1], tmp5000[i, j, 2, 1], tmp5001[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp5003[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 1, j], ord)
                            TaylorSeries.mul!(tmp5004[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 1, j], ord)
                            TaylorSeries.add!(tmp5005[i, j, 3, 1], tmp5003[i, j, 3, 1], tmp5004[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp5006[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 1, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 1], tmp5005[i, j, 3, 1], tmp5006[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp5008[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp5009[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp5010[i, j, 1, 1], tmp5008[i, j, 1, 1], tmp5009[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp5011[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 2], tmp5010[i, j, 1, 1], tmp5011[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp5013[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp5014[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp5015[i, j, 2, 1], tmp5013[i, j, 2, 1], tmp5014[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp5016[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 2], tmp5015[i, j, 2, 1], tmp5016[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp5018[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 2, j], ord)
                            TaylorSeries.mul!(tmp5019[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 2, j], ord)
                            TaylorSeries.add!(tmp5020[i, j, 3, 1], tmp5018[i, j, 3, 1], tmp5019[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp5021[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 2, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 2], tmp5020[i, j, 3, 1], tmp5021[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp5023[i, j, 1, 1], Rb2p[i, j, 1, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp5024[i, j, 1, 2], Rb2p[i, j, 1, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp5025[i, j, 1, 1], tmp5023[i, j, 1, 1], tmp5024[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp5026[i, j, 1, 3], Rb2p[i, j, 1, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 1, 3], tmp5025[i, j, 1, 1], tmp5026[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp5028[i, j, 2, 1], Rb2p[i, j, 2, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp5029[i, j, 2, 2], Rb2p[i, j, 2, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp5030[i, j, 2, 1], tmp5028[i, j, 2, 1], tmp5029[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp5031[i, j, 2, 3], Rb2p[i, j, 2, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 2, 3], tmp5030[i, j, 2, 1], tmp5031[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp5033[i, j, 3, 1], Rb2p[i, j, 3, 1], RotM[1, 3, j], ord)
                            TaylorSeries.mul!(tmp5034[i, j, 3, 2], Rb2p[i, j, 3, 2], RotM[2, 3, j], ord)
                            TaylorSeries.add!(tmp5035[i, j, 3, 1], tmp5033[i, j, 3, 1], tmp5034[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp5036[i, j, 3, 3], Rb2p[i, j, 3, 3], RotM[3, 3, j], ord)
                            TaylorSeries.add!(Gc2p[i, j, 3, 3], tmp5035[i, j, 3, 1], tmp5036[i, j, 3, 3], ord)
                            TaylorSeries.mul!(tmp5038[i, j, 1, 1], F_JCS_ξ[i, j], Gc2p[i, j, 1, 1], ord)
                            TaylorSeries.mul!(tmp5039[i, j, 2, 1], F_JCS_η[i, j], Gc2p[i, j, 2, 1], ord)
                            TaylorSeries.add!(tmp5040[i, j, 1, 1], tmp5038[i, j, 1, 1], tmp5039[i, j, 2, 1], ord)
                            TaylorSeries.mul!(tmp5041[i, j, 3, 1], F_JCS_ζ[i, j], Gc2p[i, j, 3, 1], ord)
                            TaylorSeries.add!(F_JCS_x[i, j], tmp5040[i, j, 1, 1], tmp5041[i, j, 3, 1], ord)
                            TaylorSeries.mul!(tmp5043[i, j, 1, 2], F_JCS_ξ[i, j], Gc2p[i, j, 1, 2], ord)
                            TaylorSeries.mul!(tmp5044[i, j, 2, 2], F_JCS_η[i, j], Gc2p[i, j, 2, 2], ord)
                            TaylorSeries.add!(tmp5045[i, j, 1, 2], tmp5043[i, j, 1, 2], tmp5044[i, j, 2, 2], ord)
                            TaylorSeries.mul!(tmp5046[i, j, 3, 2], F_JCS_ζ[i, j], Gc2p[i, j, 3, 2], ord)
                            TaylorSeries.add!(F_JCS_y[i, j], tmp5045[i, j, 1, 2], tmp5046[i, j, 3, 2], ord)
                            TaylorSeries.mul!(tmp5048[i, j, 1, 3], F_JCS_ξ[i, j], Gc2p[i, j, 1, 3], ord)
                            TaylorSeries.mul!(tmp5049[i, j, 2, 3], F_JCS_η[i, j], Gc2p[i, j, 2, 3], ord)
                            TaylorSeries.add!(tmp5050[i, j, 1, 3], tmp5048[i, j, 1, 3], tmp5049[i, j, 2, 3], ord)
                            TaylorSeries.mul!(tmp5051[i, j, 3, 3], F_JCS_ζ[i, j], Gc2p[i, j, 3, 3], ord)
                            TaylorSeries.add!(F_JCS_z[i, j], tmp5050[i, j, 1, 3], tmp5051[i, j, 3, 3], ord)
                        end
                    end
                end
            end
        for j = 1:N_ext
            for i = 1:N_ext
                if i == j
                    continue
                else
                    if UJ_interaction[i, j]
                        TaylorSeries.mul!(tmp5053[i, j], μ[i], F_JCS_x[i, j], ord)
                        TaylorSeries.subst!(temp_accX_j[i, j], accX[j], tmp5053[i, j], ord)
                        TaylorSeries.identity!(accX[j], temp_accX_j[i, j], ord)
                        TaylorSeries.mul!(tmp5055[i, j], μ[i], F_JCS_y[i, j], ord)
                        TaylorSeries.subst!(temp_accY_j[i, j], accY[j], tmp5055[i, j], ord)
                        TaylorSeries.identity!(accY[j], temp_accY_j[i, j], ord)
                        TaylorSeries.mul!(tmp5057[i, j], μ[i], F_JCS_z[i, j], ord)
                        TaylorSeries.subst!(temp_accZ_j[i, j], accZ[j], tmp5057[i, j], ord)
                        TaylorSeries.identity!(accZ[j], temp_accZ_j[i, j], ord)
                        TaylorSeries.mul!(tmp5059[i, j], μ[j], F_JCS_x[i, j], ord)
                        TaylorSeries.add!(temp_accX_i[i, j], accX[i], tmp5059[i, j], ord)
                        TaylorSeries.identity!(accX[i], temp_accX_i[i, j], ord)
                        TaylorSeries.mul!(tmp5061[i, j], μ[j], F_JCS_y[i, j], ord)
                        TaylorSeries.add!(temp_accY_i[i, j], accY[i], tmp5061[i, j], ord)
                        TaylorSeries.identity!(accY[i], temp_accY_i[i, j], ord)
                        TaylorSeries.mul!(tmp5063[i, j], μ[j], F_JCS_z[i, j], ord)
                        TaylorSeries.add!(temp_accZ_i[i, j], accZ[i], tmp5063[i, j], ord)
                        TaylorSeries.identity!(accZ[i], temp_accZ_i[i, j], ord)
                        if j == mo
                            TaylorSeries.mul!(tmp5065[i, j], Y[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.mul!(tmp5066[i, j], Z[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.subst!(tmp5067[i, j], tmp5065[i, j], tmp5066[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_x[i], μ[i], tmp5067[i, j], ord)
                            TaylorSeries.mul!(tmp5069[i, j], Z[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.mul!(tmp5070[i, j], X[i, j], F_JCS_z[i, j], ord)
                            TaylorSeries.subst!(tmp5071[i, j], tmp5069[i, j], tmp5070[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_y[i], μ[i], tmp5071[i, j], ord)
                            TaylorSeries.mul!(tmp5073[i, j], X[i, j], F_JCS_y[i, j], ord)
                            TaylorSeries.mul!(tmp5074[i, j], Y[i, j], F_JCS_x[i, j], ord)
                            TaylorSeries.subst!(tmp5075[i, j], tmp5073[i, j], tmp5074[i, j], ord)
                            TaylorSeries.mul!(N_MfigM_pmA_z[i], μ[i], tmp5075[i, j], ord)
                            TaylorSeries.subst!(temp_N_M_x[i], N_MfigM[1], N_MfigM_pmA_x[i], ord)
                            TaylorSeries.identity!(N_MfigM[1], temp_N_M_x[i], ord)
                            TaylorSeries.subst!(temp_N_M_y[i], N_MfigM[2], N_MfigM_pmA_y[i], ord)
                            TaylorSeries.identity!(N_MfigM[2], temp_N_M_y[i], ord)
                            TaylorSeries.subst!(temp_N_M_z[i], N_MfigM[3], N_MfigM_pmA_z[i], ord)
                            TaylorSeries.identity!(N_MfigM[3], temp_N_M_z[i], ord)
                        end
                    end
                end
            end
        end
        #= REPL[19]:713 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.mul!(_4ϕj[i, j], 4, newtonianNb_Potential[j], ord)
                        TaylorSeries.add!(ϕi_plus_4ϕj[i, j], newtonianNb_Potential[i], _4ϕj[i, j], ord)
                        TaylorSeries.mul!(_2v2[i, j], 2, v2[i], ord)
                        TaylorSeries.add!(sj2_plus_2si2[i, j], v2[j], _2v2[i, j], ord)
                        TaylorSeries.mul!(tmp5087[i, j], 4, vi_dot_vj[i, j], ord)
                        TaylorSeries.subst!(sj2_plus_2si2_minus_4vivj[i, j], sj2_plus_2si2[i, j], tmp5087[i, j], ord)
                        TaylorSeries.subst!(ϕs_and_vs[i, j], sj2_plus_2si2_minus_4vivj[i, j], ϕi_plus_4ϕj[i, j], ord)
                        TaylorSeries.mul!(Xij_t_Ui[i, j], X[i, j], dq[3i - 2], ord)
                        TaylorSeries.mul!(Yij_t_Vi[i, j], Y[i, j], dq[3i - 1], ord)
                        TaylorSeries.mul!(Zij_t_Wi[i, j], Z[i, j], dq[3i], ord)
                        TaylorSeries.add!(tmp5093[i, j], Xij_t_Ui[i, j], Yij_t_Vi[i, j], ord)
                        TaylorSeries.add!(Rij_dot_Vi[i, j], tmp5093[i, j], Zij_t_Wi[i, j], ord)
                        TaylorSeries.pow!(tmp5096[i, j], Rij_dot_Vi[i, j], 2, ord)
                        TaylorSeries.div!(pn1t7[i, j], tmp5096[i, j], r_p2[i, j], ord)
                        TaylorSeries.mul!(tmp5099[i, j], 1.5, pn1t7[i, j], ord)
                        TaylorSeries.subst!(pn1t2_7[i, j], ϕs_and_vs[i, j], tmp5099[i, j], ord)
                        TaylorSeries.add!(pn1t1_7[i, j], c_p2, pn1t2_7[i, j], ord)
                    end
                end
                TaylorSeries.identity!(pntempX[j], zero_q_1, ord)
                TaylorSeries.identity!(pntempY[j], zero_q_1, ord)
                TaylorSeries.identity!(pntempZ[j], zero_q_1, ord)
            end
        #= REPL[19]:752 =# Threads.@threads for j = 1:N
                for i = 1:N
                    if i == j
                        continue
                    else
                        TaylorSeries.mul!(pNX_t_X[i, j], newtonX[i], X[i, j], ord)
                        TaylorSeries.mul!(pNY_t_Y[i, j], newtonY[i], Y[i, j], ord)
                        TaylorSeries.mul!(pNZ_t_Z[i, j], newtonZ[i], Z[i, j], ord)
                        TaylorSeries.add!(tmp5106[i, j], pNX_t_X[i, j], pNY_t_Y[i, j], ord)
                        TaylorSeries.add!(tmp5107[i, j], tmp5106[i, j], pNZ_t_Z[i, j], ord)
                        TaylorSeries.mul!(tmp5108[i, j], 0.5, tmp5107[i, j], ord)
                        TaylorSeries.add!(pn1[i, j], pn1t1_7[i, j], tmp5108[i, j], ord)
                        TaylorSeries.mul!(X_t_pn1[i, j], newton_acc_X[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(Y_t_pn1[i, j], newton_acc_Y[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(Z_t_pn1[i, j], newton_acc_Z[i, j], pn1[i, j], ord)
                        TaylorSeries.mul!(pNX_t_pn3[i, j], newtonX[i], pn3[i, j], ord)
                        TaylorSeries.mul!(pNY_t_pn3[i, j], newtonY[i], pn3[i, j], ord)
                        TaylorSeries.mul!(pNZ_t_pn3[i, j], newtonZ[i], pn3[i, j], ord)
                        TaylorSeries.add!(tmp5116[i, j], U_t_pn2[i, j], pNX_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpnx[i, j], X_t_pn1[i, j], tmp5116[i, j], ord)
                        TaylorSeries.add!(sumpnx[i, j], pntempX[j], termpnx[i, j], ord)
                        TaylorSeries.identity!(pntempX[j], sumpnx[i, j], ord)
                        TaylorSeries.add!(tmp5119[i, j], V_t_pn2[i, j], pNY_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpny[i, j], Y_t_pn1[i, j], tmp5119[i, j], ord)
                        TaylorSeries.add!(sumpny[i, j], pntempY[j], termpny[i, j], ord)
                        TaylorSeries.identity!(pntempY[j], sumpny[i, j], ord)
                        TaylorSeries.add!(tmp5122[i, j], W_t_pn2[i, j], pNZ_t_pn3[i, j], ord)
                        TaylorSeries.add!(termpnz[i, j], Z_t_pn1[i, j], tmp5122[i, j], ord)
                        TaylorSeries.add!(sumpnz[i, j], pntempZ[j], termpnz[i, j], ord)
                        TaylorSeries.identity!(pntempZ[j], sumpnz[i, j], ord)
                    end
                end
                TaylorSeries.mul!(postNewtonX[j], pntempX[j], c_m2, ord)
                TaylorSeries.mul!(postNewtonY[j], pntempY[j], c_m2, ord)
                TaylorSeries.mul!(postNewtonZ[j], pntempZ[j], c_m2, ord)
            end
        TaylorSeries.identity!(x0s_M, r_star_M_0[1], ord)
        TaylorSeries.identity!(y0s_M, r_star_M_0[2], ord)
        TaylorSeries.identity!(z0s_M, r_star_M_0[3], ord)
        TaylorSeries.pow!(tmp5129, x0s_M, 2, ord)
        TaylorSeries.pow!(tmp5131, y0s_M, 2, ord)
        TaylorSeries.add!(ρ0s2_M, tmp5129, tmp5131, ord)
        TaylorSeries.sqrt!(ρ0s_M, ρ0s2_M, ord)
        TaylorSeries.pow!(z0s2_M, z0s_M, 2, ord)
        TaylorSeries.add!(r0s2_M, ρ0s2_M, z0s2_M, ord)
        TaylorSeries.sqrt!(r0s_M, r0s2_M, ord)
        TaylorSeries.pow!(r0s5_M, r0s_M, 5, ord)
        TaylorSeries.identity!(x0s_S, r_star_S_0[1], ord)
        TaylorSeries.identity!(y0s_S, r_star_S_0[2], ord)
        TaylorSeries.identity!(z0s_S, r_star_S_0[3], ord)
        TaylorSeries.pow!(tmp5141, x0s_S, 2, ord)
        TaylorSeries.pow!(tmp5143, y0s_S, 2, ord)
        TaylorSeries.add!(ρ0s2_S, tmp5141, tmp5143, ord)
        TaylorSeries.sqrt!(ρ0s_S, ρ0s2_S, ord)
        TaylorSeries.pow!(z0s2_S, z0s_S, 2, ord)
        TaylorSeries.add!(r0s2_S, ρ0s2_S, z0s2_S, ord)
        TaylorSeries.sqrt!(r0s_S, r0s2_S, ord)
        TaylorSeries.pow!(r0s5_S, r0s_S, 5, ord)
        TaylorSeries.mul!(tmp5153, Z_bf[mo, ea], r_star_M_0[3], ord)
        TaylorSeries.pow!(tmp5155, tmp5153, 2, ord)
        TaylorSeries.mul!(tmp5157, r_xy[mo, ea], ρ0s_M, ord)
        TaylorSeries.pow!(tmp5159, tmp5157, 2, ord)
        TaylorSeries.mul!(tmp5160, 0.5, tmp5159, ord)
        TaylorSeries.add!(tmp5161, tmp5155, tmp5160, ord)
        TaylorSeries.div!(tmp5162, tmp5161, r_p2[mo, ea], ord)
        TaylorSeries.mul!(tmp5163, 5, tmp5162, ord)
        TaylorSeries.subst!(coeff0_M, r0s2_M, tmp5163, ord)
        TaylorSeries.mul!(tmp5166, Z_bf[mo, ea], r_star_S_0[3], ord)
        TaylorSeries.pow!(tmp5168, tmp5166, 2, ord)
        TaylorSeries.mul!(tmp5170, r_xy[mo, ea], ρ0s_S, ord)
        TaylorSeries.pow!(tmp5172, tmp5170, 2, ord)
        TaylorSeries.mul!(tmp5173, 0.5, tmp5172, ord)
        TaylorSeries.add!(tmp5174, tmp5168, tmp5173, ord)
        TaylorSeries.div!(tmp5175, tmp5174, r_p2[mo, ea], ord)
        TaylorSeries.mul!(tmp5176, 5, tmp5175, ord)
        TaylorSeries.subst!(coeff0_S, r0s2_S, tmp5176, ord)
        TaylorSeries.div!(k_20E_div_r0s5_M, k_20E, r0s5_M, ord)
        TaylorSeries.div!(k_20E_div_r0s5_S, k_20E, r0s5_S, ord)
        TaylorSeries.add!(tmp5180, ρ0s2_M, coeff0_M, ord)
        TaylorSeries.mul!(tmp5181, k_20E_div_r0s5_M, tmp5180, ord)
        TaylorSeries.mul!(a_tid_0_M_x, tmp5181, X_bf[mo, ea], ord)
        TaylorSeries.add!(tmp5183, ρ0s2_M, coeff0_M, ord)
        TaylorSeries.mul!(tmp5184, k_20E_div_r0s5_M, tmp5183, ord)
        TaylorSeries.mul!(a_tid_0_M_y, tmp5184, Y_bf[mo, ea], ord)
        TaylorSeries.mul!(tmp5187, 2, z0s2_M, ord)
        TaylorSeries.add!(tmp5188, tmp5187, coeff0_M, ord)
        TaylorSeries.mul!(tmp5189, k_20E_div_r0s5_M, tmp5188, ord)
        TaylorSeries.mul!(a_tid_0_M_z, tmp5189, Z_bf[mo, ea], ord)
        TaylorSeries.add!(tmp5191, ρ0s2_S, coeff0_S, ord)
        TaylorSeries.mul!(tmp5192, k_20E_div_r0s5_S, tmp5191, ord)
        TaylorSeries.mul!(a_tid_0_S_x, tmp5192, X_bf[mo, ea], ord)
        TaylorSeries.add!(tmp5194, ρ0s2_S, coeff0_S, ord)
        TaylorSeries.mul!(tmp5195, k_20E_div_r0s5_S, tmp5194, ord)
        TaylorSeries.mul!(a_tid_0_S_y, tmp5195, Y_bf[mo, ea], ord)
        TaylorSeries.mul!(tmp5198, 2, z0s2_S, ord)
        TaylorSeries.add!(tmp5199, tmp5198, coeff0_S, ord)
        TaylorSeries.mul!(tmp5200, k_20E_div_r0s5_S, tmp5199, ord)
        TaylorSeries.mul!(a_tid_0_S_z, tmp5200, Z_bf[mo, ea], ord)
        TaylorSeries.identity!(x1s_M, r_star_M_1[1], ord)
        TaylorSeries.identity!(y1s_M, r_star_M_1[2], ord)
        TaylorSeries.identity!(z1s_M, r_star_M_1[3], ord)
        TaylorSeries.pow!(tmp5203, x1s_M, 2, ord)
        TaylorSeries.pow!(tmp5205, y1s_M, 2, ord)
        TaylorSeries.add!(ρ1s2_M, tmp5203, tmp5205, ord)
        TaylorSeries.sqrt!(ρ1s_M, ρ1s2_M, ord)
        TaylorSeries.pow!(z1s2_M, z1s_M, 2, ord)
        TaylorSeries.add!(r1s2_M, ρ1s2_M, z1s2_M, ord)
        TaylorSeries.sqrt!(r1s_M, r1s2_M, ord)
        TaylorSeries.pow!(r1s5_M, r1s_M, 5, ord)
        TaylorSeries.identity!(x1s_S, r_star_S_1[1], ord)
        TaylorSeries.identity!(y1s_S, r_star_S_1[2], ord)
        TaylorSeries.identity!(z1s_S, r_star_S_1[3], ord)
        TaylorSeries.pow!(tmp5215, x1s_S, 2, ord)
        TaylorSeries.pow!(tmp5217, y1s_S, 2, ord)
        TaylorSeries.add!(ρ1s2_S, tmp5215, tmp5217, ord)
        TaylorSeries.sqrt!(ρ1s_S, ρ1s2_S, ord)
        TaylorSeries.pow!(z1s2_S, z1s_S, 2, ord)
        TaylorSeries.add!(r1s2_S, ρ1s2_S, z1s2_S, ord)
        TaylorSeries.sqrt!(r1s_S, r1s2_S, ord)
        TaylorSeries.pow!(r1s5_S, r1s_S, 5, ord)
        TaylorSeries.mul!(tmp5226, X_bf[mo, ea], r_star_M_1[1], ord)
        TaylorSeries.mul!(tmp5227, Y_bf[mo, ea], r_star_M_1[2], ord)
        TaylorSeries.add!(coeff1_1_M, tmp5226, tmp5227, ord)
        TaylorSeries.mul!(tmp5229, X_bf[mo, ea], r_star_S_1[1], ord)
        TaylorSeries.mul!(tmp5230, Y_bf[mo, ea], r_star_S_1[2], ord)
        TaylorSeries.add!(coeff1_1_S, tmp5229, tmp5230, ord)
        TaylorSeries.mul!(coeff2_1_M, Z_bf[mo, ea], r_star_M_1[3], ord)
        TaylorSeries.mul!(coeff2_1_S, Z_bf[mo, ea], r_star_S_1[3], ord)
        TaylorSeries.mul!(tmp5235, 10, coeff1_1_M, ord)
        TaylorSeries.mul!(tmp5236, tmp5235, coeff2_1_M, ord)
        TaylorSeries.div!(coeff3_1_M, tmp5236, r_p2[mo, ea], ord)
        TaylorSeries.mul!(tmp5239, 10, coeff1_1_S, ord)
        TaylorSeries.mul!(tmp5240, tmp5239, coeff2_1_S, ord)
        TaylorSeries.div!(coeff3_1_S, tmp5240, r_p2[mo, ea], ord)
        TaylorSeries.div!(k_21E_div_r1s5_M, k_21E, r1s5_M, ord)
        TaylorSeries.div!(k_21E_div_r1s5_S, k_21E, r1s5_S, ord)
        TaylorSeries.mul!(tmp5245, 2, coeff2_1_M, ord)
        TaylorSeries.mul!(tmp5246, tmp5245, r_star_M_1[1], ord)
        TaylorSeries.mul!(tmp5247, coeff3_1_M, X_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp5248, tmp5246, tmp5247, ord)
        TaylorSeries.mul!(a_tid_1_M_x, k_21E_div_r1s5_M, tmp5248, ord)
        TaylorSeries.mul!(tmp5251, 2, coeff2_1_M, ord)
        TaylorSeries.mul!(tmp5252, tmp5251, r_star_M_1[2], ord)
        TaylorSeries.mul!(tmp5253, coeff3_1_M, Y_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp5254, tmp5252, tmp5253, ord)
        TaylorSeries.mul!(a_tid_1_M_y, k_21E_div_r1s5_M, tmp5254, ord)
        TaylorSeries.mul!(tmp5257, 2, coeff1_1_M, ord)
        TaylorSeries.mul!(tmp5258, tmp5257, r_star_M_1[3], ord)
        TaylorSeries.mul!(tmp5259, coeff3_1_M, Z_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp5260, tmp5258, tmp5259, ord)
        TaylorSeries.mul!(a_tid_1_M_z, k_21E_div_r1s5_M, tmp5260, ord)
        TaylorSeries.mul!(tmp5263, 2, coeff2_1_S, ord)
        TaylorSeries.mul!(tmp5264, tmp5263, r_star_S_1[1], ord)
        TaylorSeries.mul!(tmp5265, coeff3_1_S, X_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp5266, tmp5264, tmp5265, ord)
        TaylorSeries.mul!(a_tid_1_S_x, k_21E_div_r1s5_S, tmp5266, ord)
        TaylorSeries.mul!(tmp5269, 2, coeff2_1_S, ord)
        TaylorSeries.mul!(tmp5270, tmp5269, r_star_S_1[2], ord)
        TaylorSeries.mul!(tmp5271, coeff3_1_S, Y_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp5272, tmp5270, tmp5271, ord)
        TaylorSeries.mul!(a_tid_1_S_y, k_21E_div_r1s5_S, tmp5272, ord)
        TaylorSeries.mul!(tmp5275, 2, coeff1_1_S, ord)
        TaylorSeries.mul!(tmp5276, tmp5275, r_star_S_1[3], ord)
        TaylorSeries.mul!(tmp5277, coeff3_1_S, Z_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp5278, tmp5276, tmp5277, ord)
        TaylorSeries.mul!(a_tid_1_S_z, k_21E_div_r1s5_S, tmp5278, ord)
        TaylorSeries.identity!(x2s_M, r_star_M_2[1], ord)
        TaylorSeries.identity!(y2s_M, r_star_M_2[2], ord)
        TaylorSeries.identity!(z2s_M, r_star_M_2[3], ord)
        TaylorSeries.pow!(tmp5281, x2s_M, 2, ord)
        TaylorSeries.pow!(tmp5283, y2s_M, 2, ord)
        TaylorSeries.add!(ρ2s2_M, tmp5281, tmp5283, ord)
        TaylorSeries.sqrt!(ρ2s_M, ρ2s2_M, ord)
        TaylorSeries.pow!(z2s2_M, z2s_M, 2, ord)
        TaylorSeries.add!(r2s2_M, ρ2s2_M, z2s2_M, ord)
        TaylorSeries.sqrt!(r2s_M, r2s2_M, ord)
        TaylorSeries.pow!(r2s5_M, r2s_M, 5, ord)
        TaylorSeries.identity!(x2s_S, r_star_S_2[1], ord)
        TaylorSeries.identity!(y2s_S, r_star_S_2[2], ord)
        TaylorSeries.identity!(z2s_S, r_star_S_2[3], ord)
        TaylorSeries.pow!(tmp5293, x2s_S, 2, ord)
        TaylorSeries.pow!(tmp5295, y2s_S, 2, ord)
        TaylorSeries.add!(ρ2s2_S, tmp5293, tmp5295, ord)
        TaylorSeries.sqrt!(ρ2s_S, ρ2s2_S, ord)
        TaylorSeries.pow!(z2s2_S, z2s_S, 2, ord)
        TaylorSeries.add!(r2s2_S, ρ2s2_S, z2s2_S, ord)
        TaylorSeries.sqrt!(r2s_S, r2s2_S, ord)
        TaylorSeries.pow!(r2s5_S, r2s_S, 5, ord)
        TaylorSeries.mul!(tmp5304, X_bf[mo, ea], r_star_M_2[1], ord)
        TaylorSeries.mul!(tmp5305, Y_bf[mo, ea], r_star_M_2[2], ord)
        TaylorSeries.add!(coeff1_2_M, tmp5304, tmp5305, ord)
        TaylorSeries.mul!(tmp5307, X_bf[mo, ea], r_star_S_2[1], ord)
        TaylorSeries.mul!(tmp5308, Y_bf[mo, ea], r_star_S_2[2], ord)
        TaylorSeries.add!(coeff1_2_S, tmp5307, tmp5308, ord)
        TaylorSeries.pow!(tmp5312, coeff1_2_M, 2, ord)
        TaylorSeries.pow!(tmp5315, r_xy[mo, ea], 2, ord)
        TaylorSeries.mul!(tmp5316, 0.5, tmp5315, ord)
        TaylorSeries.mul!(tmp5317, tmp5316, ρ2s2_M, ord)
        TaylorSeries.subst!(tmp5318, tmp5312, tmp5317, ord)
        TaylorSeries.mul!(tmp5319, 5, tmp5318, ord)
        TaylorSeries.div!(coeff3_2_M, tmp5319, r_p2[mo, ea], ord)
        TaylorSeries.pow!(tmp5323, coeff1_2_S, 2, ord)
        TaylorSeries.pow!(tmp5326, r_xy[mo, ea], 2, ord)
        TaylorSeries.mul!(tmp5327, 0.5, tmp5326, ord)
        TaylorSeries.mul!(tmp5328, tmp5327, ρ2s2_S, ord)
        TaylorSeries.subst!(tmp5329, tmp5323, tmp5328, ord)
        TaylorSeries.mul!(tmp5330, 5, tmp5329, ord)
        TaylorSeries.div!(coeff3_2_S, tmp5330, r_p2[mo, ea], ord)
        TaylorSeries.div!(k_22E_div_r2s5_M, k_22E, r2s5_M, ord)
        TaylorSeries.div!(k_22E_div_r2s5_S, k_22E, r2s5_S, ord)
        TaylorSeries.mul!(tmp5335, 2, coeff1_2_M, ord)
        TaylorSeries.mul!(tmp5336, tmp5335, r_star_M_2[1], ord)
        TaylorSeries.add!(tmp5337, ρ2s2_M, coeff3_2_M, ord)
        TaylorSeries.mul!(tmp5338, tmp5337, X_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp5339, tmp5336, tmp5338, ord)
        TaylorSeries.mul!(a_tid_2_M_x, k_22E_div_r2s5_M, tmp5339, ord)
        TaylorSeries.mul!(tmp5342, 2, coeff1_2_M, ord)
        TaylorSeries.mul!(tmp5343, tmp5342, r_star_M_2[2], ord)
        TaylorSeries.add!(tmp5344, ρ2s2_M, coeff3_2_M, ord)
        TaylorSeries.mul!(tmp5345, tmp5344, Y_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp5346, tmp5343, tmp5345, ord)
        TaylorSeries.mul!(a_tid_2_M_y, k_22E_div_r2s5_M, tmp5346, ord)
        TaylorSeries.subst!(tmp5348, coeff3_2_M, ord)
        TaylorSeries.mul!(tmp5349, k_22E_div_r2s5_M, tmp5348, ord)
        TaylorSeries.mul!(a_tid_2_M_z, tmp5349, Z_bf[mo, ea], ord)
        TaylorSeries.mul!(tmp5352, 2, coeff1_2_S, ord)
        TaylorSeries.mul!(tmp5353, tmp5352, r_star_S_2[1], ord)
        TaylorSeries.add!(tmp5354, ρ2s2_S, coeff3_2_S, ord)
        TaylorSeries.mul!(tmp5355, tmp5354, X_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp5356, tmp5353, tmp5355, ord)
        TaylorSeries.mul!(a_tid_2_S_x, k_22E_div_r2s5_S, tmp5356, ord)
        TaylorSeries.mul!(tmp5359, 2, coeff1_2_S, ord)
        TaylorSeries.mul!(tmp5360, tmp5359, r_star_S_2[2], ord)
        TaylorSeries.add!(tmp5361, ρ2s2_S, coeff3_2_S, ord)
        TaylorSeries.mul!(tmp5362, tmp5361, Y_bf[mo, ea], ord)
        TaylorSeries.subst!(tmp5363, tmp5360, tmp5362, ord)
        TaylorSeries.mul!(a_tid_2_S_y, k_22E_div_r2s5_S, tmp5363, ord)
        TaylorSeries.subst!(tmp5365, coeff3_2_S, ord)
        TaylorSeries.mul!(tmp5366, k_22E_div_r2s5_S, tmp5365, ord)
        TaylorSeries.mul!(a_tid_2_S_z, tmp5366, Z_bf[mo, ea], ord)
        TaylorSeries.div!(tmp5368, RE_au, r_p1d2[mo, ea], ord)
        TaylorSeries.pow!(RE_div_r_p5, tmp5368, 5, ord)
        TaylorSeries.mul!(aux_tidacc, tid_num_coeff, RE_div_r_p5, ord)
        TaylorSeries.mul!(a_tidal_coeff_M, μ[mo], aux_tidacc, ord)
        TaylorSeries.mul!(a_tidal_coeff_S, μ[su], aux_tidacc, ord)
        TaylorSeries.add!(tmp5374, a_tid_0_M_x, a_tid_1_M_x, ord)
        TaylorSeries.add!(tmp5375, tmp5374, a_tid_2_M_x, ord)
        TaylorSeries.mul!(tmp5376, a_tidal_coeff_M, tmp5375, ord)
        TaylorSeries.add!(tmp5377, a_tid_0_S_x, a_tid_1_S_x, ord)
        TaylorSeries.add!(tmp5378, tmp5377, a_tid_2_S_x, ord)
        TaylorSeries.mul!(tmp5379, a_tidal_coeff_S, tmp5378, ord)
        TaylorSeries.add!(a_tidal_tod_x, tmp5376, tmp5379, ord)
        TaylorSeries.add!(tmp5381, a_tid_0_M_y, a_tid_1_M_y, ord)
        TaylorSeries.add!(tmp5382, tmp5381, a_tid_2_M_y, ord)
        TaylorSeries.mul!(tmp5383, a_tidal_coeff_M, tmp5382, ord)
        TaylorSeries.add!(tmp5384, a_tid_0_S_y, a_tid_1_S_y, ord)
        TaylorSeries.add!(tmp5385, tmp5384, a_tid_2_S_y, ord)
        TaylorSeries.mul!(tmp5386, a_tidal_coeff_S, tmp5385, ord)
        TaylorSeries.add!(a_tidal_tod_y, tmp5383, tmp5386, ord)
        TaylorSeries.add!(tmp5388, a_tid_0_M_z, a_tid_1_M_z, ord)
        TaylorSeries.add!(tmp5389, tmp5388, a_tid_2_M_z, ord)
        TaylorSeries.mul!(tmp5390, a_tidal_coeff_M, tmp5389, ord)
        TaylorSeries.add!(tmp5391, a_tid_0_S_z, a_tid_1_S_z, ord)
        TaylorSeries.add!(tmp5392, tmp5391, a_tid_2_S_z, ord)
        TaylorSeries.mul!(tmp5393, a_tidal_coeff_S, tmp5392, ord)
        TaylorSeries.add!(a_tidal_tod_z, tmp5390, tmp5393, ord)
        TaylorSeries.mul!(tmp5395, RotM[1, 1, ea], a_tidal_tod_x, ord)
        TaylorSeries.mul!(tmp5396, RotM[2, 1, ea], a_tidal_tod_y, ord)
        TaylorSeries.add!(tmp5397, tmp5395, tmp5396, ord)
        TaylorSeries.mul!(tmp5398, RotM[3, 1, ea], a_tidal_tod_z, ord)
        TaylorSeries.add!(a_tidal_x, tmp5397, tmp5398, ord)
        TaylorSeries.mul!(tmp5400, RotM[1, 2, ea], a_tidal_tod_x, ord)
        TaylorSeries.mul!(tmp5401, RotM[2, 2, ea], a_tidal_tod_y, ord)
        TaylorSeries.add!(tmp5402, tmp5400, tmp5401, ord)
        TaylorSeries.mul!(tmp5403, RotM[3, 2, ea], a_tidal_tod_z, ord)
        TaylorSeries.add!(a_tidal_y, tmp5402, tmp5403, ord)
        TaylorSeries.mul!(tmp5405, RotM[1, 3, ea], a_tidal_tod_x, ord)
        TaylorSeries.mul!(tmp5406, RotM[2, 3, ea], a_tidal_tod_y, ord)
        TaylorSeries.add!(tmp5407, tmp5405, tmp5406, ord)
        TaylorSeries.mul!(tmp5408, RotM[3, 3, ea], a_tidal_tod_z, ord)
        TaylorSeries.add!(a_tidal_z, tmp5407, tmp5408, ord)
        TaylorSeries.add!(accX_mo_tides, accX[mo], a_tidal_x, ord)
        TaylorSeries.add!(accY_mo_tides, accY[mo], a_tidal_y, ord)
        TaylorSeries.add!(accZ_mo_tides, accZ[mo], a_tidal_z, ord)
        TaylorSeries.identity!(accX[mo], accX_mo_tides, ord)
        TaylorSeries.identity!(accY[mo], accY_mo_tides, ord)
        TaylorSeries.identity!(accZ[mo], accZ_mo_tides, ord)
        #= REPL[19]:991 =# Threads.@threads for i = 1:N_ext
                TaylorSeries.add!(dq[3 * (N + i) - 2], postNewtonX[i], accX[i], ord)
                TaylorSeries.add!(dq[3 * (N + i) - 1], postNewtonY[i], accY[i], ord)
                TaylorSeries.add!(dq[3 * (N + i)], postNewtonZ[i], accZ[i], ord)
            end
        #= REPL[19]:996 =# Threads.@threads for i = N_ext + 1:N
                TaylorSeries.identity!(dq[3 * (N + i) - 2], postNewtonX[i], ord)
                TaylorSeries.identity!(dq[3 * (N + i) - 1], postNewtonY[i], ord)
                TaylorSeries.identity!(dq[3 * (N + i)], postNewtonZ[i], ord)
            end
        TaylorSeries.mul!(tmp5416, I_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp5417, I_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp5418, I_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp5419, tmp5417, tmp5418, ord)
        TaylorSeries.add!(Iω_x, tmp5416, tmp5419, ord)
        TaylorSeries.mul!(tmp5421, I_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp5422, I_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp5423, I_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp5424, tmp5422, tmp5423, ord)
        TaylorSeries.add!(Iω_y, tmp5421, tmp5424, ord)
        TaylorSeries.mul!(tmp5426, I_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp5427, I_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp5428, I_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp5429, tmp5427, tmp5428, ord)
        TaylorSeries.add!(Iω_z, tmp5426, tmp5429, ord)
        TaylorSeries.mul!(tmp5431, q[6N + 5], Iω_z, ord)
        TaylorSeries.mul!(tmp5432, q[6N + 6], Iω_y, ord)
        TaylorSeries.subst!(ωxIω_x, tmp5431, tmp5432, ord)
        TaylorSeries.mul!(tmp5434, q[6N + 6], Iω_x, ord)
        TaylorSeries.mul!(tmp5435, q[6N + 4], Iω_z, ord)
        TaylorSeries.subst!(ωxIω_y, tmp5434, tmp5435, ord)
        TaylorSeries.mul!(tmp5437, q[6N + 4], Iω_y, ord)
        TaylorSeries.mul!(tmp5438, q[6N + 5], Iω_x, ord)
        TaylorSeries.subst!(ωxIω_z, tmp5437, tmp5438, ord)
        TaylorSeries.mul!(tmp5440, dI_m_t[1, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp5441, dI_m_t[1, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp5442, dI_m_t[1, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp5443, tmp5441, tmp5442, ord)
        TaylorSeries.add!(dIω_x, tmp5440, tmp5443, ord)
        TaylorSeries.mul!(tmp5445, dI_m_t[2, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp5446, dI_m_t[2, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp5447, dI_m_t[2, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp5448, tmp5446, tmp5447, ord)
        TaylorSeries.add!(dIω_y, tmp5445, tmp5448, ord)
        TaylorSeries.mul!(tmp5450, dI_m_t[3, 1], q[6N + 4], ord)
        TaylorSeries.mul!(tmp5451, dI_m_t[3, 2], q[6N + 5], ord)
        TaylorSeries.mul!(tmp5452, dI_m_t[3, 3], q[6N + 6], ord)
        TaylorSeries.add!(tmp5453, tmp5451, tmp5452, ord)
        TaylorSeries.add!(dIω_z, tmp5450, tmp5453, ord)
        TaylorSeries.div!(er_EM_I_1, X[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_2, Y[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.div!(er_EM_I_3, Z[ea, mo], r_p1d2[ea, mo], ord)
        TaylorSeries.identity!(p_E_I_1, RotM[3, 1, ea], ord)
        TaylorSeries.identity!(p_E_I_2, RotM[3, 2, ea], ord)
        TaylorSeries.identity!(p_E_I_3, RotM[3, 3, ea], ord)
        TaylorSeries.mul!(tmp5458, RotM[1, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp5459, RotM[1, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp5460, RotM[1, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp5461, tmp5459, tmp5460, ord)
        TaylorSeries.add!(er_EM_1, tmp5458, tmp5461, ord)
        TaylorSeries.mul!(tmp5463, RotM[2, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp5464, RotM[2, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp5465, RotM[2, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp5466, tmp5464, tmp5465, ord)
        TaylorSeries.add!(er_EM_2, tmp5463, tmp5466, ord)
        TaylorSeries.mul!(tmp5468, RotM[3, 1, mo], er_EM_I_1, ord)
        TaylorSeries.mul!(tmp5469, RotM[3, 2, mo], er_EM_I_2, ord)
        TaylorSeries.mul!(tmp5470, RotM[3, 3, mo], er_EM_I_3, ord)
        TaylorSeries.add!(tmp5471, tmp5469, tmp5470, ord)
        TaylorSeries.add!(er_EM_3, tmp5468, tmp5471, ord)
        TaylorSeries.mul!(tmp5473, RotM[1, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp5474, RotM[1, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp5475, RotM[1, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp5476, tmp5474, tmp5475, ord)
        TaylorSeries.add!(p_E_1, tmp5473, tmp5476, ord)
        TaylorSeries.mul!(tmp5478, RotM[2, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp5479, RotM[2, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp5480, RotM[2, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp5481, tmp5479, tmp5480, ord)
        TaylorSeries.add!(p_E_2, tmp5478, tmp5481, ord)
        TaylorSeries.mul!(tmp5483, RotM[3, 1, mo], p_E_I_1, ord)
        TaylorSeries.mul!(tmp5484, RotM[3, 2, mo], p_E_I_2, ord)
        TaylorSeries.mul!(tmp5485, RotM[3, 3, mo], p_E_I_3, ord)
        TaylorSeries.add!(tmp5486, tmp5484, tmp5485, ord)
        TaylorSeries.add!(p_E_3, tmp5483, tmp5486, ord)
        TaylorSeries.mul!(tmp5488, I_m_t[1, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp5489, I_m_t[1, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp5490, I_m_t[1, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp5491, tmp5489, tmp5490, ord)
        TaylorSeries.add!(I_er_EM_1, tmp5488, tmp5491, ord)
        TaylorSeries.mul!(tmp5493, I_m_t[2, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp5494, I_m_t[2, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp5495, I_m_t[2, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp5496, tmp5494, tmp5495, ord)
        TaylorSeries.add!(I_er_EM_2, tmp5493, tmp5496, ord)
        TaylorSeries.mul!(tmp5498, I_m_t[3, 1], er_EM_1, ord)
        TaylorSeries.mul!(tmp5499, I_m_t[3, 2], er_EM_2, ord)
        TaylorSeries.mul!(tmp5500, I_m_t[3, 3], er_EM_3, ord)
        TaylorSeries.add!(tmp5501, tmp5499, tmp5500, ord)
        TaylorSeries.add!(I_er_EM_3, tmp5498, tmp5501, ord)
        TaylorSeries.mul!(tmp5503, I_m_t[1, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp5504, I_m_t[1, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp5505, I_m_t[1, 3], p_E_3, ord)
        TaylorSeries.add!(tmp5506, tmp5504, tmp5505, ord)
        TaylorSeries.add!(I_p_E_1, tmp5503, tmp5506, ord)
        TaylorSeries.mul!(tmp5508, I_m_t[2, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp5509, I_m_t[2, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp5510, I_m_t[2, 3], p_E_3, ord)
        TaylorSeries.add!(tmp5511, tmp5509, tmp5510, ord)
        TaylorSeries.add!(I_p_E_2, tmp5508, tmp5511, ord)
        TaylorSeries.mul!(tmp5513, I_m_t[3, 1], p_E_1, ord)
        TaylorSeries.mul!(tmp5514, I_m_t[3, 2], p_E_2, ord)
        TaylorSeries.mul!(tmp5515, I_m_t[3, 3], p_E_3, ord)
        TaylorSeries.add!(tmp5516, tmp5514, tmp5515, ord)
        TaylorSeries.add!(I_p_E_3, tmp5513, tmp5516, ord)
        TaylorSeries.mul!(tmp5518, er_EM_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp5519, er_EM_3, I_er_EM_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_1, tmp5518, tmp5519, ord)
        TaylorSeries.mul!(tmp5521, er_EM_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp5522, er_EM_1, I_er_EM_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_2, tmp5521, tmp5522, ord)
        TaylorSeries.mul!(tmp5524, er_EM_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp5525, er_EM_2, I_er_EM_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_er_EM_3, tmp5524, tmp5525, ord)
        TaylorSeries.mul!(tmp5527, er_EM_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp5528, er_EM_3, I_p_E_2, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_1, tmp5527, tmp5528, ord)
        TaylorSeries.mul!(tmp5530, er_EM_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp5531, er_EM_1, I_p_E_3, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_2, tmp5530, tmp5531, ord)
        TaylorSeries.mul!(tmp5533, er_EM_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp5534, er_EM_2, I_p_E_1, ord)
        TaylorSeries.subst!(er_EM_cross_I_p_E_3, tmp5533, tmp5534, ord)
        TaylorSeries.mul!(tmp5536, p_E_2, I_er_EM_3, ord)
        TaylorSeries.mul!(tmp5537, p_E_3, I_er_EM_2, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_1, tmp5536, tmp5537, ord)
        TaylorSeries.mul!(tmp5539, p_E_3, I_er_EM_1, ord)
        TaylorSeries.mul!(tmp5540, p_E_1, I_er_EM_3, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_2, tmp5539, tmp5540, ord)
        TaylorSeries.mul!(tmp5542, p_E_1, I_er_EM_2, ord)
        TaylorSeries.mul!(tmp5543, p_E_2, I_er_EM_1, ord)
        TaylorSeries.subst!(p_E_cross_I_er_EM_3, tmp5542, tmp5543, ord)
        TaylorSeries.mul!(tmp5545, p_E_2, I_p_E_3, ord)
        TaylorSeries.mul!(tmp5546, p_E_3, I_p_E_2, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_1, tmp5545, tmp5546, ord)
        TaylorSeries.mul!(tmp5548, p_E_3, I_p_E_1, ord)
        TaylorSeries.mul!(tmp5549, p_E_1, I_p_E_3, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_2, tmp5548, tmp5549, ord)
        TaylorSeries.mul!(tmp5551, p_E_1, I_p_E_2, ord)
        TaylorSeries.mul!(tmp5552, p_E_2, I_p_E_1, ord)
        TaylorSeries.subst!(p_E_cross_I_p_E_3, tmp5551, tmp5552, ord)
        TaylorSeries.pow!(tmp5556, sin_ϕ[ea, mo], 2, ord)
        TaylorSeries.mul!(tmp5557, 7, tmp5556, ord)
        TaylorSeries.subst!(one_minus_7sin2ϕEM, one_t, tmp5557, ord)
        TaylorSeries.mul!(two_sinϕEM, 2, sin_ϕ[ea, mo], ord)
        TaylorSeries.pow!(tmp5562, r_p1d2[mo, ea], 5, ord)
        TaylorSeries.div!(N_MfigM_figE_factor_div_rEMp5, N_MfigM_figE_factor, tmp5562, ord)
        TaylorSeries.mul!(tmp5564, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_1, ord)
        TaylorSeries.add!(tmp5565, er_EM_cross_I_p_E_1, p_E_cross_I_er_EM_1, ord)
        TaylorSeries.mul!(tmp5566, two_sinϕEM, tmp5565, ord)
        TaylorSeries.add!(tmp5567, tmp5564, tmp5566, ord)
        TaylorSeries.mul!(tmp5569, 0.4, p_E_cross_I_p_E_1, ord)
        TaylorSeries.subst!(tmp5570, tmp5567, tmp5569, ord)
        TaylorSeries.mul!(N_MfigM_figE_1, N_MfigM_figE_factor_div_rEMp5, tmp5570, ord)
        TaylorSeries.mul!(tmp5572, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_2, ord)
        TaylorSeries.add!(tmp5573, er_EM_cross_I_p_E_2, p_E_cross_I_er_EM_2, ord)
        TaylorSeries.mul!(tmp5574, two_sinϕEM, tmp5573, ord)
        TaylorSeries.add!(tmp5575, tmp5572, tmp5574, ord)
        TaylorSeries.mul!(tmp5577, 0.4, p_E_cross_I_p_E_2, ord)
        TaylorSeries.subst!(tmp5578, tmp5575, tmp5577, ord)
        TaylorSeries.mul!(N_MfigM_figE_2, N_MfigM_figE_factor_div_rEMp5, tmp5578, ord)
        TaylorSeries.mul!(tmp5580, one_minus_7sin2ϕEM, er_EM_cross_I_er_EM_3, ord)
        TaylorSeries.add!(tmp5581, er_EM_cross_I_p_E_3, p_E_cross_I_er_EM_3, ord)
        TaylorSeries.mul!(tmp5582, two_sinϕEM, tmp5581, ord)
        TaylorSeries.add!(tmp5583, tmp5580, tmp5582, ord)
        TaylorSeries.mul!(tmp5585, 0.4, p_E_cross_I_p_E_3, ord)
        TaylorSeries.subst!(tmp5586, tmp5583, tmp5585, ord)
        TaylorSeries.mul!(N_MfigM_figE_3, N_MfigM_figE_factor_div_rEMp5, tmp5586, ord)
        TaylorSeries.mul!(tmp5588, RotM[1, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp5589, RotM[1, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp5590, RotM[1, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp5591, tmp5589, tmp5590, ord)
        TaylorSeries.add!(N_1_LMF, tmp5588, tmp5591, ord)
        TaylorSeries.mul!(tmp5593, RotM[2, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp5594, RotM[2, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp5595, RotM[2, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp5596, tmp5594, tmp5595, ord)
        TaylorSeries.add!(N_2_LMF, tmp5593, tmp5596, ord)
        TaylorSeries.mul!(tmp5598, RotM[3, 1, mo], N_MfigM[1], ord)
        TaylorSeries.mul!(tmp5599, RotM[3, 2, mo], N_MfigM[2], ord)
        TaylorSeries.mul!(tmp5600, RotM[3, 3, mo], N_MfigM[3], ord)
        TaylorSeries.add!(tmp5601, tmp5599, tmp5600, ord)
        TaylorSeries.add!(N_3_LMF, tmp5598, tmp5601, ord)
        TaylorSeries.subst!(tmp5603, q[6N + 10], q[6N + 4], ord)
        TaylorSeries.mul!(tmp5604, k_ν, tmp5603, ord)
        TaylorSeries.mul!(tmp5605, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp5606, tmp5605, q[6N + 11], ord)
        TaylorSeries.subst!(N_cmb_1, tmp5604, tmp5606, ord)
        TaylorSeries.subst!(tmp5608, q[6N + 11], q[6N + 5], ord)
        TaylorSeries.mul!(tmp5609, k_ν, tmp5608, ord)
        TaylorSeries.mul!(tmp5610, C_c_m_A_c, q[6N + 12], ord)
        TaylorSeries.mul!(tmp5611, tmp5610, q[6N + 10], ord)
        TaylorSeries.add!(N_cmb_2, tmp5609, tmp5611, ord)
        TaylorSeries.subst!(tmp5613, q[6N + 12], q[6N + 6], ord)
        TaylorSeries.mul!(N_cmb_3, k_ν, tmp5613, ord)
        TaylorSeries.mul!(tmp5615, μ[mo], N_1_LMF, ord)
        TaylorSeries.add!(tmp5616, N_MfigM_figE_1, tmp5615, ord)
        TaylorSeries.add!(tmp5617, tmp5616, N_cmb_1, ord)
        TaylorSeries.add!(tmp5618, dIω_x, ωxIω_x, ord)
        TaylorSeries.subst!(I_dω_1, tmp5617, tmp5618, ord)
        TaylorSeries.mul!(tmp5620, μ[mo], N_2_LMF, ord)
        TaylorSeries.add!(tmp5621, N_MfigM_figE_2, tmp5620, ord)
        TaylorSeries.add!(tmp5622, tmp5621, N_cmb_2, ord)
        TaylorSeries.add!(tmp5623, dIω_y, ωxIω_y, ord)
        TaylorSeries.subst!(I_dω_2, tmp5622, tmp5623, ord)
        TaylorSeries.mul!(tmp5625, μ[mo], N_3_LMF, ord)
        TaylorSeries.add!(tmp5626, N_MfigM_figE_3, tmp5625, ord)
        TaylorSeries.add!(tmp5627, tmp5626, N_cmb_3, ord)
        TaylorSeries.add!(tmp5628, dIω_z, ωxIω_z, ord)
        TaylorSeries.subst!(I_dω_3, tmp5627, tmp5628, ord)
        TaylorSeries.mul!(Ic_ωc_1, I_c_t[1, 1], q[6N + 10], ord)
        TaylorSeries.mul!(Ic_ωc_2, I_c_t[2, 2], q[6N + 11], ord)
        TaylorSeries.mul!(Ic_ωc_3, I_c_t[3, 3], q[6N + 12], ord)
        TaylorSeries.mul!(tmp5633, q[6N + 6], Ic_ωc_2, ord)
        TaylorSeries.mul!(tmp5634, q[6N + 5], Ic_ωc_3, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_1, tmp5633, tmp5634, ord)
        TaylorSeries.mul!(tmp5636, q[6N + 4], Ic_ωc_3, ord)
        TaylorSeries.mul!(tmp5637, q[6N + 6], Ic_ωc_1, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_2, tmp5636, tmp5637, ord)
        TaylorSeries.mul!(tmp5639, q[6N + 5], Ic_ωc_1, ord)
        TaylorSeries.mul!(tmp5640, q[6N + 4], Ic_ωc_2, ord)
        TaylorSeries.subst!(m_ωm_x_Icωc_3, tmp5639, tmp5640, ord)
        TaylorSeries.subst!(Ic_dωc_1, m_ωm_x_Icωc_1, N_cmb_1, ord)
        TaylorSeries.subst!(Ic_dωc_2, m_ωm_x_Icωc_2, N_cmb_2, ord)
        TaylorSeries.subst!(Ic_dωc_3, m_ωm_x_Icωc_3, N_cmb_3, ord)
        TaylorSeries.sincos!(tmp5645, tmp5725, q[6N + 3], ord)
        TaylorSeries.mul!(tmp5646, q[6N + 4], tmp5645, ord)
        TaylorSeries.sincos!(tmp5726, tmp5647, q[6N + 3], ord)
        TaylorSeries.mul!(tmp5648, q[6N + 5], tmp5647, ord)
        TaylorSeries.add!(tmp5649, tmp5646, tmp5648, ord)
        TaylorSeries.sincos!(tmp5650, tmp5727, q[6N + 2], ord)
        TaylorSeries.div!(dq[6N + 1], tmp5649, tmp5650, ord)
        TaylorSeries.sincos!(tmp5728, tmp5652, q[6N + 3], ord)
        TaylorSeries.mul!(tmp5653, q[6N + 4], tmp5652, ord)
        TaylorSeries.sincos!(tmp5654, tmp5729, q[6N + 3], ord)
        TaylorSeries.mul!(tmp5655, q[6N + 5], tmp5654, ord)
        TaylorSeries.subst!(dq[6N + 2], tmp5653, tmp5655, ord)
        TaylorSeries.sincos!(tmp5730, tmp5657, q[6N + 2], ord)
        TaylorSeries.mul!(tmp5658, dq[6N + 1], tmp5657, ord)
        TaylorSeries.subst!(dq[6N + 3], q[6N + 6], tmp5658, ord)
        TaylorSeries.mul!(tmp5660, inv_I_m_t[1, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp5661, inv_I_m_t[1, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp5662, inv_I_m_t[1, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp5663, tmp5661, tmp5662, ord)
        TaylorSeries.add!(dq[6N + 4], tmp5660, tmp5663, ord)
        TaylorSeries.mul!(tmp5665, inv_I_m_t[2, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp5666, inv_I_m_t[2, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp5667, inv_I_m_t[2, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp5668, tmp5666, tmp5667, ord)
        TaylorSeries.add!(dq[6N + 5], tmp5665, tmp5668, ord)
        TaylorSeries.mul!(tmp5670, inv_I_m_t[3, 1], I_dω_1, ord)
        TaylorSeries.mul!(tmp5671, inv_I_m_t[3, 2], I_dω_2, ord)
        TaylorSeries.mul!(tmp5672, inv_I_m_t[3, 3], I_dω_3, ord)
        TaylorSeries.add!(tmp5673, tmp5671, tmp5672, ord)
        TaylorSeries.add!(dq[6N + 6], tmp5670, tmp5673, ord)
        TaylorSeries.sincos!(tmp5675, tmp5731, q[6N + 8], ord)
        TaylorSeries.div!(tmp5676, ω_c_CE_2, tmp5675, ord)
        TaylorSeries.subst!(dq[6N + 9], tmp5676, ord)
        TaylorSeries.sincos!(tmp5732, tmp5678, q[6N + 8], ord)
        TaylorSeries.mul!(tmp5679, dq[6N + 9], tmp5678, ord)
        TaylorSeries.subst!(dq[6N + 7], ω_c_CE_3, tmp5679, ord)
        TaylorSeries.identity!(dq[6N + 8], ω_c_CE_1, ord)
        TaylorSeries.mul!(dq[6N + 10], inv_I_c_t[1, 1], Ic_dωc_1, ord)
        TaylorSeries.mul!(dq[6N + 11], inv_I_c_t[2, 2], Ic_dωc_2, ord)
        TaylorSeries.mul!(dq[6N + 12], inv_I_c_t[3, 3], Ic_dωc_3, ord)
        TaylorSeries.identity!(dq[6N + 13], zero_q_1, ord)
        for __idx = eachindex(q)
            (q[__idx]).coeffs[ordnext + 1] = (dq[__idx]).coeffs[ordnext] / ordnext
        end
    end
    return nothing
end